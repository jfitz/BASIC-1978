10 REM TEST CALCULATIONS WITH CONSTANT VALUES
 Remark:TEST CALCULATIONS WITH CONSTANT VALUES
11 OPTION CACHE_CONST_EXPR FALSE
 BooleanConstant:false
12 PRINT "NO CACHING"
 TextConstant:"NO CACHING"
 CarriageControl:NL
20 GOSUB 100
 LineNumber:100
21 PRINT "END 1"
 TextConstant:"END 1"
 CarriageControl:NL
22 GOSUB 100
 LineNumber:100
23 PRINT "END 2"
 TextConstant:"END 2"
 CarriageControl:NL
24 GOSUB 100
 LineNumber:100
25 PRINT "END 3"
 TextConstant:"END 3"
 CarriageControl:NL
26 GOSUB 100
 LineNumber:100
29 PRINT "FINISHED"
 TextConstant:"FINISHED"
 CarriageControl:NL
50 REM NOW TEST WITH CACHING
 Remark:NOW TEST WITH CACHING
51 OPTION CACHE_CONST_EXPR TRUE
 BooleanConstant:true
52 PRINT "CACHING ENABLED"
 TextConstant:"CACHING ENABLED"
 CarriageControl:NL
60 GOSUB 200
 LineNumber:200
61 PRINT "END 1"
 TextConstant:"END 1"
 CarriageControl:NL
62 GOSUB 200
 LineNumber:200
63 PRINT "END 2"
 TextConstant:"END 2"
 CarriageControl:NL
64 GOSUB 200
 LineNumber:200
65 PRINT "END 3"
 TextConstant:"END 3"
 CarriageControl:NL
66 GOSUB 200
 LineNumber:200
69 PRINT "FINISHED"
 TextConstant:"FINISHED"
 CarriageControl:NL
99 STOP
 
100 REM PROC A
 Remark:PROC A
110 FOR I = 1 TO 1000
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:1000"]
120 LET A = 1*2*3*4*5*6*7*8*9*10
 Variable:A -> _
 NumericConstant:1
 NumericConstant:2
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:3
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:4
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:5
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:6
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:7
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:8
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:9
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:10
 BinaryOperatorMultiply:*(_,_) -> =_
 AssignmentOperator:= =_ -> _
130 NEXT I
 Variable:I -> _
190 RETURN
 
200 REM PROC A
 Remark:PROC A
210 FOR I = 1 TO 1000
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:1000"]
220 LET A = 1*2*3*4*5*6*7*8*9*10
 Variable:A -> _
 NumericConstant:1
 NumericConstant:2
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:3
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:4
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:5
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:6
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:7
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:8
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:9
 BinaryOperatorMultiply:*(_,_) -> =_
 NumericConstant:10
 BinaryOperatorMultiply:*(_,_) -> =_
 AssignmentOperator:= =_ -> _
230 NEXT I
 Variable:I -> _
290 RETURN
 
399 END
 

