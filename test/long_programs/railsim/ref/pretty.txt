2 REM RAIL SIMULATION
10 REM ********** INITIALIZATION
11 REM ***** OPTIONS
12 OPTION REQUIRE_INITIALIZED TRUE
13 OPTION BASE 1
14 OPTION PRINT_WIDTH 132
20 REM ***** FUNCTIONS
21 REM FORMAT TIME INTO STRING
22 DEF FNH$(T) = RIGHT$("0" + STR$(INT(T / 3600)), 2) + ":" + RIGHT$("0" + STR$(INT(MOD(T, 3600) / 60)), 2) + ":" + RIGHT$("0" + STR$(MOD(T, 60)), 2)
23 REM CALCULATE STOPPING TIME
24 DEF FNS(V, A) = 2.0 * (ABS(V) / ABS(A))
25 REM CALCULATE STOPPING DISTANCE
26 DEF FND(V, A, T) = V * T + 0.5 * (A) * T ^ 2
90 REM ***** DATA
91 REM NUMBER OF STATIONS, POSITIONS (in meters), NAMES
92 DATA 2
93 DATA 0, 8.0E3
94 DATA "HOBOKEN", "SEACAUCUS"
95 REM NUMBER OF TRACK SPEED SIGNS, POSITIONS (in meters) AND VALUES
96 DATA 6
97 DATA 0, 5, 1.0E3, 20, 1.5E3, 40, 2.0E3, 60, 2.5E3, 30, 3.0E3, 60
100 REM ***** STATIONS
101 READ K0
110 DIM K(K0), K$(K0)
111 ARR READ K, K$
120 REM ***** TRAINSET
121 REM ACCELERATION (meters/second^2)
122 LET A0 = 1.0
123 REM MAX VELOCITY (meters/second)
124 LET V9 = 80
150 REM ***** SPEED SIGNALS
151 READ P0
152 DIM P(P0, 2)
153 MAT READ P
200 REM ********** ONE TRIP
201 LET X = K(1)
202 LET V = 0
290 PRINT "T  "; "TIME "; "X  "; "V  "; "A  "; "T5 "; "X5 "; "K(2) "; "STATUS"
299 LET T = 17 * 60 * 60 + 2 * 60
1000 REM ********* LOOP
1001 LET S$ = ""
1010 REM COMPUTE STOPPING TIME
1011 LET T5 = FNS(V, A0)
1020 REM COMPUTE STOPPING DISTANCE
1021 LET X5 = FND(V, A0, T5)
1200 REM *** SET MAX SPEED FOR STATION APPROACH
1201 LET V8 = V9
1202 FOR I = 1 TO K0
1203 IF X < K(I) AND X + X5 >= K(I) THEN 1206
1204 LET V8 = 0
1205 LET S$ = "APPROACHING " + K$(I)
1206 NEXT I
1210 REM *** SET MAX SPEED FROM SIGNAL
1211 LET V7 = V
1212 FOR I = 1 TO P0
1213 IF P(I, 1) <= X THEN V7 = P(I, 2)
1219 NEXT I
1290 REM ***** SET MAX SPEED
1291 LET V5 = V9
1292 IF V5 > V8 THEN LET V5 = V8
1293 IF V5 > V7 THEN LET V5 = V7
1700 REM ***** ADJUST SPEED
1711 IF V > V5 THEN 1740
1712 IF V < V5 THEN 1730
1720 REM CONTINUE AT CURRENT SPEED
1721 LET A = 0
1729 GOTO 1799
1730 REM INCREASE SPEED
1731 LET A = A0
1739 GOTO 1790
1740 REM BRAKE
1741 LET A = -A0
1742 LET S$ = S$ + " BRAKING"
1790 LET V = V + A
1799 REM CONTINUE
1900 REM ***** CHECK SPEED
1901 IF V >= 0 THEN 1910
1902 LET V = 0
1910 REM ***** MOVE THE TRAIN
1911 LET X = X + V
1970 REM ***** REPORT TIME, POSITION, AND SPEED
1971 LET T$ = FNH$(T)
1972 PRINT T; T$; X; V; A; T5; X5; K(2); S$
1980 REM ***** END OF LOOP
1981 IF X >= K(2) THEN 9997
1990 REM STEP INTO FUTURE
1991 LET T = T + 1
1999 GOTO 1000
9997 REM ********** END OF SIMULATION
9998 STOP
9999 END

