                              ONE CHECK
               CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY



SOLITAIRE CHECKER PUZZLE BY DAVID AHL

48 CHECKERS ARE PLACED ON THE 2 OUTSIDE SPACES OF A
STANDARD 64-SQUARE CHECKERBOARD.  THE OBJECT IS TO
REMOVE AS MANY CHECKERS AS POSSIBLE BY DIAGONAL JUMPS
(AS IN STANDARD CHECKERS).  USE THE NUMBERED BOARD TO
INDICATE THE SQUARE YOU WISH TO JUMP FROM AND TO.  ON
THE BOARD PRINTED OUT ON EACH TURN '1' INDICATES A
CHECKER AND '0' AN EMPTY SQUARE.  WHEN YOU HAVE NO
POSSIBLE JUMPS REMAINING, INPUT A '0' IN RESPONSE TO
QUESTION 'JUMP FROM ?'

HERE IS THE NUMERICAL BOARD:

 1   2   3   4   5   6   7   8
 9   10  11  12  13  14  15  16
 17  18  19  20  21  22  23  24
 25  26  27  28  29  30  31  32
 33  34  35  36  37  38  39  40
 41  42  43  44  45  46  47  48
 49  50  51  52  53  54  55  56
 57  58  59  60  61  62  63  64

AND HERE IS THE OPENING POSITION OF THE CHECKERS.

 1  1  1  1  1  1  1  1 
 1  1  1  1  1  1  1  1 
 1  1  0  0  0  0  1  1 
 1  1  0  0  0  0  1  1 
 1  1  0  0  0  0  1  1 
 1  1  0  0  0  0  1  1 
 1  1  1  1  1  1  1  1 
 1  1  1  1  1  1  1  1 

JUMP FROM? 1
TO? 19

 0  1  1  1  1  1  1  1 
 1  0  1  1  1  1  1  1 
 1  1  1  0  0  0  1  1 
 1  1  0  0  0  0  1  1 
 1  1  0  0  0  0  1  1 
 1  1  0  0  0  0  1  1 
 1  1  1  1  1  1  1  1 
 1  1  1  1  1  1  1  1 

JUMP FROM? 2
TO? 20

 0  0  1  1  1  1  1  1 
 1  0  0  1  1  1  1  1 
 1  1  1  1  0  0  1  1 
 1  1  0  0  0  0  1  1 
 1  1  0  0  0  0  1  1 
 1  1  0  0  0  0  1  1 
 1  1  1  1  1  1  1  1 
 1  1  1  1  1  1  1  1 

JUMP FROM? 3
TO? 21

 0  0  0  1  1  1  1  1 
 1  0  0  0  1  1  1  1 
 1  1  1  1  1  0  1  1 
 1  1  0  0  0  0  1  1 
 1  1  0  0  0  0  1  1 
 1  1  0  0  0  0  1  1 
 1  1  1  1  1  1  1  1 
 1  1  1  1  1  1  1  1 

JUMP FROM? 4
TO? 22

 0  0  0  0  1  1  1  1 
 1  0  0  0  0  1  1  1 
 1  1  1  1  1  1  1  1 
 1  1  0  0  0  0  1  1 
 1  1  0  0  0  0  1  1 
 1  1  0  0  0  0  1  1 
 1  1  1  1  1  1  1  1 
 1  1  1  1  1  1  1  1 

JUMP FROM? 
Error 102 End of file in line 100

2.0 (1) PRINT TAB(30); "ONE CHECK"
4.0 (1) PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
6.0 (1) PRINT
6.1 (1) PRINT
6.2 (1) PRINT
8.0 (1) DIM A(64)
10.0 (1) PRINT "SOLITAIRE CHECKER PUZZLE BY DAVID AHL"
15.0 (1) PRINT
20.0 (1) PRINT "48 CHECKERS ARE PLACED ON THE 2 OUTSIDE SPACES OF A"
25.0 (1) PRINT "STANDARD 64-SQUARE CHECKERBOARD.  THE OBJECT IS TO"
30.0 (1) PRINT "REMOVE AS MANY CHECKERS AS POSSIBLE BY DIAGONAL JUMPS"
35.0 (1) PRINT "(AS IN STANDARD CHECKERS).  USE THE NUMBERED BOARD TO"
40.0 (1) PRINT "INDICATE THE SQUARE YOU WISH TO JUMP FROM AND TO.  ON"
45.0 (1) PRINT "THE BOARD PRINTED OUT ON EACH TURN '1' INDICATES A"
50.0 (1) PRINT "CHECKER AND '0' AN EMPTY SQUARE.  WHEN YOU HAVE NO"
55.0 (1) PRINT "POSSIBLE JUMPS REMAINING, INPUT A '0' IN RESPONSE TO"
60.0 (1) PRINT "QUESTION 'JUMP FROM ?'"
62.0 (1) PRINT
63.0 (1) PRINT "HERE IS THE NUMERICAL BOARD:"
66.0 (1) PRINT
70.0 (1) FOR J = 1 TO 57 STEP 8
74.0 (8) PRINT J; TAB(4); J + 1; TAB(8); J + 2; TAB(12); J + 3; TAB(16); J + 4; TAB(20); J + 5;
75.0 (8) PRINT TAB(24); J + 6; TAB(28); J + 7
76.0 (8) NEXT J
77.0 (1) PRINT
78.0 (1) PRINT "AND HERE IS THE OPENING POSITION OF THE CHECKERS."
79.0 (1) PRINT
80.0 (1) FOR J = 1 TO 64
82.0 (64) A(J) = 1
84.0 (64) NEXT J
86.0 (1) FOR J = 19 TO 43 STEP 8
88.0 (4) FOR I = J TO J + 3
90.0 (16) A(I) = 0
92.0 (16) NEXT I
94.0 (4) NEXT J
96.0 (1) M = 0
98.0 (1) GOTO 340
100.0 (4) INPUT "JUMP FROM"; F
105.0 (4) IF F = 0 THEN 500
110.0 (4) INPUT "TO"; T
112.0 (4) PRINT
118.0 (4) REM *** CHECK LEGALITY OF MOVE
120.0 (4) F1 = INT((F - 1) / 8)
130.0 (4) F2 = F - 8 * F1
140.0 (4) T1 = INT((T - 1) / 8)
150.0 (4) T2 = T - 8 * T1
160.0 (4) IF F1 > 7 THEN 230
170.0 (4) IF T1 > 7 THEN 230
180.0 (4) IF F2 > 8 THEN 230
190.0 (4) IF T2 > 8 THEN 230
200.0 (4) IF ABS(F1 - T1) <> 2 THEN 230
210.0 (4) IF ABS(F2 - T2) <> 2 THEN 230
212.0 (4) IF A((T + F) / 2) = 0 THEN 230
215.0 (4) IF A(F) = 0 THEN 230
220.0 (4) IF A(T) = 1 THEN 230
225.0 (4) GOTO 250
230.0 (0) PRINT "ILLEGAL MOVE.  TRY AGAIN..."
240.0 (0) GOTO 100
245.0 (0) REM *** UPDATE BOARD
250.0 (4) A(T) = 1
260.0 (4) A(F) = 0
270.0 (4) A((T + F) / 2) = 0
290.0 (4) M = M + 1
310.0 (4) REM *** PRINT BOARD
340.0 (5) FOR J = 1 TO 57 STEP 8
350.0 (40) FOR I = J TO J + 7
360.0 (320) PRINT A(I);
370.0 (320) NEXT I
380.0 (40) PRINT
390.0 (40) NEXT J
400.0 (5) PRINT
410.0 (5) GOTO 100
490.0 (0) REM *** END GAME SUMMARY
500.0 (0) S = 0
510.0 (0) FOR I = 1 TO 64
520.0 (0) S = S + A(I)
530.0 (0) NEXT I
540.0 (0) PRINT
540.1 (0) PRINT "YOU MADE"; M; "JUMPS AND HAD"; S; "PIECES"
550.0 (0) PRINT "REMAINING ON THE BOARD."
560.0 (0) PRINT
562.0 (0) INPUT "TRY AGAIN"; A$
570.0 (0) IF A$ = "YES" THEN 70
575.0 (0) IF A$ = "NO" THEN 600
580.0 (0) PRINT "PLEASE ANSWER 'YES' OR 'NO'."
590.0 (0) GOTO 562
600.0 (0) PRINT
610.0 (0) PRINT "O.K.  HOPE YOU HAD FUN!!"
999.0 (0) END

