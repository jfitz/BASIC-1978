Statistics:

Number of lines: 86
Number of valid statements: 85
Number of comments: 4
Number of executable statements: 85

Complexity:

Comment density: 0.047
Comprehension effort: 266
McCabe complexity: 23
Halstead complexity:
 length: 343
 volume: 1565.571
 difficulty: 21.000
 effort: 32877.000
 language: 3.550
 intelligence: 74.551
 time: 30.442

2 (0 4) PRINT TAB(30); "ONE CHECK"
  Origs: :start
  Dests: 4:auto
4 (0 4) PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 2:auto
  Dests: 6:auto
6 (0 2) PRINT
  (0 2) PRINT
  (0 2) PRINT
  Origs: 4:auto
  Dests: 8:auto
8 (0 2) DIM A(64)
  Origs: 6:auto
  Dests: 10:auto
10 (0 2) PRINT "SOLITAIRE CHECKER PUZZLE BY DAVID AHL"
  Origs: 8:auto
  Dests: 15:auto
15 (0 2) PRINT
  Origs: 10:auto
  Dests: 20:auto
20 (0 2) PRINT "48 CHECKERS ARE PLACED ON THE 2 OUTSIDE SPACES OF A"
  Origs: 15:auto
  Dests: 25:auto
25 (0 2) PRINT "STANDARD 64-SQUARE CHECKERBOARD.  THE OBJECT IS TO"
  Origs: 20:auto
  Dests: 30:auto
30 (0 2) PRINT "REMOVE AS MANY CHECKERS AS POSSIBLE BY DIAGONAL JUMPS"
  Origs: 25:auto
  Dests: 35:auto
35 (0 2) PRINT "(AS IN STANDARD CHECKERS).  USE THE NUMBERED BOARD TO"
  Origs: 30:auto
  Dests: 40:auto
40 (0 2) PRINT "INDICATE THE SQUARE YOU WISH TO JUMP FROM AND TO.  ON"
  Origs: 35:auto
  Dests: 45:auto
45 (0 2) PRINT "THE BOARD PRINTED OUT ON EACH TURN '1' INDICATES A"
  Origs: 40:auto
  Dests: 50:auto
50 (0 2) PRINT "CHECKER AND '0' AN EMPTY SQUARE.  WHEN YOU HAVE NO"
  Origs: 45:auto
  Dests: 55:auto
55 (0 2) PRINT "POSSIBLE JUMPS REMAINING, INPUT A '0' IN RESPONSE TO"
  Origs: 50:auto
  Dests: 60:auto
60 (0 2) PRINT "QUESTION 'JUMP FROM ?'"
  Origs: 55:auto
  Dests: 62:auto
62 (0 2) PRINT
  Origs: 60:auto
  Dests: 63:auto
63 (0 2) PRINT "HERE IS THE NUMERICAL BOARD:"
  Origs: 62:auto
  Dests: 66:auto
66 (0 2) PRINT
  Origs: 63:auto
  Dests: 70:auto
70 F(J) (1 4) FOR J = 1 TO 57 STEP 8
  Origs: 66:auto, 570:ifthen
  Dests: 74:fornext, 76:fornext
74 F(J) (0 22) PRINT J; TAB(4); J + 1; TAB(8); J + 2; TAB(12); J + 3; TAB(16); J + 4; TAB(20); J + 5;
  Origs: 70:fornext
  Dests: 75:auto
75 F(J) (0 9) PRINT TAB(24); J + 6; TAB(28); J + 7
  Origs: 74:auto
  Dests: 76:auto
76 F(J) (0 1) NEXT J
  Origs: 70:fornext, 75:auto
  Dests: 77:auto
77 (0 2) PRINT
  Origs: 76:auto
  Dests: 78:auto
78 (0 2) PRINT "AND HERE IS THE OPENING POSITION OF THE CHECKERS."
  Origs: 77:auto
  Dests: 79:auto
79 (0 2) PRINT
  Origs: 78:auto
  Dests: 80:auto
80 F(J) (1 3) FOR J = 1 TO 64
  Origs: 79:auto
  Dests: 82:fornext, 84:fornext
82 F(J) (0 3) A(J) = 1
  Origs: 80:fornext
  Dests: 84:auto
84 F(J) (0 1) NEXT J
  Origs: 80:fornext, 82:auto
  Dests: 86:auto
86 F(J) (1 4) FOR J = 19 TO 43 STEP 8
  Origs: 84:auto
  Dests: 88:fornext, 94:fornext
88 F(J,I) (1 4) FOR I = J TO J + 3
  Origs: 86:fornext
  Dests: 90:fornext, 92:fornext
90 F(J,I) (0 3) A(I) = 0
  Origs: 88:fornext
  Dests: 92:auto
92 F(J,I) (0 1) NEXT I
  Origs: 88:fornext, 90:auto
  Dests: 94:auto
94 F(J) (0 1) NEXT J
  Origs: 86:fornext, 92:auto
  Dests: 96:auto
96 (0 3) M = 0
  Origs: 94:auto
  Dests: 98:auto
98 (0 2) GOTO 340
  Origs: 96:auto
  Dests: 340:goto
100 (1 2) INPUT "JUMP FROM"; F
  Origs: 240:goto, 410:goto
  Dests: 105:auto
105 (1 4) IF F = 0 THEN 500
  Origs: 100:auto
  Dests: 110:auto, 500:ifthen
110 (1 2) INPUT "TO"; T
  Origs: 105:auto
  Dests: 112:auto
112 (0 2) PRINT
  Origs: 110:auto
  Dests: 120:auto
118 (0 1) REM *** CHECK LEGALITY OF MOVE
  Origs: 
  Dests: 
120 (0 4) F1 = INT((F - 1) / 8)
  Origs: 112:auto
  Dests: 130:auto
130 (0 6) F2 = F - 8 * F1
  Origs: 120:auto
  Dests: 140:auto
140 (0 4) T1 = INT((T - 1) / 8)
  Origs: 130:auto
  Dests: 150:auto
150 (0 6) T2 = T - 8 * T1
  Origs: 140:auto
  Dests: 160:auto
160 (1 4) IF F1 > 7 THEN 230
  Origs: 150:auto
  Dests: 170:auto, 230:ifthen
170 (1 4) IF T1 > 7 THEN 230
  Origs: 160:auto
  Dests: 180:auto, 230:ifthen
180 (1 4) IF F2 > 8 THEN 230
  Origs: 170:auto
  Dests: 190:auto, 230:ifthen
190 (1 4) IF T2 > 8 THEN 230
  Origs: 180:auto
  Dests: 200:auto, 230:ifthen
200 (1 5) IF ABS(F1 - T1) <> 2 THEN 230
  Origs: 190:auto
  Dests: 210:auto, 230:ifthen
210 (1 5) IF ABS(F2 - T2) <> 2 THEN 230
  Origs: 200:auto
  Dests: 212:auto, 230:ifthen
212 (1 4) IF A((T + F) / 2) = 0 THEN 230
  Origs: 210:auto
  Dests: 215:auto, 230:ifthen
215 (1 4) IF A(F) = 0 THEN 230
  Origs: 212:auto
  Dests: 220:auto, 230:ifthen
220 (1 4) IF A(T) = 1 THEN 230
  Origs: 215:auto
  Dests: 225:auto, 230:ifthen
225 (0 2) GOTO 250
  Origs: 220:auto
  Dests: 250:goto
230 (0 2) PRINT "ILLEGAL MOVE.  TRY AGAIN..."
  Origs: 160:ifthen, 170:ifthen, 180:ifthen, 190:ifthen, 200:ifthen, 210:ifthen, 212:ifthen, 215:ifthen, 220:ifthen
  Dests: 240:auto
240 (0 3) GOTO 100
  Origs: 230:auto
  Dests: 100:goto
245 (0 1) REM *** UPDATE BOARD
  Origs: 
  Dests: 
250 (0 3) A(T) = 1
  Origs: 225:goto
  Dests: 260:auto
260 (0 3) A(F) = 0
  Origs: 250:auto
  Dests: 270:auto
270 (0 3) A((T + F) / 2) = 0
  Origs: 260:auto
  Dests: 290:auto
290 (0 4) M = M + 1
  Origs: 270:auto
  Dests: 340:auto
310 (0 1) REM *** PRINT BOARD
  Origs: 
  Dests: 
340 F(J) (1 4) FOR J = 1 TO 57 STEP 8
  Origs: 98:goto, 290:auto
  Dests: 350:fornext, 390:fornext
350 F(J,I) (1 4) FOR I = J TO J + 7
  Origs: 340:fornext
  Dests: 360:fornext, 370:fornext
360 F(J,I) (0 2) PRINT A(I);
  Origs: 350:fornext
  Dests: 370:auto
370 F(J,I) (0 1) NEXT I
  Origs: 350:fornext, 360:auto
  Dests: 380:auto
380 F(J) (0 2) PRINT
  Origs: 370:auto
  Dests: 390:auto
390 F(J) (0 1) NEXT J
  Origs: 340:fornext, 380:auto
  Dests: 400:auto
400 (0 2) PRINT
  Origs: 390:auto
  Dests: 410:auto
410 (0 3) GOTO 100
  Origs: 400:auto
  Dests: 100:goto
490 (0 1) REM *** END GAME SUMMARY
  Origs: 
  Dests: 
500 (0 3) S = 0
  Origs: 105:ifthen
  Dests: 510:auto
510 F(I) (1 3) FOR I = 1 TO 64
  Origs: 500:auto
  Dests: 520:fornext, 530:fornext
520 F(I) (0 4) S = S + A(I)
  Origs: 510:fornext
  Dests: 530:auto
530 F(I) (0 1) NEXT I
  Origs: 510:fornext, 520:auto
  Dests: 540:auto
540 (0 2) PRINT
    (0 6) PRINT "YOU MADE"; M; "JUMPS AND HAD"; S; "PIECES"
  Origs: 530:auto
  Dests: 550:auto
550 (0 2) PRINT "REMAINING ON THE BOARD."
  Origs: 540:auto
  Dests: 560:auto
560 (0 2) PRINT
  Origs: 550:auto
  Dests: 562:auto
562 (1 2) INPUT "TRY AGAIN"; A$
  Origs: 560:auto, 590:goto
  Dests: 570:auto
570 (1 5) IF A$ = "YES" THEN 70
  Origs: 562:auto
  Dests: 70:ifthen, 575:auto
575 (1 4) IF A$ = "NO" THEN 600
  Origs: 570:auto
  Dests: 580:auto, 600:ifthen
580 (0 2) PRINT "PLEASE ANSWER 'YES' OR 'NO'."
  Origs: 575:auto
  Dests: 590:auto
590 (0 3) GOTO 562
  Origs: 580:auto
  Dests: 562:goto
600 (0 2) PRINT
  Origs: 575:ifthen
  Dests: 610:auto
610 (0 2) PRINT "O.K.  HOPE YOU HAD FUN!!"
  Origs: 600:auto
  Dests: 999:auto
999 (0 1) END
  Origs: 610:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

