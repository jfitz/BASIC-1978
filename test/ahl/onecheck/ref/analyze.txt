Statistics:

Number of lines: 86
Number of valid statements: 85
Number of comments: 4
Number of executable statements: 84

Complexity:

Comment density: 0.047
Comprehension effort: 266
McCabe complexity: 23
Halstead complexity:
 length: 343
 volume: 1565.571
 difficulty: 21.000
 effort: 32877.000
 language: 3.550
 intelligence: 74.551
 time: 30.442

(0 4) 2 PRINT TAB(30); "ONE CHECK"
  Origs: 
  Dests: 4
(0 4) 4 PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 2
  Dests: 6
(0 2) 6 PRINT
(0 2)   PRINT
(0 2)   PRINT
  Origs: 4
  Dests: 8
(0 2) 8 DIM A(64)
  Origs: 6
  Dests: 10
(0 2) 10 PRINT "SOLITAIRE CHECKER PUZZLE BY DAVID AHL"
  Origs: 8
  Dests: 15
(0 2) 15 PRINT
  Origs: 10
  Dests: 20
(0 2) 20 PRINT "48 CHECKERS ARE PLACED ON THE 2 OUTSIDE SPACES OF A"
  Origs: 15
  Dests: 25
(0 2) 25 PRINT "STANDARD 64-SQUARE CHECKERBOARD.  THE OBJECT IS TO"
  Origs: 20
  Dests: 30
(0 2) 30 PRINT "REMOVE AS MANY CHECKERS AS POSSIBLE BY DIAGONAL JUMPS"
  Origs: 25
  Dests: 35
(0 2) 35 PRINT "(AS IN STANDARD CHECKERS).  USE THE NUMBERED BOARD TO"
  Origs: 30
  Dests: 40
(0 2) 40 PRINT "INDICATE THE SQUARE YOU WISH TO JUMP FROM AND TO.  ON"
  Origs: 35
  Dests: 45
(0 2) 45 PRINT "THE BOARD PRINTED OUT ON EACH TURN '1' INDICATES A"
  Origs: 40
  Dests: 50
(0 2) 50 PRINT "CHECKER AND '0' AN EMPTY SQUARE.  WHEN YOU HAVE NO"
  Origs: 45
  Dests: 55
(0 2) 55 PRINT "POSSIBLE JUMPS REMAINING, INPUT A '0' IN RESPONSE TO"
  Origs: 50
  Dests: 60
(0 2) 60 PRINT "QUESTION 'JUMP FROM ?'"
  Origs: 55
  Dests: 62
(0 2) 62 PRINT
  Origs: 60
  Dests: 63
(0 2) 63 PRINT "HERE IS THE NUMERICAL BOARD:"
  Origs: 62
  Dests: 66
(0 2) 66 PRINT
  Origs: 63
  Dests: 70
(1 4) 70 FOR J = 1 TO 57 STEP 8
  Origs: 66, 570
  Dests: 74
(0 22) 74 PRINT J; TAB(4); J + 1; TAB(8); J + 2; TAB(12); J + 3; TAB(16); J + 4; TAB(20); J + 5;
  Origs: 70
  Dests: 75
(0 9) 75 PRINT TAB(24); J + 6; TAB(28); J + 7
  Origs: 74
  Dests: 76
(0 1) 76 NEXT J
  Origs: 75
  Dests: 77
(0 2) 77 PRINT
  Origs: 76
  Dests: 78
(0 2) 78 PRINT "AND HERE IS THE OPENING POSITION OF THE CHECKERS."
  Origs: 77
  Dests: 79
(0 2) 79 PRINT
  Origs: 78
  Dests: 80
(1 3) 80 FOR J = 1 TO 64
  Origs: 79
  Dests: 82
(0 3) 82 A(J) = 1
  Origs: 80
  Dests: 84
(0 1) 84 NEXT J
  Origs: 82
  Dests: 86
(1 4) 86 FOR J = 19 TO 43 STEP 8
  Origs: 84
  Dests: 88
(1 4) 88 FOR I = J TO J + 3
  Origs: 86
  Dests: 90
(0 3) 90 A(I) = 0
  Origs: 88
  Dests: 92
(0 1) 92 NEXT I
  Origs: 90
  Dests: 94
(0 1) 94 NEXT J
  Origs: 92
  Dests: 96
(0 3) 96 M = 0
  Origs: 94
  Dests: 98
(0 2) 98 GOTO 340
  Origs: 96
  Dests: 340
(1 2) 100 INPUT "JUMP FROM"; F
  Origs: 240, 410
  Dests: 105
(1 4) 105 IF F = 0 THEN 500
  Origs: 100
  Dests: 110, 500
(1 2) 110 INPUT "TO"; T
  Origs: 105
  Dests: 112
(0 2) 112 PRINT
  Origs: 110
  Dests: 118
(0 1) 118 REM *** CHECK LEGALITY OF MOVE
  Origs: 112
  Dests: 120
(0 4) 120 F1 = INT((F - 1) / 8)
  Origs: 118
  Dests: 130
(0 6) 130 F2 = F - 8 * F1
  Origs: 120
  Dests: 140
(0 4) 140 T1 = INT((T - 1) / 8)
  Origs: 130
  Dests: 150
(0 6) 150 T2 = T - 8 * T1
  Origs: 140
  Dests: 160
(1 4) 160 IF F1 > 7 THEN 230
  Origs: 150
  Dests: 170, 230
(1 4) 170 IF T1 > 7 THEN 230
  Origs: 160
  Dests: 180, 230
(1 4) 180 IF F2 > 8 THEN 230
  Origs: 170
  Dests: 190, 230
(1 4) 190 IF T2 > 8 THEN 230
  Origs: 180
  Dests: 200, 230
(1 5) 200 IF ABS(F1 - T1) <> 2 THEN 230
  Origs: 190
  Dests: 210, 230
(1 5) 210 IF ABS(F2 - T2) <> 2 THEN 230
  Origs: 200
  Dests: 212, 230
(1 4) 212 IF A((T + F) / 2) = 0 THEN 230
  Origs: 210
  Dests: 215, 230
(1 4) 215 IF A(F) = 0 THEN 230
  Origs: 212
  Dests: 220, 230
(1 4) 220 IF A(T) = 1 THEN 230
  Origs: 215
  Dests: 225, 230
(0 2) 225 GOTO 250
  Origs: 220
  Dests: 250
(0 2) 230 PRINT "ILLEGAL MOVE.  TRY AGAIN..."
  Origs: 160, 170, 180, 190, 200, 210, 212, 215, 220
  Dests: 240
(0 3) 240 GOTO 100
  Origs: 230
  Dests: 100
(0 1) 245 REM *** UPDATE BOARD
  Origs: 
  Dests: 250
(0 3) 250 A(T) = 1
  Origs: 225, 245
  Dests: 260
(0 3) 260 A(F) = 0
  Origs: 250
  Dests: 270
(0 3) 270 A((T + F) / 2) = 0
  Origs: 260
  Dests: 290
(0 4) 290 M = M + 1
  Origs: 270
  Dests: 310
(0 1) 310 REM *** PRINT BOARD
  Origs: 290
  Dests: 340
(1 4) 340 FOR J = 1 TO 57 STEP 8
  Origs: 98, 310
  Dests: 350
(1 4) 350 FOR I = J TO J + 7
  Origs: 340
  Dests: 360
(0 2) 360 PRINT A(I);
  Origs: 350
  Dests: 370
(0 1) 370 NEXT I
  Origs: 360
  Dests: 380
(0 2) 380 PRINT
  Origs: 370
  Dests: 390
(0 1) 390 NEXT J
  Origs: 380
  Dests: 400
(0 2) 400 PRINT
  Origs: 390
  Dests: 410
(0 3) 410 GOTO 100
  Origs: 400
  Dests: 100
(0 1) 490 REM *** END GAME SUMMARY
  Origs: 
  Dests: 500
(0 3) 500 S = 0
  Origs: 105, 490
  Dests: 510
(1 3) 510 FOR I = 1 TO 64
  Origs: 500
  Dests: 520
(0 4) 520 S = S + A(I)
  Origs: 510
  Dests: 530
(0 1) 530 NEXT I
  Origs: 520
  Dests: 540
(0 2) 540 PRINT
(0 6)     PRINT "YOU MADE"; M; "JUMPS AND HAD"; S; "PIECES"
  Origs: 530
  Dests: 550
(0 2) 550 PRINT "REMAINING ON THE BOARD."
  Origs: 540
  Dests: 560
(0 2) 560 PRINT
  Origs: 550
  Dests: 562
(1 2) 562 INPUT "TRY AGAIN"; A$
  Origs: 560, 590
  Dests: 570
(1 5) 570 IF A$ = "YES" THEN 70
  Origs: 562
  Dests: 70, 575
(1 4) 575 IF A$ = "NO" THEN 600
  Origs: 570
  Dests: 580, 600
(0 2) 580 PRINT "PLEASE ANSWER 'YES' OR 'NO'."
  Origs: 575
  Dests: 590
(0 3) 590 GOTO 562
  Origs: 580
  Dests: 562
(0 2) 600 PRINT
  Origs: 575
  Dests: 610
(0 2) 610 PRINT "O.K.  HOPE YOU HAD FUN!!"
  Origs: 600
  Dests: 999
(0 1) 999 END
  Origs: 610
  Dests: 

Unreachable code:

All executable lines are reachable.

