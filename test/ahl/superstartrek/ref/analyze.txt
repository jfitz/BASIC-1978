Statistics:

Number of lines: 425
Number of valid statements: 810
Number of comments: 58
Number of executable statements: 808

Complexity:

Comment density: 0.072
Comprehension effort: 2925
McCabe complexity: 221
Halstead complexity:
 length: 3860
 volume: 24567.938
 difficulty: 80.883
 effort: 1987131.394
 language: 3.755
 intelligence: 303.746
 time: 1839.936

(0 1) 10 REM SUPER STARTREK - MAY 16,1978 - REQUIRES 24K MEMORY
(0 1) 30 REM
(0 1) 40 REM ****        **** STAR TREK ****        ****
(0 1) 50 REM **** SIMULATION OF A MISSION OF THE STARSHIP ENTERPRISE,
(0 1) 60 REM **** AS SEEN ON THE STAR TREK TV SHOW.
(0 1) 70 REM **** ORIGIONAL PROGRAM BY MIKE MAYFIELD, MODIFIED VERSION
(0 1) 80 REM **** PUBLISHED IN DEC'S "101 BASIC GAMES", BY DAVE AHL.
(0 1) 90 REM **** MODIFICATIONS TO THE LATTER (PLUS DEBUGGING) BY BOB
(0 1) 100 REM *** LEEDOM - APRIL & DECEMBER 1974,
(0 1) 110 REM *** WITH A LITTLE HELP FROM HIS FRIENDS . . .
(0 1) 120 REM *** COMMENTS, EPITHETS, AND SUGGESTIONS SOLICITED --
(0 1) 130 REM *** SEND TO:  R. C. LEEDOM
(0 1) 140 REM ***           WESTINGHOUSE DEFENSE & ELECTRONICS SYSTEMS CNTR.
(0 1) 150 REM ***           BOX 746, M.S. 338
(0 1) 160 REM ***           BALTIMORE, MD  21203
(0 1) 170 REM ***
(0 1) 180 REM *** CONVERTED TO MICROSOFT 8 K BASIC 3/16/78 BY JOHN GORDERS
(0 1) 190 REM *** LINE NUMBERS FROM VERSION STREK7 OF 1/12/75 PRESERVED AS
(0 1) 200 REM *** MUCH AS POSSIBLE WHILE USING MULTIPLE STATEMENTS PER LINE
(0 1) 205 REM *** SOME LINES ARE LONGER THAN 72 CHARACTERS; THIS WAS DONE
(0 1) 210 REM *** BY USING "?" INSTEAD OF "PRINT" WHEN ENTERING LINES
(0 1) 215 REM ***
(0 2) 220 PRINT
(0 2)     PRINT
(0 2)     PRINT
(0 2)     PRINT
(0 2)     PRINT
(0 2)     PRINT
(0 2)     PRINT
(0 2)     PRINT
(0 2)     PRINT
(0 2)     PRINT
(0 2)     PRINT
(0 2) 221 PRINT "                                    ,------*------,"
(0 2) 222 PRINT "                    ,-------------   '---  ------'"
(0 2) 223 PRINT "                     '-------- --'      / /"
(0 2) 224 PRINT "                         ,---' '-------/ /--,"
(0 2) 225 PRINT "                          '----------------'"
(0 2)     PRINT
(0 2) 226 PRINT "                    THE USS ENTERPRISE --- NCC-1701"
(0 2) 227 PRINT
(0 2)     PRINT
(0 2)     PRINT
(0 2)     PRINT
(0 2)     PRINT
(0 1) 260 REM CLEAR 600
(0 3) 270 Z$ = "                         "
(0 7) 330 DIM G(8, 8), C(9, 2), K(3, 3), N(3), Z(8, 8), D(8)
(0 5) 370 T = INT(RND(1) * 20 + 20) * 100
(0 3)     T0 = T
(0 5)     T9 = 25 + INT(RND(1) * 10)
(0 3)     D0 = 0
(0 3)     E = 3000
(0 3)     E0 = E
(0 3) 440 P = 10
(0 3)     P0 = P
(0 3)     S9 = 200
(0 3)     S = 0
(0 3)     B9 = 2
(0 3)     K9 = 0
(0 3)     X$ = ""
(0 3)     X0$ = " IS "
(0 3) 470 DEF FND(D) = SQR((K(I, 1) - S1) ^ 2 + (K(I, 2) - S2) ^ 2)
(0 3) 475 DEF FNR(R) = INT(RND(R) * 7.98 + 1.01)
(0 1) 480 REM INITIALIZE ENTERPRIZE'S POSITION
(0 5) 490 Q1 = FNR(1)
(0 5)     Q2 = FNR(1)
(0 5)     S1 = FNR(1)
(0 5)     S2 = FNR(1)
(1 3) 530 FOR I = 1 TO 9
(0 3)     C(I, 1) = 0
(0 3)     C(I, 2) = 0
(0 1)     NEXT I
(0 4) 540 C(3, 1) = -1
(0 4)     C(2, 1) = -1
(0 4)     C(4, 1) = -1
(0 4)     C(4, 2) = -1
(0 4)     C(5, 2) = -1
(0 4)     C(6, 2) = -1
(0 3) 600 C(1, 2) = 1
(0 3)     C(2, 2) = 1
(0 3)     C(6, 1) = 1
(0 3)     C(7, 1) = 1
(0 3)     C(8, 1) = 1
(0 3)     C(8, 2) = 1
(0 3)     C(9, 2) = 1
(1 3) 670 FOR I = 1 TO 8
(0 3)     D(I) = 0
(0 1)     NEXT I
(0 3) 710 A1$ = "NAVSRSLRSPHATORSHEDAMCOMXXX"
(0 1) 810 REM SETUP WHAT EXHISTS IN GALAXY . . .
(0 1) 815 REM K3= # KLINGONS  B3= # STARBASES  S3 = # STARS
(1 3) 820 FOR I = 1 TO 8
(1 3)     FOR J = 1 TO 8
(0 3)     K3 = 0
(0 3)     Z(I, J) = 0
(0 4)     R1 = RND(1)
(1 6) 850 IF R1 > .98 THEN K3 = 3
(0 4)     K9 = K9 + 3
(0 2)     GOTO 980
(1 6) 860 IF R1 > .95 THEN K3 = 2
(0 4)     K9 = K9 + 2
(0 2)     GOTO 980
(1 6) 870 IF R1 > .80 THEN K3 = 1
(0 4)     K9 = K9 + 1
(0 3) 980 B3 = 0
(1 7)     IF RND(1) > .96 THEN B3 = 1
(0 4)     B9 = B9 + 1
(0 10) 1040 G(I, J) = K3 * 100 + B3 * 10 + FNR(1)
(0 1)      NEXT J
(0 1)      NEXT I
(1 7)      IF K9 > T9 THEN T9 = K9 + 1
(1 4) 1100 IF B9 <> 0 THEN 1200
(1 7) 1150 IF G(Q1, Q2) < 200 THEN G(Q1, Q2) = G(Q1, Q2) + 120
(0 4)      K9 = K9 + 1
(0 3) 1160 B9 = 1
(0 4)      G(Q1, Q2) = G(Q1, Q2) + 10
(0 5)      Q1 = FNR(1)
(0 5)      Q2 = FNR(1)
(0 3) 1200 K7 = K9
(1 6)      IF B9 <> 1 THEN X$ = "S"
(0 3)      X0$ = " ARE "
(0 2) 1230 PRINT "YOUR ORDERS ARE AS FOLLOWS:"
(0 4) 1240 PRINT "     DESTROY THE"; K9; "KLINGON WARSHIPS WHICH HAVE INVADED"
(0 2) 1252 PRINT "   THE GALAXY BEFORE THEY CAN ATTACK FEDERATION HEADQUARTERS"
(0 8) 1260 PRINT "   ON STARDATE"; T0 + T9; "  THIS GIVES YOU"; T9; "DAYS.  THERE"; X0$
(0 6) 1272 PRINT "  "; B9; "STARBASE"; X$; " IN THE GALAXY FOR RESUPPLYING YOUR SHIP"
(0 2) 1280 PRINT
(0 1)      REM PRINT"HIT ANY KEY EXCEPT RETURN WHEN READY TO ACCEPT COMMAND"
(0 4) 1300 I = RND(1)
(0 1)      REM IF INP(1)=13 THEN 1300
(0 1) 1310 REM HERE ANY TIME NEW QUADRANT ENTERED
(0 3) 1320 Z4 = Q1
(0 3)      Z5 = Q2
(0 3)      K3 = 0
(0 3)      B3 = 0
(0 3)      S3 = 0
(0 3)      G5 = 0
(0 5)      D4 = .5 * RND(1)
(0 3)      Z(Q1, Q2) = G(Q1, Q2)
(1 13) 1390 IF Q1 < 1 OR Q1 > 8 OR Q2 < 1 OR Q2 > 8 THEN 1600
(0 2) 1430 GOSUB 9030
(0 2)      PRINT
(1 4)      IF T0 <> T THEN 1490
(0 2) 1460 PRINT "YOUR MISSION BEGINS WITH YOUR STARSHIP LOCATED"
(0 4) 1470 PRINT "IN THE GALACTIC QUADRANT, '"; G2$; "'."
(0 2)      GOTO 1500
(0 4) 1490 PRINT "NOW ENTERING "; G2$; " QUADRANT . . ."
(0 2) 1500 PRINT
(0 4)      K3 = INT(G(Q1, Q2) * .01)
(0 7)      B3 = INT(G(Q1, Q2) * .1) - 10 * K3
(0 9) 1540 S3 = G(Q1, Q2) - 100 * K3 - 10 * B3
(1 4)      IF K3 = 0 THEN 1590
(0 2) 1560 PRINT "COMBAT AREA      CONDITION RED"
(1 4)      IF S > 200 THEN 1590
(0 2) 1580 PRINT "   SHIELDS DANGEROUSLY LOW"
(1 3) 1590 FOR I = 1 TO 3
(0 3)      K(I, 1) = 0
(0 3)      K(I, 2) = 0
(0 1)      NEXT I
(1 3) 1600 FOR I = 1 TO 3
(0 3)      K(I, 3) = 0
(0 1)      NEXT I
(0 11)      Q$ = Z$ + Z$ + Z$ + Z$ + Z$ + Z$ + Z$ + LEFT$(Z$, 17)
(0 1) 1660 REM POSITION ENTERPRISE IN QUADRANT, THEN PLACE "K3" KLINGONS, &
(0 1) 1670 REM "B3" STARBASES, & "S3" STARS ELSEWHERE.
(0 3) 1680 A$ = "<*>"
(0 3)      Z1 = S1
(0 3)      Z2 = S2
(0 2)      GOSUB 8670
(1 4)      IF K3 < 1 THEN 1820
(1 3) 1720 FOR I = 1 TO K3
(0 2)      GOSUB 8590
(0 3)      A$ = "+K+"
(0 3)      Z1 = R1
(0 3)      Z2 = R2
(0 2) 1780 GOSUB 8670
(0 3)      K(I, 1) = R1
(0 3)      K(I, 2) = R2
(0 7)      K(I, 3) = S9 * (0.5 + RND(1))
(0 1)      NEXT I
(1 4) 1820 IF B3 < 1 THEN 1910
(0 2) 1880 GOSUB 8590
(0 3)      A$ = ">!<"
(0 3)      Z1 = R1
(0 3)      B4 = R1
(0 3)      Z2 = R2
(0 3)      B5 = R2
(0 2)      GOSUB 8670
(1 3) 1910 FOR I = 1 TO S3
(0 2)      GOSUB 8590
(0 3)      A$ = " * "
(0 3)      Z1 = R1
(0 3)      Z2 = R2
(0 2)      GOSUB 8670
(0 1)      NEXT I
(0 2) 1980 GOSUB 6430
(2 11) 1990 IF S + E > 10 THEN IF E > 10 OR D(7) = 0 THEN 2060
(0 2) 2020 PRINT
(0 2)      PRINT "** FATAL ERROR **   YOU'VE JUST STRANDED YOUR SHIP IN "
(0 2) 2030 PRINT "SPACE"
(0 2)      PRINT "YOU HAVE INSUFFICIENT MANEUVERING ENERGY,";
(0 2) 2040 PRINT " AND SHIELD CONTROL"
(0 2)      PRINT "IS PRESENTLY INCAPABLE OF CROSS";
(0 2) 2050 PRINT "-CIRCUITING TO ENGINE ROOM!!"
(0 2)      GOTO 6220
(1 2) 2060 INPUT "COMMAND"; A$
(1 3) 2080 FOR I = 1 TO 9
(1 6)      IF LEFT$(A$, 3) <> MID$(A1$, 3 * I - 2, 3) THEN 2160
(9 12) 2140 ON I GOTO 2300, 1980, 4000, 4260, 4700, 5530, 5690, 7290, 6270
(0 1) 2160 NEXT I
(0 2)      PRINT "ENTER ONE OF THE FOLLOWING:"
(0 2) 2180 PRINT "  NAV  (TO SET COURSE)"
(0 2) 2190 PRINT "  SRS  (FOR SHORT RANGE SENSOR SCAN)"
(0 2) 2200 PRINT "  LRS  (FOR LONG RANGE SENSOR SCAN)"
(0 2) 2210 PRINT "  PHA  (TO FIRE PHASERS)"
(0 2) 2220 PRINT "  TOR  (TO FIRE PHOTON TORPEDOES)"
(0 2) 2230 PRINT "  SHE  (TO RAISE OR LOWER SHIELDS)"
(0 2) 2240 PRINT "  DAM  (FOR DAMAGE CONTROL REPORTS)"
(0 2) 2250 PRINT "  COM  (TO CALL ON LIBRARY-COMPUTER)"
(0 2) 2260 PRINT "  XXX  (TO RESIGN YOUR COMMAND)"
(0 2)      PRINT
(0 3)      GOTO 1990
(0 1) 2290 REM COURSE CONTROL BEGINS HERE
(1 2) 2300 INPUT "COURSE (0-9)"; C1
(1 6)      IF C1 = 9 THEN C1 = 1
(1 7) 2310 IF C1 >= 1 AND C1 < 9 THEN 2350
(0 2) 2330 PRINT "   LT. SULU REPORTS, 'INCORRECT COURSE DATA, SIR!'"
(0 3)      GOTO 1990
(0 3) 2350 X$ = "8"
(1 6)      IF D(1) < 0 THEN X$ = "0.2"
(0 4) 2360 PRINT "WARP FACTOR (0-"; X$; ")";
(1 2)      INPUT W1
(1 7)      IF D(1) < 0 AND W1 > .2 THEN 2470
(1 7) 2380 IF W1 > 0 AND W1 <= 8 THEN 2490
(1 5) 2390 IF W1 = 0 THEN 1990
(0 2) 2420 PRINT "   CHIEF ENGINEER SCOTT REPORTS 'THE ENGINES WON'T TAKE";
(0 4) 2430 PRINT " WARP "; W1; "!'"
(0 3)      GOTO 1990
(0 2) 2470 PRINT "WARP ENGINES ARE DAMAGED.  MAXIUM SPEED = WARP 0.2"
(0 3)      GOTO 1990
(0 4) 2490 N = INT(W1 * 8 + .5)
(1 5)      IF E - N >= 0 THEN 2590
(0 2) 2500 PRINT "ENGINEERING REPORTS   'INSUFFICIENT ENERGY AVAILABLE"
(0 4) 2510 PRINT "                       FOR MANEUVERING AT WARP"; W1; "!'"
(1 10) 2530 IF S < N - E OR D(7) < 0 THEN 1990
(0 4) 2550 PRINT "DEFLECTOR CONTROL ROOM ACKNOWLEDGES"; S; "UNITS OF ENERGY"
(0 2) 2560 PRINT "                         PRESENTLY DEPLOYED TO SHIELDS."
(0 3) 2570 GOTO 1990
(0 1) 2580 REM KLINGONS MOVE/FIRE ON MOVING STARSHIP . . .
(1 3) 2590 FOR I = 1 TO K3
(1 4)      IF K(I, 3) = 0 THEN 2700
(0 3) 2610 A$ = "   "
(0 3)      Z1 = K(I, 1)
(0 3)      Z2 = K(I, 2)
(0 2)      GOSUB 8670
(0 2)      GOSUB 8590
(0 3) 2660 K(I, 1) = Z1
(0 3)      K(I, 2) = Z2
(0 3)      A$ = "+K+"
(0 2)      GOSUB 8670
(0 1) 2700 NEXT I
(0 2)      GOSUB 6000
(0 3)      D1 = 0
(0 3)      D6 = W1
(1 6)      IF W1 >= 1 THEN D6 = 1
(1 3) 2770 FOR I = 1 TO 8
(1 4)      IF D(I) >= 0 THEN 2880
(0 4) 2790 D(I) = D(I) + D6
(1 12)      IF D(I) > -.1 AND D(I) < 0 THEN D(I) = -.1
(0 2)      GOTO 2880
(1 4) 2800 IF D(I) < 0 THEN 2880
(1 6) 2810 IF D1 <> 1 THEN D1 = 1
(0 2)      PRINT "DAMAGE CONTROL REPORT:  ";
(0 3) 2840 PRINT TAB(8);
(0 3)      R1 = I
(0 2)      GOSUB 8790
(0 3)      PRINT G2$; " REPAIR COMPLETED."
(0 1) 2880 NEXT I
(1 5)      IF RND(1) > .2 THEN 3070
(0 5) 2910 R1 = FNR(1)
(1 5)      IF RND(1) >= .6 THEN 3000
(0 8) 2930 D(R1) = D(R1) - (RND(1) * 5 + 1)
(0 2)      PRINT "DAMAGE CONTROL REPORT:  ";
(0 2) 2960 GOSUB 8790
(0 3)      PRINT G2$; " DAMAGED"
(0 2)      PRINT
(0 2)      GOTO 3070
(0 8) 3000 D(R1) = D(R1) + RND(1) * 3 + 1
(0 2)      PRINT "DAMAGE CONTROL REPORT:  ";
(0 2) 3030 GOSUB 8790
(0 3)      PRINT G2$; " STATE OF REPAIR IMPROVED"
(0 2)      PRINT
(0 1) 3060 REM BEGIN MOVING STARSHIP
(0 3) 3070 A$ = "   "
(0 4)      Z1 = INT(S1)
(0 4)      Z2 = INT(S2)
(0 2)      GOSUB 8670
(0 10) 3110 X1 = C(C1, 1) + (C(C1 + 1, 1) - C(C1, 1)) * (C1 - INT(C1))
(0 3)      X = S1
(0 3)      Y = S2
(0 10) 3140 X2 = C(C1, 2) + (C(C1 + 1, 2) - C(C1, 2)) * (C1 - INT(C1))
(0 3)      Q4 = Q1
(0 3)      Q5 = Q2
(1 3) 3170 FOR I = 1 TO N
(0 4)      S1 = S1 + X1
(0 4)      S2 = S2 + X2
(1 13)      IF S1 < 1 OR S1 >= 9 OR S2 < 1 OR S2 >= 9 THEN 3500
(0 10) 3240 S8 = INT(S1) * 24 + INT(S2) * 3 - 26
(1 5)      IF MID$(Q$, S8, 2) = "  " THEN 3360
(0 4) 3320 S1 = INT(S1 - X1)
(0 4)      S2 = INT(S2 - X2)
(0 2)      PRINT "WARP ENGINES SHUT DOWN AT ";
(0 6) 3350 PRINT "SECTOR"; S1; ","; S2; "DUE TO BAD NAVAGATION"
(0 2)      GOTO 3370
(0 1) 3360 NEXT I
(0 4)      S1 = INT(S1)
(0 4)      S2 = INT(S2)
(0 3) 3370 A$ = "<*>"
(0 4)      Z1 = INT(S1)
(0 4)      Z2 = INT(S2)
(0 2)      GOSUB 8670
(0 2)      GOSUB 3910
(0 3)      T8 = 1
(1 8) 3430 IF W1 < 1 THEN T8 = .1 * INT(10 * W1)
(0 4) 3450 T = T + T8
(1 6)      IF T > T0 + T9 THEN 6220
(0 1) 3470 REM SEE IF DOCKED, THEN GET COMMAND
(0 3) 3480 GOTO 1980
(0 1) 3490 REM EXCEEDED QUADRANT LIMITS
(0 8) 3500 X = 8 * Q1 + X + N * X1
(0 8)      Y = 8 * Q2 + Y + N * X2
(0 4)      Q1 = INT(X / 8)
(0 4)      Q2 = INT(Y / 8)
(0 4)      S1 = INT(X - Q1 * 8)
(0 4) 3550 S2 = INT(Y - Q2 * 8)
(1 7)      IF S1 = 0 THEN Q1 = Q1 - 1
(0 3)      S1 = 8
(1 7) 3590 IF S2 = 0 THEN Q2 = Q2 - 1
(0 3)      S2 = 8
(0 3) 3620 X5 = 0
(1 6)      IF Q1 < 1 THEN X5 = 1
(0 3)      Q1 = 1
(0 3)      S1 = 1
(1 6) 3670 IF Q1 > 8 THEN X5 = 1
(0 3)      Q1 = 8
(0 3)      S1 = 8
(1 6) 3710 IF Q2 < 1 THEN X5 = 1
(0 3)      Q2 = 1
(0 3)      S2 = 1
(1 6) 3750 IF Q2 > 8 THEN X5 = 1
(0 3)      Q2 = 8
(0 3)      S2 = 8
(1 4) 3790 IF X5 = 0 THEN 3860
(0 2) 3800 PRINT "LT. UHURA REPORTS MESSAGE FROM STARFLEET COMMAND:"
(0 2) 3810 PRINT "  'PERMISSION TO ATTEMPT CROSSING OF GALACTIC PERIMETER"
(0 2) 3820 PRINT "  IS HEREBY *DENIED*.  SHUT DOWN YOUR ENGINES.'"
(0 2) 3830 PRINT "CHIEF ENGINEER SCOTT REPORTS  'WARP ENGINES SHUT DOWN"
(0 10) 3840 PRINT "  AT SECTOR"; S1; ","; S2; "OF QUADRANT"; Q1; ","; Q2; ".'"
(1 6) 3850 IF T > T0 + T9 THEN 6220
(1 10) 3860 IF 8 * Q1 + Q2 = 8 * Q4 + Q5 THEN 3370
(0 4) 3870 T = T + 1
(0 2)      GOSUB 3910
(0 3)      GOTO 1320
(0 1) 3900 REM MANEUVER ENERGY S/R **
(0 5) 3910 E = E - N - 10
(1 4)      IF E >= 0 THEN RETURN
(0 2) 3930 PRINT "SHIELD CONTROL SUPPLIES ENERGY TO COMPLETE THE MANEUVER."
(0 4) 3940 S = S + E
(0 3)      E = 0
(1 6)      IF S <= 0 THEN S = 0
(0 1) 3980 RETURN
(0 1) 3990 REM LONG RANGE SENSOR SCAN CODE
(1 5) 4000 IF D(3) < 0 THEN PRINT "LONG RANGE SENSORS ARE INOPERABLE"
(0 3)      GOTO 1990
(0 5) 4030 PRINT "LONG RANGE SCAN FOR QUADRANT"; Q1; ","; Q2
(0 3) 4040 O1$ = "-------------------"
(0 2)      PRINT O1$
(1 5) 4060 FOR I = Q1 - 1 TO Q1 + 1
(0 4)      N(1) = -1
(0 4)      N(2) = -2
(0 4)      N(3) = -3
(1 5)      FOR J = Q2 - 1 TO Q2 + 1
(1 15) 4120 IF I > 0 AND I < 9 AND J > 0 AND J < 9 THEN N(J - Q2 + 2) = G(I, J)
(0 3)      Z(I, J) = G(I, J)
(0 1) 4180 NEXT J
(1 3)      FOR L = 1 TO 3
(0 2)      PRINT ": ";
(1 5)      IF N(L) < 0 THEN PRINT "*** ";
(0 2)      GOTO 4230
(0 4) 4210 PRINT RIGHT$(STR$(N(L) + 1000), 3); " ";
(0 1) 4230 NEXT L
(0 2)      PRINT ":"
(0 2)      PRINT O1$
(0 1)      NEXT I
(0 3)      GOTO 1990
(0 1) 4250 REM PHASER CONTROL CODE BEGINS HERE
(1 5) 4260 IF D(4) < 0 THEN PRINT "PHASERS INOPERATIVE"
(0 3)      GOTO 1990
(1 4) 4265 IF K3 > 0 THEN 4330
(0 2) 4270 PRINT "SCIENCE OFFICER SPOCK REPORTS  'SENSORS SHOW NO ENEMY SHIPS"
(0 2) 4280 PRINT "                                IN THIS QUADRANT'"
(0 3)      GOTO 1990
(1 5) 4330 IF D(8) < 0 THEN PRINT "COMPUTER FAILURE HAMPERS ACCURACY"
(0 2) 4350 PRINT "PHASERS LOCKED ON TARGET;  ";
(0 4) 4360 PRINT "ENERGY AVAILABLE ="; E; "UNITS"
(1 2) 4370 INPUT "NUMBER OF UNITS TO FIRE"; X
(1 5)      IF X <= 0 THEN 1990
(1 6) 4400 IF E - X < 0 THEN 4360
(0 4) 4410 E = E - X
(1 8)      IF D(7) < 0 THEN X = X * RND(1)
(0 4) 4450 H1 = INT(X / K3)
(1 3)      FOR I = 1 TO 3
(1 4)      IF K(I, 3) <= 0 THEN 4670
(0 4) 4480 H = INT((H1 / FND(0)) * (RND(1) + 2))
(1 6)      IF H > .15 * K(I, 3) THEN 4530
(0 5) 4500 PRINT "SENSORS SHOW NO DAMAGE TO ENEMY AT "; K(I, 1); ","; K(I, 2)
(0 2)      GOTO 4670
(0 4) 4530 K(I, 3) = K(I, 3) - H
(0 5)      PRINT H; "UNIT HIT ON KLINGON AT SECTOR"; K(I, 1); ",";
(0 2) 4550 PRINT K(I, 2)
(1 5)      IF K(I, 3) <= 0 THEN PRINT "*** KLINGON DESTROYED ***"
(0 2)      GOTO 4580
(0 4) 4560 PRINT "   (SENSORS SHOW"; K(I, 3); "UNITS REMAINING)"
(0 2)      GOTO 4670
(0 4) 4580 K3 = K3 - 1
(0 4)      K9 = K9 - 1
(0 3)      Z1 = K(I, 1)
(0 3)      Z2 = K(I, 2)
(0 3)      A$ = "   "
(0 2)      GOSUB 8670
(0 3) 4650 K(I, 3) = 0
(0 4)      G(Q1, Q2) = G(Q1, Q2) - 100
(0 3)      Z(Q1, Q2) = G(Q1, Q2)
(1 4)      IF K9 <= 0 THEN 6370
(0 1) 4670 NEXT I
(0 2)      GOSUB 6000
(0 3)      GOTO 1990
(0 1) 4690 REM PHOTON TORPEDO CODE BEGINS HERE
(1 5) 4700 IF P <= 0 THEN PRINT "ALL PHOTON TORPEDOES EXPENDED"
(0 3)      GOTO 1990
(1 5) 4730 IF D(5) < 0 THEN PRINT "PHOTON TUBES ARE NOT OPERATIONAL"
(0 3)      GOTO 1990
(1 2) 4760 INPUT "PHOTON TORPEDO COURSE (1-9)"; C1
(1 6)      IF C1 = 9 THEN C1 = 1
(1 7) 4780 IF C1 >= 1 AND C1 < 9 THEN 4850
(0 2) 4790 PRINT "ENSIGN CHEKOV REPORTS,  'INCORRECT COURSE DATA, SIR!'"
(0 3) 4800 GOTO 1990
(0 10) 4850 X1 = C(C1, 1) + (C(C1 + 1, 1) - C(C1, 1)) * (C1 - INT(C1))
(0 4)      E = E - 2
(0 4)      P = P - 1
(0 10) 4860 X2 = C(C1, 2) + (C(C1 + 1, 2) - C(C1, 2)) * (C1 - INT(C1))
(0 3)      X = S1
(0 3)      Y = S2
(0 2) 4910 PRINT "TORPEDO TRACK:"
(0 4) 4920 X = X + X1
(0 4)      Y = Y + X2
(0 4)      X3 = INT(X + .5)
(0 4)      Y3 = INT(Y + .5)
(1 13) 4960 IF X3 < 1 OR X3 > 8 OR Y3 < 1 OR Y3 > 8 THEN 5490
(0 5) 5000 PRINT "               "; X3; ","; Y3
(0 3)      A$ = "   "
(0 3)      Z1 = X
(0 3)      Z2 = Y
(0 2)      GOSUB 8830
(1 5) 5050 IF Z3 <> 0 THEN 4920
(0 3) 5060 A$ = "+K+"
(0 3)      Z1 = X
(0 3)      Z2 = Y
(0 2)      GOSUB 8830
(1 4)      IF Z3 = 0 THEN 5210
(0 2) 5110 PRINT "*** KLINGON DESTROYED ***"
(0 4)      K3 = K3 - 1
(0 4)      K9 = K9 - 1
(1 4)      IF K9 <= 0 THEN 6370
(1 3) 5150 FOR I = 1 TO 3
(1 7)      IF X3 = K(I, 1) AND Y3 = K(I, 2) THEN 5190
(0 1) 5180 NEXT I
(0 3)      I = 3
(0 3) 5190 K(I, 3) = 0
(0 2)      GOTO 5430
(0 3) 5210 A$ = " * "
(0 3)      Z1 = X
(0 3)      Z2 = Y
(0 2)      GOSUB 8830
(1 4)      IF Z3 = 0 THEN 5280
(0 6) 5260 PRINT "STAR AT"; X3; ","; Y3; "ABSORBED TORPEDO ENERGY."
(0 2)      GOSUB 6000
(0 3)      GOTO 1990
(0 3) 5280 A$ = ">!<"
(0 3)      Z1 = X
(0 3)      Z2 = Y
(0 2)      GOSUB 8830
(1 5)      IF Z3 = 0 THEN 4760
(0 2) 5330 PRINT "*** STARBASE DESTROYED ***"
(0 4)      B3 = B3 - 1
(0 4)      B9 = B9 - 1
(1 10) 5360 IF B9 > 0 OR K9 > T - T0 - T9 THEN 5400
(0 2) 5370 PRINT "THAT DOES IT, CAPTAIN!!  YOU ARE HEREBY RELIEVED OF COMMAND"
(0 2) 5380 PRINT "AND SENTENCED TO 99 STARDATES AT HARD LABOR ON CYGNUS 12!!"
(0 2) 5390 GOTO 6270
(0 2) 5400 PRINT "STARFLEET COMMAND REVIEWING YOUR RECORD TO CONSIDER"
(0 2) 5410 PRINT "COURT MARTIAL!"
(0 3)      D0 = 0
(0 3) 5430 Z1 = X
(0 3)      Z2 = Y
(0 3)      A$ = "   "
(0 2)      GOSUB 8670
(0 8) 5470 G(Q1, Q2) = K3 * 100 + B3 * 10 + S3
(0 3)      Z(Q1, Q2) = G(Q1, Q2)
(0 2)      GOSUB 6000
(0 3)      GOTO 1990
(0 2) 5490 PRINT "TORPEDO MISSED"
(0 2)      GOSUB 6000
(0 3)      GOTO 1990
(0 1) 5520 REM SHIELD CONTROL
(1 5) 5530 IF D(7) < 0 THEN PRINT "SHIELD CONTROL INOPERABLE"
(0 3)      GOTO 1990
(0 4) 5560 PRINT "ENERGY AVAILABLE ="; E + S;
(1 2)      INPUT "NUMBER OF UNITS TO SHIELDS"; X
(1 8) 5580 IF X < 0 OR S = X THEN PRINT "<SHIELDS UNCHANGED>"
(0 3)      GOTO 1990
(1 6) 5590 IF X <= E + S THEN 5630
(0 2) 5600 PRINT "SHIELD CONTROL REPORTS  'THIS IS NOT THE FEDERATION TREASURY.'"
(0 2) 5610 PRINT "<SHIELDS UNCHANGED>"
(0 3)      GOTO 1990
(0 5) 5630 E = E + S - X
(0 3)      S = X
(0 2)      PRINT "DEFLECTOR CONTROL ROOM REPORT:"
(0 5) 5660 PRINT "  'SHIELDS NOW AT"; INT(S); "UNITS PER YOUR COMMAND.'"
(0 3)      GOTO 1990
(0 1) 5680 REM DAMAGE CONTROL
(1 4) 5690 IF D(6) >= 0 THEN 5910
(0 2) 5700 PRINT "DAMAGE CONTROL REPORT NOT AVAILABLE"
(1 5)      IF D0 = 0 THEN 1990
(0 3) 5720 D3 = 0
(1 3)      FOR I = 1 TO 8
(1 7)      IF D(I) < 0 THEN D3 = D3 + .1
(0 1) 5760 NEXT I
(1 5)      IF D3 = 0 THEN 1990
(0 2) 5780 PRINT
(0 4)      D3 = D3 + D4
(1 6)      IF D3 >= 1 THEN D3 = .9
(0 2) 5810 PRINT "TECHNICIANS STANDING BY TO EFFECT REPAIRS TO YOUR SHIP;"
(0 6) 5820 PRINT "ESTIMATED TIME TO REPAIR:"; .01 * INT(100 * D3); "STARDATES"
(1 2) 5840 INPUT "WILL YOU AUTHORIZE THE REPAIR ORDER (Y/N)"; A$
(1 5) 5860 IF A$ <> "Y" THEN 1990
(1 3) 5870 FOR I = 1 TO 8
(1 6)      IF D(I) < 0 THEN D(I) = 0
(0 1) 5890 NEXT I
(0 5)      T = T + D3 + .1
(0 2) 5910 PRINT
(0 2)      PRINT "DEVICE             STATE OF REPAIR"
(1 3)      FOR R1 = 1 TO 8
(0 2) 5920 GOSUB 8790
(0 7)      PRINT G2$; LEFT$(Z$, 25 - LEN(G2$)); INT(D(R1) * 100) * .01
(0 1) 5950 NEXT R1
(0 2)      PRINT
(1 5)      IF D0 <> 0 THEN 5720
(0 3) 5980 GOTO 1990
(0 1) 5990 REM KLINGONS SHOOTING
(1 4) 6000 IF K3 <= 0 THEN RETURN
(1 5) 6010 IF D0 <> 0 THEN PRINT "STARBASE SHIELDS PROTECT THE ENTERPRISE"
(0 1)      RETURN
(1 3) 6040 FOR I = 1 TO 3
(1 4)      IF K(I, 3) <= 0 THEN 6200
(0 4) 6060 H = INT((K(I, 3) / FND(1)) * (2 + RND(1)))
(0 4)      S = S - H
(0 7)      K(I, 3) = K(I, 3) / (3 + RND(0))
(0 6) 6080 PRINT H; "UNIT HIT ON ENTERPRISE FROM SECTOR"; K(I, 1); ","; K(I, 2)
(1 4) 6090 IF S <= 0 THEN 6240
(0 4) 6100 PRINT "      <SHIELDS DOWN TO"; S; "UNITS>"
(1 4)      IF H < 20 THEN 6200
(1 9) 6120 IF RND(1) > .6 OR H / S <= .02 THEN 6200
(0 5) 6140 R1 = FNR(1)
(0 10)      D(R1) = D(R1) - H / S - .5 * RND(1)
(0 2)      GOSUB 8790
(0 4) 6170 PRINT "DAMAGE CONTROL REPORTS "; G2$; " DAMAGED BY THE HIT'"
(0 1) 6200 NEXT I
(0 1)      RETURN
(0 1) 6210 REM END OF GAME
(0 3) 6220 PRINT "IT IS STARDATE"; T
(0 2)      GOTO 6270
(0 2) 6240 PRINT
(0 2)      PRINT "THE ENTERPRISE HAS BEEN DESTROYED.  THEN FEDERATION ";
(0 2) 6250 PRINT "WILL BE CONQUERED"
(0 3)      GOTO 6220
(0 4) 6270 PRINT "THERE WERE"; K9; "KLINGON BATTLE CRUISERS LEFT AT"
(0 2) 6280 PRINT "THE END OF YOUR MISSION."
(0 2) 6290 PRINT
(0 2)      PRINT
(1 4)      IF B9 = 0 THEN 6360
(0 2) 6310 PRINT "THE FEDERATION IS IN NEED OF A NEW STARSHIP COMMANDER"
(0 2) 6320 PRINT "FOR A SIMILAR MISSION -- IF THERE IS A VOLUNTEER,"
(1 2) 6330 INPUT "LET HIM STEP FORWARD AND ENTER 'AYE'"; A$
(1 5)      IF A$ = "AYE" THEN 10
(0 1) 6360 STOP
(0 2) 6370 PRINT "CONGRULATION, CAPTAIN!  THEN LAST KLINGON BATTLE CRUISER"
(0 2) 6380 PRINT "MENACING THE FDERATION HAS BEEN DESTROYED."
(0 2)      PRINT
(0 9) 6400 PRINT "YOUR EFFICIENCY RATING IS"; 1000 * (K7 / (T - T0)) ^ 2
(0 3)      GOTO 6290
(0 1) 6420 REM SHORT RANGE SENSOR SCAN & STARTUP SUBROUTINE
(1 5) 6430 FOR I = S1 - 1 TO S1 + 1
(1 5)      FOR J = S2 - 1 TO S2 + 1
(1 17) 6450 IF INT(I + .5) < 1 OR INT(I + .5) > 8 OR INT(J + .5) < 1 OR INT(J + .5) > 8 THEN 6540
(0 3) 6490 A$ = ">!<"
(0 3)      Z1 = I
(0 3)      Z2 = J
(0 2)      GOSUB 8830
(1 4)      IF Z3 = 1 THEN 6580
(0 1) 6540 NEXT J
(0 1)      NEXT I
(0 3)      D0 = 0
(0 2)      GOTO 6650
(0 3) 6580 D0 = 1
(0 3)      C$ = "DOCKED"
(0 3)      E = E0
(0 3)      P = P0
(0 2) 6620 PRINT "SHIELDS DROPPED FOR DOCKING PURPOSES"
(0 3)      S = 0
(0 2)      GOTO 6720
(1 6) 6650 IF K3 > 0 THEN C$ = "*RED*"
(0 2)      GOTO 6720
(0 3) 6660 C$ = "GREEN"
(1 8)      IF E < E0 * .1 THEN C$ = "YELLOW"
(1 4) 6720 IF D(2) >= 0 THEN 6770
(0 2) 6730 PRINT
(0 2)      PRINT "*** SHORT RANGE SENSORS ARE OUT ***"
(0 2)      PRINT
(0 1)      RETURN
(0 3) 6770 O1$ = "---------------------------------"
(0 2)      PRINT O1$
(1 3)      FOR I = 1 TO 8
(1 10) 6820 FOR J = (I - 1) * 24 + 1 TO (I - 1) * 24 + 22 STEP 3
(0 4)      PRINT " "; MID$(Q$, J, 3);
(0 1)      NEXT J
(8 10) 6830 ON I GOTO 6850, 6900, 6960, 7020, 7070, 7120, 7180, 7240
(0 5) 6850 PRINT "        STARDATE          "; INT(T * 10) * .1
(0 2)      GOTO 7260
(0 3) 6900 PRINT "        CONDITION          "; C$
(0 2)      GOTO 7260
(0 5) 6960 PRINT "        QUADRANT          "; Q1; ","; Q2
(0 2)      GOTO 7260
(0 5) 7020 PRINT "        SECTOR            "; S1; ","; S2
(0 2)      GOTO 7260
(0 4) 7070 PRINT "        PHOTON TORPEDOES  "; INT(P)
(0 2)      GOTO 7260
(0 4) 7120 PRINT "        TOTAL ENERGY      "; INT(E + S)
(0 2)      GOTO 7260
(0 4) 7180 PRINT "        SHIELDS           "; INT(S)
(0 2)      GOTO 7260
(0 4) 7240 PRINT "        KLINGONS REMAINING"; INT(K9)
(0 1) 7260 NEXT I
(0 2)      PRINT O1$
(0 1)      RETURN
(0 1) 7280 REM LIBRARY COMPUTER CODE
(1 5) 7290 IF D(8) < 0 THEN PRINT "COMPUTER DISABLED"
(0 3)      GOTO 1990
(1 2) 7320 INPUT "COMPUTER ACTIVE AND AWAITING COMMAND"; A
(1 5)      IF A < 0 THEN 1990
(0 2) 7350 PRINT
(0 3)      H8 = 1
(6 9)      ON A + 1 GOTO 7540, 7900, 8070, 8500, 8150, 7400
(0 2) 7360 PRINT "FUNCTIONS AVAILABLE FROM LIBRARY-COMPUTER:"
(0 2) 7370 PRINT "   0 = CUMULATIVE GALACTIC RECORD"
(0 2) 7372 PRINT "   1 = STATUS REPORT"
(0 2) 7374 PRINT "   2 = PHOTON TORPEDO DATA"
(0 2) 7376 PRINT "   3 = STARBASE NAV DATA"
(0 2) 7378 PRINT "   4 = DIRECTION/DISTANCE CALCULATOR"
(0 2) 7380 PRINT "   5 = GALAXY 'REGION NAME' MAP"
(0 2)      PRINT
(0 3)      GOTO 7320
(0 1) 7390 REM SETUP TO CHANGE CUM GAL RECORD TO GALAXY MAP
(0 3) 7400 H8 = 0
(0 3)      G5 = 1
(0 2)      PRINT "                        THE GALAXY"
(0 2)      GOTO 7550
(0 1) 7530 REM CUM GALACTIC RECORD
(0 1) 7540 REM INPUT"DO YOU WANT A HARDCOPY? IS THE TTY ON (Y/N)";A$
(0 1) 7542 REM IFA$="Y"THENPOKE1229,2:POKE1237,3:NULL1
(0 2) 7543 PRINT
(0 2)      PRINT "        ";
(0 5) 7544 PRINT "COMPUTER RECORD OF GALAXY FOR QUADRANT"; Q1; ","; Q2
(0 2) 7546 PRINT
(0 2) 7550 PRINT "       1     2     3     4     5     6     7     8"
(0 3) 7560 O1$ = "     ----- ----- ----- ----- ----- ----- ----- -----"
(0 2) 7570 PRINT O1$
(1 3)      FOR I = 1 TO 8
(0 2)      PRINT I;
(1 4)      IF H8 = 0 THEN 7740
(1 3) 7630 FOR J = 1 TO 8
(0 2)      PRINT "   ";
(1 5)      IF Z(I, J) = 0 THEN PRINT "***";
(0 2)      GOTO 7720
(0 3) 7700 PRINT RIGHT$(STR$(Z(I, J) + 1000), 3);
(0 1) 7720 NEXT J
(0 2)      GOTO 7850
(0 3) 7740 Z4 = I
(0 3)      Z5 = 1
(0 2)      GOSUB 9030
(0 4)      J0 = INT(15 - .5 * LEN(G2$))
(0 4)      PRINT TAB(J0); G2$;
(0 3) 7800 Z5 = 5
(0 2)      GOSUB 9030
(0 4)      J0 = INT(39 - .5 * LEN(G2$))
(0 4)      PRINT TAB(J0); G2$;
(0 2) 7850 PRINT
(0 2)      PRINT O1$
(0 1)      NEXT I
(0 2)      PRINT
(0 3)      GOTO 1990
(0 1) 7890 REM STATUS REPORT
(0 2) 7900 PRINT "   STATUS REPORT:"
(0 3)      X$ = ""
(1 6)      IF K9 > 1 THEN X$ = "S"
(0 5) 7940 PRINT "KLINGON"; X$; " LEFT: "; K9
(0 6) 7960 PRINT "MISSION MUST BE COMPLETED IN"; .1 * INT((T0 + T9 - T) * 10); "STARDATES"
(0 3) 7970 X$ = "S"
(1 6)      IF B9 < 2 THEN X$ = ""
(1 4)      IF B9 < 1 THEN 8010
(0 6) 7980 PRINT "THE FEDERATION IS MAINTAINING"; B9; "STARBASE"; X$; " IN THE GALAXY"
(0 3) 7990 GOTO 5690
(0 2) 8010 PRINT "YOUR STUPIDITY HAS LEFT YOU ON YOUR ON IN"
(0 2) 8020 PRINT "  THE GALAXY -- YOU HAVE NO STARBASES LEFT!"
(0 3)      GOTO 5690
(0 1) 8060 REM TORPEDO, BASE NAV, D/D CALCULATOR
(1 5) 8070 IF K3 <= 0 THEN 4270
(0 3) 8080 X$ = ""
(1 6)      IF K3 > 1 THEN X$ = "S"
(0 3) 8090 PRINT "FROM ENTERPRISE TO KLINGON BATTLE CRUSER"; X$
(0 3) 8100 H8 = 0
(1 3)      FOR I = 1 TO 3
(1 4)      IF K(I, 3) <= 0 THEN 8480
(0 3) 8110 W1 = K(I, 1)
(0 3)      X = K(I, 2)
(0 3) 8120 C1 = S1
(0 3)      A = S2
(0 2)      GOTO 8220
(0 2) 8150 PRINT "DIRECTION/DISTANCE CALCULATOR:"
(0 9) 8160 PRINT "YOU ARE AT QUADRANT "; Q1; ","; Q2; " SECTOR "; S1; ","; S2
(0 2) 8170 PRINT "PLEASE ENTER"
(2 3)      INPUT "  INITIAL COORDINATES (X,Y)"; C1, A
(2 3) 8200 INPUT "  FINAL COORDINATES (X,Y)"; W1, X
(0 4) 8220 X = X - A
(0 4)      A = C1 - W1
(1 4)      IF X < 0 THEN 8350
(1 4) 8250 IF A < 0 THEN 8410
(1 4) 8260 IF X > 0 THEN 8280
(1 6) 8270 IF A = 0 THEN C1 = 5
(0 2)      GOTO 8290
(0 3) 8280 C1 = 1
(1 6) 8290 IF ABS(A) <= ABS(X) THEN 8330
(0 12) 8310 PRINT "DIRECTION ="; C1 + (((ABS(A) - ABS(X)) + ABS(A)) / ABS(A))
(0 2)      GOTO 8460
(0 8) 8330 PRINT "DIRECTION ="; C1 + (ABS(A) / ABS(X))
(0 2)      GOTO 8460
(1 6) 8350 IF A > 0 THEN C1 = 3
(0 2)      GOTO 8420
(1 6) 8360 IF X <> 0 THEN C1 = 5
(0 3)      GOTO 8290
(0 3) 8410 C1 = 7
(1 6) 8420 IF ABS(A) >= ABS(X) THEN 8450
(0 12) 8430 PRINT "DIRECTION ="; C1 + (((ABS(X) - ABS(A)) + ABS(X)) / ABS(X))
(0 2)      GOTO 8460
(0 8) 8450 PRINT "DIRECTION ="; C1 + (ABS(X) / ABS(A))
(0 4) 8460 PRINT "DISTANCE ="; SQR(X ^ 2 + A ^ 2)
(1 5)      IF H8 = 1 THEN 1990
(0 1) 8480 NEXT I
(0 3)      GOTO 1990
(1 5) 8500 IF B3 <> 0 THEN PRINT "FROM ENTERPRISE TO STARBASE:"
(0 3)      W1 = B4
(0 3)      X = B5
(0 3)      GOTO 8120
(0 2) 8510 PRINT "MR. SPOCK REPORTS,  'SENSORS SHOW NO STARBASES IN THIS";
(0 2) 8520 PRINT " QUADRANT.'"
(0 3)      GOTO 1990
(0 1) 8580 REM FIND EMPTY PLACE IN QUADRANT (FOR THINGS)
(0 5) 8590 R1 = FNR(1)
(0 5)      R2 = FNR(1)
(0 3)      A$ = "   "
(0 3)      Z1 = R1
(0 3)      Z2 = R2
(0 2)      GOSUB 8830
(1 5)      IF Z3 = 0 THEN 8590
(0 1) 8600 RETURN
(0 1) 8660 REM INSERT IN STRING ARRAY FOR QUADRANT
(0 10) 8670 S8 = INT(Z2 - .5) * 3 + INT(Z1 - .5) * 24 + 1
(1 6) 8675 IF LEN(A$) <> 3 THEN PRINT "ERROR"
(0 1)      STOP
(1 8) 8680 IF S8 = 1 THEN Q$ = A$ + RIGHT$(Q$, 189)
(0 1)      RETURN
(1 8) 8690 IF S8 = 190 THEN Q$ = LEFT$(Q$, 189) + A$
(0 1)      RETURN
(0 7) 8700 Q$ = LEFT$(Q$, S8 - 1) + A$ + RIGHT$(Q$, 190 - S8)
(0 1)      RETURN
(0 1) 8780 REM PRINTS DEVICE NAME
(8 10) 8790 ON R1 GOTO 8792, 8794, 8796, 8798, 8800, 8802, 8804, 8806
(0 3) 8792 G2$ = "WARP ENGINES"
(0 1)      RETURN
(0 3) 8794 G2$ = "SHORT RANGE SENSORS"
(0 1)      RETURN
(0 3) 8796 G2$ = "LONG RANGE SENSORS"
(0 1)      RETURN
(0 3) 8798 G2$ = "PHASER CONTROL"
(0 1)      RETURN
(0 3) 8800 G2$ = "PHOTON TUBES"
(0 1)      RETURN
(0 3) 8802 G2$ = "DAMAGE CONTROL"
(0 1)      RETURN
(0 3) 8804 G2$ = "SHIELD CONTROL"
(0 1)      RETURN
(0 3) 8806 G2$ = "LIBRARY-COMPUTER"
(0 1)      RETURN
(0 1) 8820 REM STRING COMPARISON IN QUADRANT ARRAY
(0 4) 8830 Z1 = INT(Z1 + .5)
(0 4)      Z2 = INT(Z2 + .5)
(0 10)      S8 = (Z2 - 1) * 3 + (Z1 - 1) * 24 + 1
(0 3)      Z3 = 0
(1 5) 8890 IF MID$(Q$, S8, 3) <> A$ THEN RETURN
(0 3) 8900 Z3 = 1
(0 1)      RETURN
(0 1) 9010 REM QUADRANT NAME IN G2$ FROM Z4,Z5 (=Q1,Q2)
(0 1) 9020 REM CALL WITH G5=1 TO GET REGION NAME ONLY
(9 13) 9030 IF Z5 <= 4 THEN ON Z4 GOTO 9040, 9050, 9060, 9070, 9080, 9090, 9100, 9110
(0 2) 9035 GOTO 9120
(0 3) 9040 G2$ = "ANTARES"
(0 2)      GOTO 9210
(0 3) 9050 G2$ = "RIGEL"
(0 2)      GOTO 9210
(0 3) 9060 G2$ = "PROCYON"
(0 2)      GOTO 9210
(0 3) 9070 G2$ = "VEGA"
(0 2)      GOTO 9210
(0 3) 9080 G2$ = "CANOPUS"
(0 2)      GOTO 9210
(0 3) 9090 G2$ = "ALTAIR"
(0 2)      GOTO 9210
(0 3) 9100 G2$ = "SAGITTARIUS"
(0 2)      GOTO 9210
(0 3) 9110 G2$ = "POLLUX"
(0 2)      GOTO 9210
(8 10) 9120 ON Z4 GOTO 9130, 9140, 9150, 9160, 9170, 9180, 9190, 9200
(0 3) 9130 G2$ = "SIRIUS"
(0 2)      GOTO 9210
(0 3) 9140 G2$ = "DENEB"
(0 2)      GOTO 9210
(0 3) 9150 G2$ = "CAPELLA"
(0 2)      GOTO 9210
(0 3) 9160 G2$ = "BETELGEUSE"
(0 2)      GOTO 9210
(0 3) 9170 G2$ = "ALDEBARAN"
(0 2)      GOTO 9210
(0 3) 9180 G2$ = "REGULUS"
(0 2)      GOTO 9210
(0 3) 9190 G2$ = "ARCTURUS"
(0 2)      GOTO 9210
(0 3) 9200 G2$ = "SPICA"
(9 13) 9210 IF G5 <> 1 THEN ON Z5 GOTO 9230, 9240, 9250, 9260, 9230, 9240, 9250, 9260
(0 1) 9220 RETURN
(0 4) 9230 G2$ = G2$ + " I"
(0 1)      RETURN
(0 4) 9240 G2$ = G2$ + " II"
(0 1)      RETURN
(0 4) 9250 G2$ = G2$ + " III"
(0 1)      RETURN
(0 4) 9260 G2$ = G2$ + " IV"
(0 1)      RETURN

Unreachable code:

All executable lines are reachable.

