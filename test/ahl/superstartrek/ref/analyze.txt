Statistics:

Number of lines: 425
Number of valid statements: 810
Number of comments: 58
Number of executable statements: 808

Complexity:

Comment density: 0.072
Comprehension effort: 2925
McCabe complexity: 221
Halstead complexity:
 length: 3860
 volume: 24567.938
 difficulty: 80.883
 effort: 1987131.394
 language: 3.755
 intelligence: 303.746
 time: 1839.936

(0 1) 10 REM SUPER STARTREK - MAY 16,1978 - REQUIRES 24K MEMORY
  Origs: 
  Dests: 
G(6000) (0 1) 30 REM
   WARNING: Statement before GOSUB entry point
  Origs: 6330:ifthen
  Dests: 220:auto
(0 1) 40 REM ****        **** STAR TREK ****        ****
  Origs: 
  Dests: 
(0 1) 50 REM **** SIMULATION OF A MISSION OF THE STARSHIP ENTERPRISE,
  Origs: 
  Dests: 
(0 1) 60 REM **** AS SEEN ON THE STAR TREK TV SHOW.
  Origs: 
  Dests: 
(0 1) 70 REM **** ORIGIONAL PROGRAM BY MIKE MAYFIELD, MODIFIED VERSION
  Origs: 
  Dests: 
(0 1) 80 REM **** PUBLISHED IN DEC'S "101 BASIC GAMES", BY DAVE AHL.
  Origs: 
  Dests: 
(0 1) 90 REM **** MODIFICATIONS TO THE LATTER (PLUS DEBUGGING) BY BOB
  Origs: 
  Dests: 
(0 1) 100 REM *** LEEDOM - APRIL & DECEMBER 1974,
  Origs: 
  Dests: 
(0 1) 110 REM *** WITH A LITTLE HELP FROM HIS FRIENDS . . .
  Origs: 
  Dests: 
(0 1) 120 REM *** COMMENTS, EPITHETS, AND SUGGESTIONS SOLICITED --
  Origs: 
  Dests: 
(0 1) 130 REM *** SEND TO:  R. C. LEEDOM
  Origs: 
  Dests: 
(0 1) 140 REM ***           WESTINGHOUSE DEFENSE & ELECTRONICS SYSTEMS CNTR.
  Origs: 
  Dests: 
(0 1) 150 REM ***           BOX 746, M.S. 338
  Origs: 
  Dests: 
(0 1) 160 REM ***           BALTIMORE, MD  21203
  Origs: 
  Dests: 
(0 1) 170 REM ***
  Origs: 
  Dests: 
(0 1) 180 REM *** CONVERTED TO MICROSOFT 8 K BASIC 3/16/78 BY JOHN GORDERS
  Origs: 
  Dests: 
(0 1) 190 REM *** LINE NUMBERS FROM VERSION STREK7 OF 1/12/75 PRESERVED AS
  Origs: 
  Dests: 
(0 1) 200 REM *** MUCH AS POSSIBLE WHILE USING MULTIPLE STATEMENTS PER LINE
  Origs: 
  Dests: 
(0 1) 205 REM *** SOME LINES ARE LONGER THAN 72 CHARACTERS; THIS WAS DONE
  Origs: 
  Dests: 
(0 1) 210 REM *** BY USING "?" INSTEAD OF "PRINT" WHEN ENTERING LINES
  Origs: 
  Dests: 
(0 1) 215 REM ***
  Origs: 
  Dests: 
G(6000) (0 2) 220 PRINT
G(6000) (0 2)     PRINT
G(6000) (0 2)     PRINT
G(6000) (0 2)     PRINT
G(6000) (0 2)     PRINT
G(6000) (0 2)     PRINT
G(6000) (0 2)     PRINT
G(6000) (0 2)     PRINT
G(6000) (0 2)     PRINT
G(6000) (0 2)     PRINT
G(6000) (0 2)     PRINT
  Origs: :start, 30:auto
  Dests: 221:auto
G(6000) (0 2) 221 PRINT "                                    ,------*------,"
  Origs: 220:auto
  Dests: 222:auto
G(6000) (0 2) 222 PRINT "                    ,-------------   '---  ------'"
  Origs: 221:auto
  Dests: 223:auto
G(6000) (0 2) 223 PRINT "                     '-------- --'      / /"
  Origs: 222:auto
  Dests: 224:auto
G(6000) (0 2) 224 PRINT "                         ,---' '-------/ /--,"
  Origs: 223:auto
  Dests: 225:auto
G(6000) (0 2) 225 PRINT "                          '----------------'"
G(6000) (0 2)     PRINT
  Origs: 224:auto
  Dests: 226:auto
G(6000) (0 2) 226 PRINT "                    THE USS ENTERPRISE --- NCC-1701"
  Origs: 225:auto
  Dests: 227:auto
G(6000) (0 2) 227 PRINT
G(6000) (0 2)     PRINT
G(6000) (0 2)     PRINT
G(6000) (0 2)     PRINT
G(6000) (0 2)     PRINT
  Origs: 226:auto
  Dests: 270:auto
(0 1) 260 REM CLEAR 600
  Origs: 
  Dests: 
G(6000) (0 3) 270 Z$ = "                         "
  Origs: 227:auto
  Dests: 330:auto
G(6000) (0 7) 330 DIM G(8, 8), C(9, 2), K(3, 3), N(3), Z(8, 8), D(8)
  Origs: 270:auto
  Dests: 370:auto
G(6000) (0 5) 370 T = INT(RND(1) * 20 + 20) * 100
G(6000) (0 3)     T0 = T
G(6000) (0 5)     T9 = 25 + INT(RND(1) * 10)
G(6000) (0 3)     D0 = 0
G(6000) (0 3)     E = 3000
G(6000) (0 3)     E0 = E
  Origs: 330:auto
  Dests: 440:auto
G(6000) (0 3) 440 P = 10
G(6000) (0 3)     P0 = P
G(6000) (0 3)     S9 = 200
G(6000) (0 3)     S = 0
G(6000) (0 3)     B9 = 2
G(6000) (0 3)     K9 = 0
G(6000) (0 3)     X$ = ""
G(6000) (0 3)     X0$ = " IS "
  Origs: 370:auto
  Dests: 490:auto
FND(_) (0 3) 470 DEF FND(D) = SQR((K(I, 1) - S1) ^ 2 + (K(I, 2) - S2) ^ 2)
  Origs: 
  Dests: 
FNR(_) (0 3) 475 DEF FNR(R) = INT(RND(R) * 7.98 + 1.01)
  Origs: 490:function, 1040:function, 1160:function, 2910:function, 6140:function, 8590:function
  Dests: 
(0 1) 480 REM INITIALIZE ENTERPRIZE'S POSITION
  Origs: 
  Dests: 
G(6000) (0 5) 490 Q1 = FNR(1)
G(6000) (0 5)     Q2 = FNR(1)
G(6000) (0 5)     S1 = FNR(1)
G(6000) (0 5)     S2 = FNR(1)
  Origs: 440:auto
  Dests: 475:function, 530:auto
G(6000) (1 3) 530 FOR I = 1 TO 9
G(6000) (0 3)     C(I, 1) = 0
G(6000) (0 3)     C(I, 2) = 0
G(6000) (0 1)     NEXT I
  Origs: 490:auto
  Dests: 540:auto
G(6000) (0 4) 540 C(3, 1) = -1
G(6000) (0 4)     C(2, 1) = -1
G(6000) (0 4)     C(4, 1) = -1
G(6000) (0 4)     C(4, 2) = -1
G(6000) (0 4)     C(5, 2) = -1
G(6000) (0 4)     C(6, 2) = -1
  Origs: 530:auto
  Dests: 600:auto
G(6000) (0 3) 600 C(1, 2) = 1
G(6000) (0 3)     C(2, 2) = 1
G(6000) (0 3)     C(6, 1) = 1
G(6000) (0 3)     C(7, 1) = 1
G(6000) (0 3)     C(8, 1) = 1
G(6000) (0 3)     C(8, 2) = 1
G(6000) (0 3)     C(9, 2) = 1
  Origs: 540:auto
  Dests: 670:auto
G(6000) (1 3) 670 FOR I = 1 TO 8
G(6000) (0 3)     D(I) = 0
G(6000) (0 1)     NEXT I
  Origs: 600:auto
  Dests: 710:auto
G(6000) (0 3) 710 A1$ = "NAVSRSLRSPHATORSHEDAMCOMXXX"
  Origs: 670:auto
  Dests: 820:auto
(0 1) 810 REM SETUP WHAT EXHISTS IN GALAXY . . .
  Origs: 
  Dests: 
(0 1) 815 REM K3= # KLINGONS  B3= # STARBASES  S3 = # STARS
  Origs: 
  Dests: 
G(6000) (1 3) 820 FOR I = 1 TO 8
G(6000) (1 3)     FOR J = 1 TO 8
G(6000) (0 3)     K3 = 0
G(6000) (0 3)     Z(I, J) = 0
G(6000) (0 4)     R1 = RND(1)
  Origs: 710:auto
  Dests: 850:auto, 1040:fornext
G(6000) (1 6) 850 IF R1 > .98 THEN K3 = 3
G(6000) (0 4)     K9 = K9 + 3
G(6000) (0 2)     GOTO 980
  Origs: 820:auto
  Dests: 860:auto, 980:goto
G(6000) (1 6) 860 IF R1 > .95 THEN K3 = 2
G(6000) (0 4)     K9 = K9 + 2
G(6000) (0 2)     GOTO 980
  Origs: 850:auto
  Dests: 870:auto, 980:goto
G(6000) (1 6) 870 IF R1 > .80 THEN K3 = 1
G(6000) (0 4)     K9 = K9 + 1
  Origs: 860:auto
  Dests: 980:auto
G(6000) (0 3) 980 B3 = 0
G(6000) (1 7)     IF RND(1) > .96 THEN B3 = 1
G(6000) (0 4)     B9 = B9 + 1
  Origs: 850:goto, 860:goto, 870:auto
  Dests: 1040:auto
G(6000) (0 10) 1040 G(I, J) = K3 * 100 + B3 * 10 + FNR(1)
G(6000) (0 1)      NEXT J
G(6000) (0 1)      NEXT I
G(6000) (1 7)      IF K9 > T9 THEN T9 = K9 + 1
  Origs: 820:fornext, 980:auto
  Dests: 475:function, 1100:auto
G(6000) (1 4) 1100 IF B9 <> 0 THEN 1200
  Origs: 1040:auto
  Dests: 1150:auto, 1200:ifthen
G(6000) (1 7) 1150 IF G(Q1, Q2) < 200 THEN G(Q1, Q2) = G(Q1, Q2) + 120
G(6000) (0 4)      K9 = K9 + 1
  Origs: 1100:auto
  Dests: 1160:auto
G(6000) (0 3) 1160 B9 = 1
G(6000) (0 4)      G(Q1, Q2) = G(Q1, Q2) + 10
G(6000) (0 5)      Q1 = FNR(1)
G(6000) (0 5)      Q2 = FNR(1)
  Origs: 1150:auto
  Dests: 475:function, 1200:auto
G(6000) (0 3) 1200 K7 = K9
G(6000) (1 6)      IF B9 <> 1 THEN X$ = "S"
G(6000) (0 3)      X0$ = " ARE "
  Origs: 1100:ifthen, 1160:auto
  Dests: 1230:auto
G(6000) (0 2) 1230 PRINT "YOUR ORDERS ARE AS FOLLOWS:"
  Origs: 1200:auto
  Dests: 1240:auto
G(6000) (0 4) 1240 PRINT "     DESTROY THE"; K9; "KLINGON WARSHIPS WHICH HAVE INVADED"
  Origs: 1230:auto
  Dests: 1252:auto
G(6000) (0 2) 1252 PRINT "   THE GALAXY BEFORE THEY CAN ATTACK FEDERATION HEADQUARTERS"
  Origs: 1240:auto
  Dests: 1260:auto
G(6000) (0 8) 1260 PRINT "   ON STARDATE"; T0 + T9; "  THIS GIVES YOU"; T9; "DAYS.  THERE"; X0$
  Origs: 1252:auto
  Dests: 1272:auto
G(6000) (0 6) 1272 PRINT "  "; B9; "STARBASE"; X$; " IN THE GALAXY FOR RESUPPLYING YOUR SHIP"
  Origs: 1260:auto
  Dests: 1280:auto
G(6000) (0 2) 1280 PRINT
(0 1)      REM PRINT"HIT ANY KEY EXCEPT RETURN WHEN READY TO ACCEPT COMMAND"
  Origs: 1272:auto
  Dests: 1300:auto
G(6000) (0 4) 1300 I = RND(1)
(0 1)      REM IF INP(1)=13 THEN 1300
  Origs: 1280:auto
  Dests: 1320:auto
(0 1) 1310 REM HERE ANY TIME NEW QUADRANT ENTERED
  Origs: 
  Dests: 
G(6000) (0 3) 1320 Z4 = Q1
G(6000) (0 3)      Z5 = Q2
G(6000) (0 3)      K3 = 0
G(6000) (0 3)      B3 = 0
G(6000) (0 3)      S3 = 0
G(6000) (0 3)      G5 = 0
G(6000) (0 5)      D4 = .5 * RND(1)
G(6000) (0 3)      Z(Q1, Q2) = G(Q1, Q2)
  Origs: 1300:auto, 3870:goto
  Dests: 1390:auto
G(6000) (1 13) 1390 IF Q1 < 1 OR Q1 > 8 OR Q2 < 1 OR Q2 > 8 THEN 1600
  Origs: 1320:auto
  Dests: 1430:auto, 1600:ifthen
G(6000) (0 2) 1430 GOSUB 9030
G(6000) (0 2)      PRINT
G(6000) (1 4)      IF T0 <> T THEN 1490
  Origs: 1390:auto
  Dests: 1460:auto, 1490:ifthen, 9030:gosub
G(6000) (0 2) 1460 PRINT "YOUR MISSION BEGINS WITH YOUR STARSHIP LOCATED"
  Origs: 1430:auto
  Dests: 1470:auto
G(6000) (0 4) 1470 PRINT "IN THE GALACTIC QUADRANT, '"; G2$; "'."
G(6000) (0 2)      GOTO 1500
  Origs: 1460:auto
  Dests: 1500:goto
G(6000) (0 4) 1490 PRINT "NOW ENTERING "; G2$; " QUADRANT . . ."
  Origs: 1430:ifthen
  Dests: 1500:auto
G(6000) (0 2) 1500 PRINT
G(6000) (0 4)      K3 = INT(G(Q1, Q2) * .01)
G(6000) (0 7)      B3 = INT(G(Q1, Q2) * .1) - 10 * K3
  Origs: 1470:goto, 1490:auto
  Dests: 1540:auto
G(6000) (0 9) 1540 S3 = G(Q1, Q2) - 100 * K3 - 10 * B3
G(6000) (1 4)      IF K3 = 0 THEN 1590
  Origs: 1500:auto
  Dests: 1560:auto, 1590:ifthen
G(6000) (0 2) 1560 PRINT "COMBAT AREA      CONDITION RED"
G(6000) (1 4)      IF S > 200 THEN 1590
  Origs: 1540:auto
  Dests: 1580:auto, 1590:ifthen
G(6000) (0 2) 1580 PRINT "   SHIELDS DANGEROUSLY LOW"
  Origs: 1560:auto
  Dests: 1590:auto
G(6000) (1 3) 1590 FOR I = 1 TO 3
G(6000) (0 3)      K(I, 1) = 0
G(6000) (0 3)      K(I, 2) = 0
G(6000) (0 1)      NEXT I
  Origs: 1540:ifthen, 1560:ifthen, 1580:auto
  Dests: 1600:auto
G(6000) (1 3) 1600 FOR I = 1 TO 3
G(6000) (0 3)      K(I, 3) = 0
G(6000) (0 1)      NEXT I
G(6000) (0 11)      Q$ = Z$ + Z$ + Z$ + Z$ + Z$ + Z$ + Z$ + LEFT$(Z$, 17)
  Origs: 1390:ifthen, 1590:auto
  Dests: 1680:auto
(0 1) 1660 REM POSITION ENTERPRISE IN QUADRANT, THEN PLACE "K3" KLINGONS, &
  Origs: 
  Dests: 
(0 1) 1670 REM "B3" STARBASES, & "S3" STARS ELSEWHERE.
  Origs: 
  Dests: 
G(6000) (0 3) 1680 A$ = "<*>"
G(6000) (0 3)      Z1 = S1
G(6000) (0 3)      Z2 = S2
G(6000) (0 2)      GOSUB 8670
G(6000) (1 4)      IF K3 < 1 THEN 1820
  Origs: 1600:auto
  Dests: 1720:auto, 1820:ifthen, 8670:gosub
G(6000) (1 3) 1720 FOR I = 1 TO K3
G(6000) (0 2)      GOSUB 8590
G(6000) (0 3)      A$ = "+K+"
G(6000) (0 3)      Z1 = R1
G(6000) (0 3)      Z2 = R2
  Origs: 1680:auto
  Dests: 1780:auto, 1780:fornext, 8590:gosub
G(6000) (0 2) 1780 GOSUB 8670
G(6000) (0 3)      K(I, 1) = R1
G(6000) (0 3)      K(I, 2) = R2
G(6000) (0 7)      K(I, 3) = S9 * (0.5 + RND(1))
G(6000) (0 1)      NEXT I
  Origs: 1720:auto, 1720:fornext
  Dests: 1820:auto, 8670:gosub
G(6000) (1 4) 1820 IF B3 < 1 THEN 1910
  Origs: 1680:ifthen, 1780:auto
  Dests: 1880:auto, 1910:ifthen
G(6000) (0 2) 1880 GOSUB 8590
G(6000) (0 3)      A$ = ">!<"
G(6000) (0 3)      Z1 = R1
G(6000) (0 3)      B4 = R1
G(6000) (0 3)      Z2 = R2
G(6000) (0 3)      B5 = R2
G(6000) (0 2)      GOSUB 8670
  Origs: 1820:auto
  Dests: 1910:auto, 8590:gosub, 8670:gosub
G(6000) (1 3) 1910 FOR I = 1 TO S3
G(6000) (0 2)      GOSUB 8590
G(6000) (0 3)      A$ = " * "
G(6000) (0 3)      Z1 = R1
G(6000) (0 3)      Z2 = R2
G(6000) (0 2)      GOSUB 8670
G(6000) (0 1)      NEXT I
  Origs: 1820:ifthen, 1880:auto
  Dests: 1980:auto, 8590:gosub, 8670:gosub
G(6000) (0 2) 1980 GOSUB 6430
  Origs: 1910:auto, 2140:goto, 3480:goto
  Dests: 1990:auto, 6430:gosub
G(6000) (2 11) 1990 IF S + E > 10 THEN IF E > 10 OR D(7) = 0 THEN 2060
  Origs: 1980:auto, 2260:goto, 2330:goto, 2390:ifthen, 2430:goto, 2470:goto, 2530:ifthen, 2570:goto, 4000:goto, 4230:goto, 4260:goto, 4280:goto, 4370:ifthen, 4670:goto, 4700:goto, 4730:goto, 4800:goto, 5260:goto, 5470:goto, 5490:goto, 5530:goto, 5580:goto, 5610:goto, 5660:goto, 5700:ifthen, 5760:ifthen, 5860:ifthen, 5980:goto, 7290:goto, 7320:ifthen, 7850:goto, 8460:ifthen, 8480:goto, 8520:goto
  Dests: 2020:auto, 2060:ifthen
G(6000) (0 2) 2020 PRINT
G(6000) (0 2)      PRINT "** FATAL ERROR **   YOU'VE JUST STRANDED YOUR SHIP IN "
  Origs: 1990:auto
  Dests: 2030:auto
G(6000) (0 2) 2030 PRINT "SPACE"
G(6000) (0 2)      PRINT "YOU HAVE INSUFFICIENT MANEUVERING ENERGY,";
  Origs: 2020:auto
  Dests: 2040:auto
G(6000) (0 2) 2040 PRINT " AND SHIELD CONTROL"
G(6000) (0 2)      PRINT "IS PRESENTLY INCAPABLE OF CROSS";
  Origs: 2030:auto
  Dests: 2050:auto
G(6000) (0 2) 2050 PRINT "-CIRCUITING TO ENGINE ROOM!!"
G(6000) (0 2)      GOTO 6220
  Origs: 2040:auto
  Dests: 6220:goto
G(6000) (1 2) 2060 INPUT "COMMAND"; A$
  Origs: 1990:ifthen
  Dests: 2080:auto
G(6000) (1 3) 2080 FOR I = 1 TO 9
G(6000) (1 6)      IF LEFT$(A$, 3) <> MID$(A1$, 3 * I - 2, 3) THEN 2160
  Origs: 2060:auto
  Dests: 2140:auto, 2160:fornext, 2160:ifthen
G(6000) (9 12) 2140 ON I GOTO 2300, 1980, 4000, 4260, 4700, 5530, 5690, 7290, 6270
  Origs: 2080:auto
  Dests: 1980:goto, 2160:auto, 2300:goto, 4000:goto, 4260:goto, 4700:goto, 5530:goto, 5690:goto, 6270:goto, 7290:goto
G(6000) (0 1) 2160 NEXT I
G(6000) (0 2)      PRINT "ENTER ONE OF THE FOLLOWING:"
  Origs: 2080:fornext, 2080:ifthen, 2140:auto
  Dests: 2180:auto
G(6000) (0 2) 2180 PRINT "  NAV  (TO SET COURSE)"
  Origs: 2160:auto
  Dests: 2190:auto
G(6000) (0 2) 2190 PRINT "  SRS  (FOR SHORT RANGE SENSOR SCAN)"
  Origs: 2180:auto
  Dests: 2200:auto
G(6000) (0 2) 2200 PRINT "  LRS  (FOR LONG RANGE SENSOR SCAN)"
  Origs: 2190:auto
  Dests: 2210:auto
G(6000) (0 2) 2210 PRINT "  PHA  (TO FIRE PHASERS)"
  Origs: 2200:auto
  Dests: 2220:auto
G(6000) (0 2) 2220 PRINT "  TOR  (TO FIRE PHOTON TORPEDOES)"
  Origs: 2210:auto
  Dests: 2230:auto
G(6000) (0 2) 2230 PRINT "  SHE  (TO RAISE OR LOWER SHIELDS)"
  Origs: 2220:auto
  Dests: 2240:auto
G(6000) (0 2) 2240 PRINT "  DAM  (FOR DAMAGE CONTROL REPORTS)"
  Origs: 2230:auto
  Dests: 2250:auto
G(6000) (0 2) 2250 PRINT "  COM  (TO CALL ON LIBRARY-COMPUTER)"
  Origs: 2240:auto
  Dests: 2260:auto
G(6000) (0 2) 2260 PRINT "  XXX  (TO RESIGN YOUR COMMAND)"
G(6000) (0 2)      PRINT
G(6000) (0 3)      GOTO 1990
  Origs: 2250:auto
  Dests: 1990:goto
(0 1) 2290 REM COURSE CONTROL BEGINS HERE
  Origs: 
  Dests: 
G(6000) (1 2) 2300 INPUT "COURSE (0-9)"; C1
G(6000) (1 6)      IF C1 = 9 THEN C1 = 1
  Origs: 2140:goto
  Dests: 2310:auto
G(6000) (1 7) 2310 IF C1 >= 1 AND C1 < 9 THEN 2350
  Origs: 2300:auto
  Dests: 2330:auto, 2350:ifthen
G(6000) (0 2) 2330 PRINT "   LT. SULU REPORTS, 'INCORRECT COURSE DATA, SIR!'"
G(6000) (0 3)      GOTO 1990
  Origs: 2310:auto
  Dests: 1990:goto
G(6000) (0 3) 2350 X$ = "8"
G(6000) (1 6)      IF D(1) < 0 THEN X$ = "0.2"
  Origs: 2310:ifthen
  Dests: 2360:auto
G(6000) (0 4) 2360 PRINT "WARP FACTOR (0-"; X$; ")";
G(6000) (1 2)      INPUT W1
G(6000) (1 7)      IF D(1) < 0 AND W1 > .2 THEN 2470
  Origs: 2350:auto
  Dests: 2380:auto, 2470:ifthen
G(6000) (1 7) 2380 IF W1 > 0 AND W1 <= 8 THEN 2490
  Origs: 2360:auto
  Dests: 2390:auto, 2490:ifthen
G(6000) (1 5) 2390 IF W1 = 0 THEN 1990
  Origs: 2380:auto
  Dests: 1990:ifthen, 2420:auto
G(6000) (0 2) 2420 PRINT "   CHIEF ENGINEER SCOTT REPORTS 'THE ENGINES WON'T TAKE";
  Origs: 2390:auto
  Dests: 2430:auto
G(6000) (0 4) 2430 PRINT " WARP "; W1; "!'"
G(6000) (0 3)      GOTO 1990
  Origs: 2420:auto
  Dests: 1990:goto
G(6000) (0 2) 2470 PRINT "WARP ENGINES ARE DAMAGED.  MAXIUM SPEED = WARP 0.2"
G(6000) (0 3)      GOTO 1990
  Origs: 2360:ifthen
  Dests: 1990:goto
G(6000) (0 4) 2490 N = INT(W1 * 8 + .5)
G(6000) (1 5)      IF E - N >= 0 THEN 2590
  Origs: 2380:ifthen
  Dests: 2500:auto, 2590:ifthen
G(6000) (0 2) 2500 PRINT "ENGINEERING REPORTS   'INSUFFICIENT ENERGY AVAILABLE"
  Origs: 2490:auto
  Dests: 2510:auto
G(6000) (0 4) 2510 PRINT "                       FOR MANEUVERING AT WARP"; W1; "!'"
  Origs: 2500:auto
  Dests: 2530:auto
G(6000) (1 10) 2530 IF S < N - E OR D(7) < 0 THEN 1990
  Origs: 2510:auto
  Dests: 1990:ifthen, 2550:auto
G(6000) (0 4) 2550 PRINT "DEFLECTOR CONTROL ROOM ACKNOWLEDGES"; S; "UNITS OF ENERGY"
  Origs: 2530:auto
  Dests: 2560:auto
G(6000) (0 2) 2560 PRINT "                         PRESENTLY DEPLOYED TO SHIELDS."
  Origs: 2550:auto
  Dests: 2570:auto
G(6000) (0 3) 2570 GOTO 1990
  Origs: 2560:auto
  Dests: 1990:goto
(0 1) 2580 REM KLINGONS MOVE/FIRE ON MOVING STARSHIP . . .
  Origs: 
  Dests: 
G(6000) (1 3) 2590 FOR I = 1 TO K3
G(6000) (1 4)      IF K(I, 3) = 0 THEN 2700
  Origs: 2490:ifthen
  Dests: 2610:auto, 2700:fornext, 2700:ifthen
G(6000) (0 3) 2610 A$ = "   "
G(6000) (0 3)      Z1 = K(I, 1)
G(6000) (0 3)      Z2 = K(I, 2)
G(6000) (0 2)      GOSUB 8670
G(6000) (0 2)      GOSUB 8590
  Origs: 2590:auto
  Dests: 2660:auto, 8590:gosub, 8670:gosub
G(6000) (0 3) 2660 K(I, 1) = Z1
G(6000) (0 3)      K(I, 2) = Z2
G(6000) (0 3)      A$ = "+K+"
G(6000) (0 2)      GOSUB 8670
  Origs: 2610:auto
  Dests: 2700:auto, 8670:gosub
G(6000) (0 1) 2700 NEXT I
G(6000) (0 2)      GOSUB 6000
G(6000) (0 3)      D1 = 0
G(6000) (0 3)      D6 = W1
G(6000) (1 6)      IF W1 >= 1 THEN D6 = 1
  Origs: 2590:fornext, 2590:ifthen, 2660:auto
  Dests: 2770:auto, 6000:gosub
G(6000) (1 3) 2770 FOR I = 1 TO 8
G(6000) (1 4)      IF D(I) >= 0 THEN 2880
  Origs: 2700:auto
  Dests: 2790:auto, 2880:fornext, 2880:ifthen
G(6000) (0 4) 2790 D(I) = D(I) + D6
G(6000) (1 12)      IF D(I) > -.1 AND D(I) < 0 THEN D(I) = -.1
G(6000) (0 2)      GOTO 2880
  Origs: 2770:auto
  Dests: 2800:auto, 2880:goto
G(6000) (1 4) 2800 IF D(I) < 0 THEN 2880
  Origs: 2790:auto
  Dests: 2810:auto, 2880:ifthen
G(6000) (1 6) 2810 IF D1 <> 1 THEN D1 = 1
G(6000) (0 2)      PRINT "DAMAGE CONTROL REPORT:  ";
  Origs: 2800:auto
  Dests: 2840:auto
G(6000) (0 3) 2840 PRINT TAB(8);
G(6000) (0 3)      R1 = I
G(6000) (0 2)      GOSUB 8790
G(6000) (0 3)      PRINT G2$; " REPAIR COMPLETED."
  Origs: 2810:auto
  Dests: 2880:auto, 8790:gosub
G(6000) (0 1) 2880 NEXT I
G(6000) (1 5)      IF RND(1) > .2 THEN 3070
  Origs: 2770:fornext, 2770:ifthen, 2790:goto, 2800:ifthen, 2840:auto
  Dests: 2910:auto, 3070:ifthen
G(6000) (0 5) 2910 R1 = FNR(1)
G(6000) (1 5)      IF RND(1) >= .6 THEN 3000
  Origs: 2880:auto
  Dests: 475:function, 2930:auto, 3000:ifthen
G(6000) (0 8) 2930 D(R1) = D(R1) - (RND(1) * 5 + 1)
G(6000) (0 2)      PRINT "DAMAGE CONTROL REPORT:  ";
  Origs: 2910:auto
  Dests: 2960:auto
G(6000) (0 2) 2960 GOSUB 8790
G(6000) (0 3)      PRINT G2$; " DAMAGED"
G(6000) (0 2)      PRINT
G(6000) (0 2)      GOTO 3070
  Origs: 2930:auto
  Dests: 3070:goto, 8790:gosub
G(6000) (0 8) 3000 D(R1) = D(R1) + RND(1) * 3 + 1
G(6000) (0 2)      PRINT "DAMAGE CONTROL REPORT:  ";
  Origs: 2910:ifthen
  Dests: 3030:auto
G(6000) (0 2) 3030 GOSUB 8790
G(6000) (0 3)      PRINT G2$; " STATE OF REPAIR IMPROVED"
G(6000) (0 2)      PRINT
  Origs: 3000:auto
  Dests: 3070:auto, 8790:gosub
(0 1) 3060 REM BEGIN MOVING STARSHIP
  Origs: 
  Dests: 
G(6000) (0 3) 3070 A$ = "   "
G(6000) (0 4)      Z1 = INT(S1)
G(6000) (0 4)      Z2 = INT(S2)
G(6000) (0 2)      GOSUB 8670
  Origs: 2880:ifthen, 2960:goto, 3030:auto
  Dests: 3110:auto, 8670:gosub
G(6000) (0 10) 3110 X1 = C(C1, 1) + (C(C1 + 1, 1) - C(C1, 1)) * (C1 - INT(C1))
G(6000) (0 3)      X = S1
G(6000) (0 3)      Y = S2
  Origs: 3070:auto
  Dests: 3140:auto
G(6000) (0 10) 3140 X2 = C(C1, 2) + (C(C1 + 1, 2) - C(C1, 2)) * (C1 - INT(C1))
G(6000) (0 3)      Q4 = Q1
G(6000) (0 3)      Q5 = Q2
  Origs: 3110:auto
  Dests: 3170:auto
G(6000) (1 3) 3170 FOR I = 1 TO N
G(6000) (0 4)      S1 = S1 + X1
G(6000) (0 4)      S2 = S2 + X2
G(6000) (1 13)      IF S1 < 1 OR S1 >= 9 OR S2 < 1 OR S2 >= 9 THEN 3500
  Origs: 3140:auto
  Dests: 3240:auto, 3360:fornext, 3500:ifthen
G(6000) (0 10) 3240 S8 = INT(S1) * 24 + INT(S2) * 3 - 26
G(6000) (1 5)      IF MID$(Q$, S8, 2) = "  " THEN 3360
  Origs: 3170:auto
  Dests: 3320:auto, 3360:ifthen
G(6000) (0 4) 3320 S1 = INT(S1 - X1)
G(6000) (0 4)      S2 = INT(S2 - X2)
G(6000) (0 2)      PRINT "WARP ENGINES SHUT DOWN AT ";
  Origs: 3240:auto
  Dests: 3350:auto
G(6000) (0 6) 3350 PRINT "SECTOR"; S1; ","; S2; "DUE TO BAD NAVAGATION"
G(6000) (0 2)      GOTO 3370
  Origs: 3320:auto
  Dests: 3370:goto
G(6000) (0 1) 3360 NEXT I
G(6000) (0 4)      S1 = INT(S1)
G(6000) (0 4)      S2 = INT(S2)
  Origs: 3170:fornext, 3240:ifthen
  Dests: 3370:auto
G(6000) (0 3) 3370 A$ = "<*>"
G(6000) (0 4)      Z1 = INT(S1)
G(6000) (0 4)      Z2 = INT(S2)
G(6000) (0 2)      GOSUB 8670
G(6000) (0 2)      GOSUB 3910
G(6000) (0 3)      T8 = 1
     WARNING: Statement before GOSUB entry point
  Origs: 3350:goto, 3360:auto, 3860:ifthen
  Dests: 3430:auto, 3910:gosub, 8670:gosub
G(6000) (1 8) 3430 IF W1 < 1 THEN T8 = .1 * INT(10 * W1)
  Origs: 3370:auto
  Dests: 3450:auto
G(6000) (0 4) 3450 T = T + T8
G(6000) (1 6)      IF T > T0 + T9 THEN 6220
  Origs: 3430:auto
  Dests: 3470:auto, 3480:auto, 6220:ifthen
G(6000) (0 1) 3470 REM SEE IF DOCKED, THEN GET COMMAND
  Origs: 3450:auto
  Dests: 3480:auto
G(6000) (0 3) 3480 GOTO 1980
  Origs: 3450:auto, 3470:auto
  Dests: 1980:goto
(0 1) 3490 REM EXCEEDED QUADRANT LIMITS
  Origs: 
  Dests: 
G(6000) (0 8) 3500 X = 8 * Q1 + X + N * X1
G(6000) (0 8)      Y = 8 * Q2 + Y + N * X2
G(6000) (0 4)      Q1 = INT(X / 8)
G(6000) (0 4)      Q2 = INT(Y / 8)
G(6000) (0 4)      S1 = INT(X - Q1 * 8)
  Origs: 3170:ifthen
  Dests: 3550:auto
G(6000) (0 4) 3550 S2 = INT(Y - Q2 * 8)
G(6000) (1 7)      IF S1 = 0 THEN Q1 = Q1 - 1
G(6000) (0 3)      S1 = 8
  Origs: 3500:auto
  Dests: 3590:auto
G(6000) (1 7) 3590 IF S2 = 0 THEN Q2 = Q2 - 1
G(6000) (0 3)      S2 = 8
  Origs: 3550:auto
  Dests: 3620:auto
G(6000) (0 3) 3620 X5 = 0
G(6000) (1 6)      IF Q1 < 1 THEN X5 = 1
G(6000) (0 3)      Q1 = 1
G(6000) (0 3)      S1 = 1
  Origs: 3590:auto
  Dests: 3670:auto
G(6000) (1 6) 3670 IF Q1 > 8 THEN X5 = 1
G(6000) (0 3)      Q1 = 8
G(6000) (0 3)      S1 = 8
  Origs: 3620:auto
  Dests: 3710:auto
G(6000) (1 6) 3710 IF Q2 < 1 THEN X5 = 1
G(6000) (0 3)      Q2 = 1
G(6000) (0 3)      S2 = 1
  Origs: 3670:auto
  Dests: 3750:auto
G(6000) (1 6) 3750 IF Q2 > 8 THEN X5 = 1
G(6000) (0 3)      Q2 = 8
G(6000) (0 3)      S2 = 8
  Origs: 3710:auto
  Dests: 3790:auto
G(6000) (1 4) 3790 IF X5 = 0 THEN 3860
  Origs: 3750:auto
  Dests: 3800:auto, 3860:ifthen
G(6000) (0 2) 3800 PRINT "LT. UHURA REPORTS MESSAGE FROM STARFLEET COMMAND:"
  Origs: 3790:auto
  Dests: 3810:auto
G(6000) (0 2) 3810 PRINT "  'PERMISSION TO ATTEMPT CROSSING OF GALACTIC PERIMETER"
  Origs: 3800:auto
  Dests: 3820:auto
G(6000) (0 2) 3820 PRINT "  IS HEREBY *DENIED*.  SHUT DOWN YOUR ENGINES.'"
  Origs: 3810:auto
  Dests: 3830:auto
G(6000) (0 2) 3830 PRINT "CHIEF ENGINEER SCOTT REPORTS  'WARP ENGINES SHUT DOWN"
  Origs: 3820:auto
  Dests: 3840:auto
G(6000) (0 10) 3840 PRINT "  AT SECTOR"; S1; ","; S2; "OF QUADRANT"; Q1; ","; Q2; ".'"
  Origs: 3830:auto
  Dests: 3850:auto
G(6000) (1 6) 3850 IF T > T0 + T9 THEN 6220
  Origs: 3840:auto
  Dests: 3860:auto, 6220:ifthen
G(6000) (1 10) 3860 IF 8 * Q1 + Q2 = 8 * Q4 + Q5 THEN 3370
  Origs: 3790:ifthen, 3850:auto
  Dests: 3370:ifthen, 3870:auto
G(6000) (0 4) 3870 T = T + 1
G(6000) (0 2)      GOSUB 3910
G(6000) (0 3)      GOTO 1320
  Origs: 3860:auto
  Dests: 1320:goto, 3910:gosub
(0 1) 3900 REM MANEUVER ENERGY S/R **
  Origs: 
  Dests: 
G(3910) (0 5) 3910 E = E - N - 10
G(3910) (1 4)      IF E >= 0 THEN RETURN
  Origs: 3370:gosub, 3870:gosub
  Dests: 3930:auto
G(3910) (0 2) 3930 PRINT "SHIELD CONTROL SUPPLIES ENERGY TO COMPLETE THE MANEUVER."
  Origs: 3910:auto
  Dests: 3940:auto
G(3910) (0 4) 3940 S = S + E
G(3910) (0 3)      E = 0
G(3910) (1 6)      IF S <= 0 THEN S = 0
  Origs: 3930:auto
  Dests: 3980:auto
G(3910) (0 1) 3980 RETURN
  Origs: 3940:auto
  Dests: 
(0 1) 3990 REM LONG RANGE SENSOR SCAN CODE
  Origs: 
  Dests: 
G(6000) (1 5) 4000 IF D(3) < 0 THEN PRINT "LONG RANGE SENSORS ARE INOPERABLE"
G(6000) (0 3)      GOTO 1990
  Origs: 2140:goto
  Dests: 1990:goto, 4030:auto
G(6000) (0 5) 4030 PRINT "LONG RANGE SCAN FOR QUADRANT"; Q1; ","; Q2
  Origs: 4000:auto
  Dests: 4040:auto
G(6000) (0 3) 4040 O1$ = "-------------------"
G(6000) (0 2)      PRINT O1$
  Origs: 4030:auto
  Dests: 4060:auto
G(6000) (1 5) 4060 FOR I = Q1 - 1 TO Q1 + 1
G(6000) (0 4)      N(1) = -1
G(6000) (0 4)      N(2) = -2
G(6000) (0 4)      N(3) = -3
G(6000) (1 5)      FOR J = Q2 - 1 TO Q2 + 1
  Origs: 4040:auto
  Dests: 4120:fornext, 4180:fornext, 4230:fornext
G(6000) (1 15) 4120 IF I > 0 AND I < 9 AND J > 0 AND J < 9 THEN N(J - Q2 + 2) = G(I, J)
G(6000) (0 3)      Z(I, J) = G(I, J)
  Origs: 4060:fornext
  Dests: 4180:auto
G(6000) (0 1) 4180 NEXT J
G(6000) (1 3)      FOR L = 1 TO 3
G(6000) (0 2)      PRINT ": ";
G(6000) (1 5)      IF N(L) < 0 THEN PRINT "*** ";
G(6000) (0 2)      GOTO 4230
  Origs: 4060:fornext, 4120:auto
  Dests: 4210:auto, 4230:fornext, 4230:goto
G(6000) (0 4) 4210 PRINT RIGHT$(STR$(N(L) + 1000), 3); " ";
  Origs: 4180:auto
  Dests: 4230:auto
G(6000) (0 1) 4230 NEXT L
G(6000) (0 2)      PRINT ":"
G(6000) (0 2)      PRINT O1$
G(6000) (0 1)      NEXT I
G(6000) (0 3)      GOTO 1990
  Origs: 4060:fornext, 4180:fornext, 4180:goto, 4210:auto
  Dests: 1990:goto
(0 1) 4250 REM PHASER CONTROL CODE BEGINS HERE
  Origs: 
  Dests: 
G(6000) (1 5) 4260 IF D(4) < 0 THEN PRINT "PHASERS INOPERATIVE"
G(6000) (0 3)      GOTO 1990
  Origs: 2140:goto
  Dests: 1990:goto, 4265:auto
G(6000) (1 4) 4265 IF K3 > 0 THEN 4330
  Origs: 4260:auto
  Dests: 4270:auto, 4330:ifthen
G(6000) (0 2) 4270 PRINT "SCIENCE OFFICER SPOCK REPORTS  'SENSORS SHOW NO ENEMY SHIPS"
  Origs: 4265:auto, 8070:ifthen
  Dests: 4280:auto
G(6000) (0 2) 4280 PRINT "                                IN THIS QUADRANT'"
G(6000) (0 3)      GOTO 1990
  Origs: 4270:auto
  Dests: 1990:goto
G(6000) (1 5) 4330 IF D(8) < 0 THEN PRINT "COMPUTER FAILURE HAMPERS ACCURACY"
  Origs: 4265:ifthen
  Dests: 4350:auto
G(6000) (0 2) 4350 PRINT "PHASERS LOCKED ON TARGET;  ";
  Origs: 4330:auto
  Dests: 4360:auto
G(6000) (0 4) 4360 PRINT "ENERGY AVAILABLE ="; E; "UNITS"
  Origs: 4350:auto, 4400:ifthen
  Dests: 4370:auto
G(6000) (1 2) 4370 INPUT "NUMBER OF UNITS TO FIRE"; X
G(6000) (1 5)      IF X <= 0 THEN 1990
  Origs: 4360:auto
  Dests: 1990:ifthen, 4400:auto
G(6000) (1 6) 4400 IF E - X < 0 THEN 4360
  Origs: 4370:auto
  Dests: 4360:ifthen, 4410:auto
G(6000) (0 4) 4410 E = E - X
G(6000) (1 8)      IF D(7) < 0 THEN X = X * RND(1)
  Origs: 4400:auto
  Dests: 4450:auto
G(6000) (0 4) 4450 H1 = INT(X / K3)
G(6000) (1 3)      FOR I = 1 TO 3
G(6000) (1 4)      IF K(I, 3) <= 0 THEN 4670
  Origs: 4410:auto
  Dests: 4480:auto, 4670:fornext, 4670:ifthen
G(6000) (0 4) 4480 H = INT((H1 / FND(0)) * (RND(1) + 2))
G(6000) (1 6)      IF H > .15 * K(I, 3) THEN 4530
  Origs: 4450:auto
  Dests: 4500:auto, 4530:ifthen
G(6000) (0 5) 4500 PRINT "SENSORS SHOW NO DAMAGE TO ENEMY AT "; K(I, 1); ","; K(I, 2)
G(6000) (0 2)      GOTO 4670
  Origs: 4480:auto
  Dests: 4670:goto
G(6000) (0 4) 4530 K(I, 3) = K(I, 3) - H
G(6000) (0 5)      PRINT H; "UNIT HIT ON KLINGON AT SECTOR"; K(I, 1); ",";
  Origs: 4480:ifthen
  Dests: 4550:auto
G(6000) (0 2) 4550 PRINT K(I, 2)
G(6000) (1 5)      IF K(I, 3) <= 0 THEN PRINT "*** KLINGON DESTROYED ***"
G(6000) (0 2)      GOTO 4580
  Origs: 4530:auto
  Dests: 4560:auto, 4580:goto
G(6000) (0 4) 4560 PRINT "   (SENSORS SHOW"; K(I, 3); "UNITS REMAINING)"
G(6000) (0 2)      GOTO 4670
  Origs: 4550:auto
  Dests: 4670:goto
G(6000) (0 4) 4580 K3 = K3 - 1
G(6000) (0 4)      K9 = K9 - 1
G(6000) (0 3)      Z1 = K(I, 1)
G(6000) (0 3)      Z2 = K(I, 2)
G(6000) (0 3)      A$ = "   "
G(6000) (0 2)      GOSUB 8670
  Origs: 4550:goto
  Dests: 4650:auto, 8670:gosub
G(6000) (0 3) 4650 K(I, 3) = 0
G(6000) (0 4)      G(Q1, Q2) = G(Q1, Q2) - 100
G(6000) (0 3)      Z(Q1, Q2) = G(Q1, Q2)
G(6000) (1 4)      IF K9 <= 0 THEN 6370
  Origs: 4580:auto
  Dests: 4670:auto, 6370:ifthen
G(6000) (0 1) 4670 NEXT I
G(6000) (0 2)      GOSUB 6000
G(6000) (0 3)      GOTO 1990
  Origs: 4450:fornext, 4450:ifthen, 4500:goto, 4560:goto, 4650:auto
  Dests: 1990:goto, 6000:gosub
(0 1) 4690 REM PHOTON TORPEDO CODE BEGINS HERE
  Origs: 
  Dests: 
G(6000) (1 5) 4700 IF P <= 0 THEN PRINT "ALL PHOTON TORPEDOES EXPENDED"
G(6000) (0 3)      GOTO 1990
  Origs: 2140:goto
  Dests: 1990:goto, 4730:auto
G(6000) (1 5) 4730 IF D(5) < 0 THEN PRINT "PHOTON TUBES ARE NOT OPERATIONAL"
G(6000) (0 3)      GOTO 1990
  Origs: 4700:auto
  Dests: 1990:goto, 4760:auto
G(6000) (1 2) 4760 INPUT "PHOTON TORPEDO COURSE (1-9)"; C1
G(6000) (1 6)      IF C1 = 9 THEN C1 = 1
  Origs: 4730:auto, 5280:ifthen
  Dests: 4780:auto
G(6000) (1 7) 4780 IF C1 >= 1 AND C1 < 9 THEN 4850
  Origs: 4760:auto
  Dests: 4790:auto, 4850:ifthen
G(6000) (0 2) 4790 PRINT "ENSIGN CHEKOV REPORTS,  'INCORRECT COURSE DATA, SIR!'"
  Origs: 4780:auto
  Dests: 4800:auto
G(6000) (0 3) 4800 GOTO 1990
  Origs: 4790:auto
  Dests: 1990:goto
G(6000) (0 10) 4850 X1 = C(C1, 1) + (C(C1 + 1, 1) - C(C1, 1)) * (C1 - INT(C1))
G(6000) (0 4)      E = E - 2
G(6000) (0 4)      P = P - 1
  Origs: 4780:ifthen
  Dests: 4860:auto
G(6000) (0 10) 4860 X2 = C(C1, 2) + (C(C1 + 1, 2) - C(C1, 2)) * (C1 - INT(C1))
G(6000) (0 3)      X = S1
G(6000) (0 3)      Y = S2
  Origs: 4850:auto
  Dests: 4910:auto
G(6000) (0 2) 4910 PRINT "TORPEDO TRACK:"
  Origs: 4860:auto
  Dests: 4920:auto
G(6000) (0 4) 4920 X = X + X1
G(6000) (0 4)      Y = Y + X2
G(6000) (0 4)      X3 = INT(X + .5)
G(6000) (0 4)      Y3 = INT(Y + .5)
  Origs: 4910:auto, 5050:ifthen
  Dests: 4960:auto
G(6000) (1 13) 4960 IF X3 < 1 OR X3 > 8 OR Y3 < 1 OR Y3 > 8 THEN 5490
  Origs: 4920:auto
  Dests: 5000:auto, 5490:ifthen
G(6000) (0 5) 5000 PRINT "               "; X3; ","; Y3
G(6000) (0 3)      A$ = "   "
G(6000) (0 3)      Z1 = X
G(6000) (0 3)      Z2 = Y
G(6000) (0 2)      GOSUB 8830
  Origs: 4960:auto
  Dests: 5050:auto, 8830:gosub
G(6000) (1 5) 5050 IF Z3 <> 0 THEN 4920
  Origs: 5000:auto
  Dests: 4920:ifthen, 5060:auto
G(6000) (0 3) 5060 A$ = "+K+"
G(6000) (0 3)      Z1 = X
G(6000) (0 3)      Z2 = Y
G(6000) (0 2)      GOSUB 8830
G(6000) (1 4)      IF Z3 = 0 THEN 5210
  Origs: 5050:auto
  Dests: 5110:auto, 5210:ifthen, 8830:gosub
G(6000) (0 2) 5110 PRINT "*** KLINGON DESTROYED ***"
G(6000) (0 4)      K3 = K3 - 1
G(6000) (0 4)      K9 = K9 - 1
G(6000) (1 4)      IF K9 <= 0 THEN 6370
  Origs: 5060:auto
  Dests: 5150:auto, 6370:ifthen
G(6000) (1 3) 5150 FOR I = 1 TO 3
G(6000) (1 7)      IF X3 = K(I, 1) AND Y3 = K(I, 2) THEN 5190
  Origs: 5110:auto
  Dests: 5180:auto, 5180:fornext, 5190:ifthen
G(6000) (0 1) 5180 NEXT I
G(6000) (0 3)      I = 3
  Origs: 5150:auto, 5150:fornext
  Dests: 5190:auto
G(6000) (0 3) 5190 K(I, 3) = 0
G(6000) (0 2)      GOTO 5430
  Origs: 5150:ifthen, 5180:auto
  Dests: 5430:goto
G(6000) (0 3) 5210 A$ = " * "
G(6000) (0 3)      Z1 = X
G(6000) (0 3)      Z2 = Y
G(6000) (0 2)      GOSUB 8830
G(6000) (1 4)      IF Z3 = 0 THEN 5280
  Origs: 5060:ifthen
  Dests: 5260:auto, 5280:ifthen, 8830:gosub
G(6000) (0 6) 5260 PRINT "STAR AT"; X3; ","; Y3; "ABSORBED TORPEDO ENERGY."
G(6000) (0 2)      GOSUB 6000
G(6000) (0 3)      GOTO 1990
  Origs: 5210:auto
  Dests: 1990:goto, 6000:gosub
G(6000) (0 3) 5280 A$ = ">!<"
G(6000) (0 3)      Z1 = X
G(6000) (0 3)      Z2 = Y
G(6000) (0 2)      GOSUB 8830
G(6000) (1 5)      IF Z3 = 0 THEN 4760
  Origs: 5210:ifthen
  Dests: 4760:ifthen, 5330:auto, 8830:gosub
G(6000) (0 2) 5330 PRINT "*** STARBASE DESTROYED ***"
G(6000) (0 4)      B3 = B3 - 1
G(6000) (0 4)      B9 = B9 - 1
  Origs: 5280:auto
  Dests: 5360:auto
G(6000) (1 10) 5360 IF B9 > 0 OR K9 > T - T0 - T9 THEN 5400
  Origs: 5330:auto
  Dests: 5370:auto, 5400:ifthen
G(6000) (0 2) 5370 PRINT "THAT DOES IT, CAPTAIN!!  YOU ARE HEREBY RELIEVED OF COMMAND"
  Origs: 5360:auto
  Dests: 5380:auto
G(6000) (0 2) 5380 PRINT "AND SENTENCED TO 99 STARDATES AT HARD LABOR ON CYGNUS 12!!"
  Origs: 5370:auto
  Dests: 5390:auto
G(6000) (0 2) 5390 GOTO 6270
  Origs: 5380:auto
  Dests: 6270:goto
G(6000) (0 2) 5400 PRINT "STARFLEET COMMAND REVIEWING YOUR RECORD TO CONSIDER"
  Origs: 5360:ifthen
  Dests: 5410:auto
G(6000) (0 2) 5410 PRINT "COURT MARTIAL!"
G(6000) (0 3)      D0 = 0
  Origs: 5400:auto
  Dests: 5430:auto
G(6000) (0 3) 5430 Z1 = X
G(6000) (0 3)      Z2 = Y
G(6000) (0 3)      A$ = "   "
G(6000) (0 2)      GOSUB 8670
  Origs: 5190:goto, 5410:auto
  Dests: 5470:auto, 8670:gosub
G(6000) (0 8) 5470 G(Q1, Q2) = K3 * 100 + B3 * 10 + S3
G(6000) (0 3)      Z(Q1, Q2) = G(Q1, Q2)
G(6000) (0 2)      GOSUB 6000
G(6000) (0 3)      GOTO 1990
  Origs: 5430:auto
  Dests: 1990:goto, 6000:gosub
G(6000) (0 2) 5490 PRINT "TORPEDO MISSED"
G(6000) (0 2)      GOSUB 6000
G(6000) (0 3)      GOTO 1990
  Origs: 4960:ifthen
  Dests: 1990:goto, 6000:gosub
(0 1) 5520 REM SHIELD CONTROL
  Origs: 
  Dests: 
G(6000) (1 5) 5530 IF D(7) < 0 THEN PRINT "SHIELD CONTROL INOPERABLE"
G(6000) (0 3)      GOTO 1990
  Origs: 2140:goto
  Dests: 1990:goto, 5560:auto
G(6000) (0 4) 5560 PRINT "ENERGY AVAILABLE ="; E + S;
G(6000) (1 2)      INPUT "NUMBER OF UNITS TO SHIELDS"; X
  Origs: 5530:auto
  Dests: 5580:auto
G(6000) (1 8) 5580 IF X < 0 OR S = X THEN PRINT "<SHIELDS UNCHANGED>"
G(6000) (0 3)      GOTO 1990
  Origs: 5560:auto
  Dests: 1990:goto, 5590:auto
G(6000) (1 6) 5590 IF X <= E + S THEN 5630
  Origs: 5580:auto
  Dests: 5600:auto, 5630:ifthen
G(6000) (0 2) 5600 PRINT "SHIELD CONTROL REPORTS  'THIS IS NOT THE FEDERATION TREASURY.'"
  Origs: 5590:auto
  Dests: 5610:auto
G(6000) (0 2) 5610 PRINT "<SHIELDS UNCHANGED>"
G(6000) (0 3)      GOTO 1990
  Origs: 5600:auto
  Dests: 1990:goto
G(6000) (0 5) 5630 E = E + S - X
G(6000) (0 3)      S = X
G(6000) (0 2)      PRINT "DEFLECTOR CONTROL ROOM REPORT:"
  Origs: 5590:ifthen
  Dests: 5660:auto
G(6000) (0 5) 5660 PRINT "  'SHIELDS NOW AT"; INT(S); "UNITS PER YOUR COMMAND.'"
G(6000) (0 3)      GOTO 1990
  Origs: 5630:auto
  Dests: 1990:goto
(0 1) 5680 REM DAMAGE CONTROL
  Origs: 
  Dests: 
G(6000) (1 4) 5690 IF D(6) >= 0 THEN 5910
  Origs: 2140:goto, 7990:goto, 8020:goto
  Dests: 5700:auto, 5910:ifthen
G(6000) (0 2) 5700 PRINT "DAMAGE CONTROL REPORT NOT AVAILABLE"
G(6000) (1 5)      IF D0 = 0 THEN 1990
  Origs: 5690:auto
  Dests: 1990:ifthen, 5720:auto
G(6000) (0 3) 5720 D3 = 0
G(6000) (1 3)      FOR I = 1 TO 8
G(6000) (1 7)      IF D(I) < 0 THEN D3 = D3 + .1
     WARNING: Statement before GOSUB entry point
  Origs: 5700:auto, 5950:ifthen
  Dests: 5760:auto, 5760:fornext
G(6000) (0 1) 5760 NEXT I
G(6000) (1 5)      IF D3 = 0 THEN 1990
  Origs: 5720:auto, 5720:fornext
  Dests: 1990:ifthen, 5780:auto
G(6000) (0 2) 5780 PRINT
G(6000) (0 4)      D3 = D3 + D4
G(6000) (1 6)      IF D3 >= 1 THEN D3 = .9
  Origs: 5760:auto
  Dests: 5810:auto
G(6000) (0 2) 5810 PRINT "TECHNICIANS STANDING BY TO EFFECT REPAIRS TO YOUR SHIP;"
  Origs: 5780:auto
  Dests: 5820:auto
G(6000) (0 6) 5820 PRINT "ESTIMATED TIME TO REPAIR:"; .01 * INT(100 * D3); "STARDATES"
  Origs: 5810:auto
  Dests: 5840:auto
G(6000) (1 2) 5840 INPUT "WILL YOU AUTHORIZE THE REPAIR ORDER (Y/N)"; A$
  Origs: 5820:auto
  Dests: 5860:auto
G(6000) (1 5) 5860 IF A$ <> "Y" THEN 1990
  Origs: 5840:auto
  Dests: 1990:ifthen, 5870:auto
G(6000) (1 3) 5870 FOR I = 1 TO 8
G(6000) (1 6)      IF D(I) < 0 THEN D(I) = 0
  Origs: 5860:auto
  Dests: 5890:auto, 5890:fornext
G(6000) (0 1) 5890 NEXT I
G(6000) (0 5)      T = T + D3 + .1
  Origs: 5870:auto, 5870:fornext
  Dests: 5910:auto
G(6000) (0 2) 5910 PRINT
G(6000) (0 2)      PRINT "DEVICE             STATE OF REPAIR"
G(6000) (1 3)      FOR R1 = 1 TO 8
  Origs: 5690:ifthen, 5890:auto
  Dests: 5920:fornext, 5950:fornext
G(6000) (0 2) 5920 GOSUB 8790
G(6000) (0 7)      PRINT G2$; LEFT$(Z$, 25 - LEN(G2$)); INT(D(R1) * 100) * .01
  Origs: 5910:fornext
  Dests: 5950:auto, 8790:gosub
G(6000) (0 1) 5950 NEXT R1
G(6000) (0 2)      PRINT
G(6000) (1 5)      IF D0 <> 0 THEN 5720
  Origs: 5910:fornext, 5920:auto
  Dests: 5720:ifthen, 5980:auto
G(6000) (0 3) 5980 GOTO 1990
  Origs: 5950:auto
  Dests: 1990:goto
(0 1) 5990 REM KLINGONS SHOOTING
  Origs: 
  Dests: 
G(6000) (1 4) 6000 IF K3 <= 0 THEN RETURN
  Origs: 2700:gosub, 4670:gosub, 5260:gosub, 5470:gosub, 5490:gosub
  Dests: 6010:auto
G(6000) (1 5) 6010 IF D0 <> 0 THEN PRINT "STARBASE SHIELDS PROTECT THE ENTERPRISE"
G(6000) (0 1)      RETURN
  Origs: 6000:auto
  Dests: 6040:auto
G(6000) (1 3) 6040 FOR I = 1 TO 3
G(6000) (1 4)      IF K(I, 3) <= 0 THEN 6200
  Origs: 6010:auto
  Dests: 6060:auto, 6200:fornext, 6200:ifthen
G(6000) (0 4) 6060 H = INT((K(I, 3) / FND(1)) * (2 + RND(1)))
G(6000) (0 4)      S = S - H
G(6000) (0 7)      K(I, 3) = K(I, 3) / (3 + RND(0))
  Origs: 6040:auto
  Dests: 6080:auto
G(6000) (0 6) 6080 PRINT H; "UNIT HIT ON ENTERPRISE FROM SECTOR"; K(I, 1); ","; K(I, 2)
  Origs: 6060:auto
  Dests: 6090:auto
G(6000) (1 4) 6090 IF S <= 0 THEN 6240
  Origs: 6080:auto
  Dests: 6100:auto, 6240:ifthen
G(6000) (0 4) 6100 PRINT "      <SHIELDS DOWN TO"; S; "UNITS>"
G(6000) (1 4)      IF H < 20 THEN 6200
  Origs: 6090:auto
  Dests: 6120:auto, 6200:ifthen
G(6000) (1 9) 6120 IF RND(1) > .6 OR H / S <= .02 THEN 6200
  Origs: 6100:auto
  Dests: 6140:auto, 6200:ifthen
G(6000) (0 5) 6140 R1 = FNR(1)
G(6000) (0 10)      D(R1) = D(R1) - H / S - .5 * RND(1)
G(6000) (0 2)      GOSUB 8790
  Origs: 6120:auto
  Dests: 475:function, 6170:auto, 8790:gosub
G(6000) (0 4) 6170 PRINT "DAMAGE CONTROL REPORTS "; G2$; " DAMAGED BY THE HIT'"
  Origs: 6140:auto
  Dests: 6200:auto
G(6000) (0 1) 6200 NEXT I
G(6000) (0 1)      RETURN
  Origs: 6040:fornext, 6040:ifthen, 6100:ifthen, 6120:ifthen, 6170:auto
  Dests: 
(0 1) 6210 REM END OF GAME
  Origs: 
  Dests: 
G(6000) (0 3) 6220 PRINT "IT IS STARDATE"; T
G(6000) (0 2)      GOTO 6270
  Origs: 2050:goto, 3450:ifthen, 3850:ifthen, 6250:goto
  Dests: 6270:goto
G(6000) (0 2) 6240 PRINT
G(6000) (0 2)      PRINT "THE ENTERPRISE HAS BEEN DESTROYED.  THEN FEDERATION ";
  Origs: 6090:ifthen
  Dests: 6250:auto
G(6000) (0 2) 6250 PRINT "WILL BE CONQUERED"
G(6000) (0 3)      GOTO 6220
  Origs: 6240:auto
  Dests: 6220:goto
G(6000) (0 4) 6270 PRINT "THERE WERE"; K9; "KLINGON BATTLE CRUISERS LEFT AT"
  Origs: 2140:goto, 5390:goto, 6220:goto
  Dests: 6280:auto
G(6000) (0 2) 6280 PRINT "THE END OF YOUR MISSION."
  Origs: 6270:auto
  Dests: 6290:auto
G(6000) (0 2) 6290 PRINT
G(6000) (0 2)      PRINT
G(6000) (1 4)      IF B9 = 0 THEN 6360
  Origs: 6280:auto, 6400:goto
  Dests: 6310:auto, 6360:ifthen
G(6000) (0 2) 6310 PRINT "THE FEDERATION IS IN NEED OF A NEW STARSHIP COMMANDER"
  Origs: 6290:auto
  Dests: 6320:auto
G(6000) (0 2) 6320 PRINT "FOR A SIMILAR MISSION -- IF THERE IS A VOLUNTEER,"
  Origs: 6310:auto
  Dests: 6330:auto
G(6000) (1 2) 6330 INPUT "LET HIM STEP FORWARD AND ENTER 'AYE'"; A$
G(6000) (1 5)      IF A$ = "AYE" THEN 10
  Origs: 6320:auto
  Dests: 30:ifthen, 6360:auto
G(6000) (0 1) 6360 STOP
     WARNING: Terminating statement in GOSUB
  Origs: 6290:ifthen, 6330:auto
  Dests: :stop
G(6000) (0 2) 6370 PRINT "CONGRULATION, CAPTAIN!  THEN LAST KLINGON BATTLE CRUISER"
  Origs: 4650:ifthen, 5110:ifthen
  Dests: 6380:auto
G(6000) (0 2) 6380 PRINT "MENACING THE FDERATION HAS BEEN DESTROYED."
G(6000) (0 2)      PRINT
  Origs: 6370:auto
  Dests: 6400:auto
G(6000) (0 9) 6400 PRINT "YOUR EFFICIENCY RATING IS"; 1000 * (K7 / (T - T0)) ^ 2
G(6000) (0 3)      GOTO 6290
  Origs: 6380:auto
  Dests: 6290:goto
(0 1) 6420 REM SHORT RANGE SENSOR SCAN & STARTUP SUBROUTINE
  Origs: 
  Dests: 
G(6430) (1 5) 6430 FOR I = S1 - 1 TO S1 + 1
G(6430) (1 5)      FOR J = S2 - 1 TO S2 + 1
  Origs: 1980:gosub
  Dests: 6450:fornext, 6540:fornext
G(6430) (1 17) 6450 IF INT(I + .5) < 1 OR INT(I + .5) > 8 OR INT(J + .5) < 1 OR INT(J + .5) > 8 THEN 6540
  Origs: 6430:fornext
  Dests: 6490:auto, 6540:ifthen
G(6430) (0 3) 6490 A$ = ">!<"
G(6430) (0 3)      Z1 = I
G(6430) (0 3)      Z2 = J
G(6430) (0 2)      GOSUB 8830
G(6430) (1 4)      IF Z3 = 1 THEN 6580
  Origs: 6450:auto
  Dests: 6540:auto, 6580:ifthen, 8830:gosub
G(6430) (0 1) 6540 NEXT J
G(6430) (0 1)      NEXT I
G(6430) (0 3)      D0 = 0
G(6430) (0 2)      GOTO 6650
  Origs: 6430:fornext, 6450:ifthen, 6490:auto
  Dests: 6650:goto
G(6430) (0 3) 6580 D0 = 1
G(6430) (0 3)      C$ = "DOCKED"
G(6430) (0 3)      E = E0
G(6430) (0 3)      P = P0
  Origs: 6490:ifthen
  Dests: 6620:auto
G(6430) (0 2) 6620 PRINT "SHIELDS DROPPED FOR DOCKING PURPOSES"
G(6430) (0 3)      S = 0
G(6430) (0 2)      GOTO 6720
  Origs: 6580:auto
  Dests: 6720:goto
G(6430) (1 6) 6650 IF K3 > 0 THEN C$ = "*RED*"
G(6430) (0 2)      GOTO 6720
  Origs: 6540:goto
  Dests: 6660:auto, 6720:goto
G(6430) (0 3) 6660 C$ = "GREEN"
G(6430) (1 8)      IF E < E0 * .1 THEN C$ = "YELLOW"
  Origs: 6650:auto
  Dests: 6720:auto
G(6430) (1 4) 6720 IF D(2) >= 0 THEN 6770
  Origs: 6620:goto, 6650:goto, 6660:auto
  Dests: 6730:auto, 6770:ifthen
G(6430) (0 2) 6730 PRINT
G(6430) (0 2)      PRINT "*** SHORT RANGE SENSORS ARE OUT ***"
G(6430) (0 2)      PRINT
G(6430) (0 1)      RETURN
  Origs: 6720:auto
  Dests: 
G(6430) (0 3) 6770 O1$ = "---------------------------------"
G(6430) (0 2)      PRINT O1$
G(6430) (1 3)      FOR I = 1 TO 8
  Origs: 6720:ifthen
  Dests: 6820:fornext, 7260:fornext
G(6430) (1 10) 6820 FOR J = (I - 1) * 24 + 1 TO (I - 1) * 24 + 22 STEP 3
G(6430) (0 4)      PRINT " "; MID$(Q$, J, 3);
G(6430) (0 1)      NEXT J
  Origs: 6770:fornext
  Dests: 6830:auto
G(6430) (8 10) 6830 ON I GOTO 6850, 6900, 6960, 7020, 7070, 7120, 7180, 7240
  Origs: 6820:auto
  Dests: 6850:auto, 6850:goto, 6900:goto, 6960:goto, 7020:goto, 7070:goto, 7120:goto, 7180:goto, 7240:goto
G(6430) (0 5) 6850 PRINT "        STARDATE          "; INT(T * 10) * .1
G(6430) (0 2)      GOTO 7260
  Origs: 6830:auto, 6830:goto
  Dests: 7260:goto
G(6430) (0 3) 6900 PRINT "        CONDITION          "; C$
G(6430) (0 2)      GOTO 7260
  Origs: 6830:goto
  Dests: 7260:goto
G(6430) (0 5) 6960 PRINT "        QUADRANT          "; Q1; ","; Q2
G(6430) (0 2)      GOTO 7260
  Origs: 6830:goto
  Dests: 7260:goto
G(6430) (0 5) 7020 PRINT "        SECTOR            "; S1; ","; S2
G(6430) (0 2)      GOTO 7260
  Origs: 6830:goto
  Dests: 7260:goto
G(6430) (0 4) 7070 PRINT "        PHOTON TORPEDOES  "; INT(P)
G(6430) (0 2)      GOTO 7260
  Origs: 6830:goto
  Dests: 7260:goto
G(6430) (0 4) 7120 PRINT "        TOTAL ENERGY      "; INT(E + S)
G(6430) (0 2)      GOTO 7260
  Origs: 6830:goto
  Dests: 7260:goto
G(6430) (0 4) 7180 PRINT "        SHIELDS           "; INT(S)
G(6430) (0 2)      GOTO 7260
  Origs: 6830:goto
  Dests: 7260:goto
G(6430) (0 4) 7240 PRINT "        KLINGONS REMAINING"; INT(K9)
  Origs: 6830:goto
  Dests: 7260:auto
G(6430) (0 1) 7260 NEXT I
G(6430) (0 2)      PRINT O1$
G(6430) (0 1)      RETURN
  Origs: 6770:fornext, 6850:goto, 6900:goto, 6960:goto, 7020:goto, 7070:goto, 7120:goto, 7180:goto, 7240:auto
  Dests: 
(0 1) 7280 REM LIBRARY COMPUTER CODE
  Origs: 
  Dests: 
G(6000) (1 5) 7290 IF D(8) < 0 THEN PRINT "COMPUTER DISABLED"
G(6000) (0 3)      GOTO 1990
  Origs: 2140:goto
  Dests: 1990:goto, 7320:auto
G(6000) (1 2) 7320 INPUT "COMPUTER ACTIVE AND AWAITING COMMAND"; A
G(6000) (1 5)      IF A < 0 THEN 1990
  Origs: 7290:auto, 7380:goto
  Dests: 1990:ifthen, 7350:auto
G(6000) (0 2) 7350 PRINT
G(6000) (0 3)      H8 = 1
G(6000) (6 9)      ON A + 1 GOTO 7540, 7900, 8070, 8500, 8150, 7400
  Origs: 7320:auto
  Dests: 7360:auto, 7400:goto, 7542:goto, 7900:goto, 8070:goto, 8150:goto, 8500:goto
G(6000) (0 2) 7360 PRINT "FUNCTIONS AVAILABLE FROM LIBRARY-COMPUTER:"
  Origs: 7350:auto
  Dests: 7370:auto
G(6000) (0 2) 7370 PRINT "   0 = CUMULATIVE GALACTIC RECORD"
  Origs: 7360:auto
  Dests: 7372:auto
G(6000) (0 2) 7372 PRINT "   1 = STATUS REPORT"
  Origs: 7370:auto
  Dests: 7374:auto
G(6000) (0 2) 7374 PRINT "   2 = PHOTON TORPEDO DATA"
  Origs: 7372:auto
  Dests: 7376:auto
G(6000) (0 2) 7376 PRINT "   3 = STARBASE NAV DATA"
  Origs: 7374:auto
  Dests: 7378:auto
G(6000) (0 2) 7378 PRINT "   4 = DIRECTION/DISTANCE CALCULATOR"
  Origs: 7376:auto
  Dests: 7380:auto
G(6000) (0 2) 7380 PRINT "   5 = GALAXY 'REGION NAME' MAP"
G(6000) (0 2)      PRINT
G(6000) (0 3)      GOTO 7320
  Origs: 7378:auto
  Dests: 7320:goto
(0 1) 7390 REM SETUP TO CHANGE CUM GAL RECORD TO GALAXY MAP
  Origs: 
  Dests: 
G(6000) (0 3) 7400 H8 = 0
G(6000) (0 3)      G5 = 1
G(6000) (0 2)      PRINT "                        THE GALAXY"
G(6000) (0 2)      GOTO 7550
  Origs: 7350:goto
  Dests: 7550:goto
(0 1) 7530 REM CUM GALACTIC RECORD
  Origs: 
  Dests: 
(0 1) 7540 REM INPUT"DO YOU WANT A HARDCOPY? IS THE TTY ON (Y/N)";A$
  Origs: 
  Dests: 
G(6000) (0 1) 7542 REM IFA$="Y"THENPOKE1229,2:POKE1237,3:NULL1
  Origs: 7350:goto
  Dests: 7543:auto
G(6000) (0 2) 7543 PRINT
G(6000) (0 2)      PRINT "        ";
  Origs: 7542:auto
  Dests: 7544:auto
G(6000) (0 5) 7544 PRINT "COMPUTER RECORD OF GALAXY FOR QUADRANT"; Q1; ","; Q2
  Origs: 7543:auto
  Dests: 7546:auto
G(6000) (0 2) 7546 PRINT
  Origs: 7544:auto
  Dests: 7550:auto
G(6000) (0 2) 7550 PRINT "       1     2     3     4     5     6     7     8"
  Origs: 7400:goto, 7546:auto
  Dests: 7560:auto
G(6000) (0 3) 7560 O1$ = "     ----- ----- ----- ----- ----- ----- ----- -----"
  Origs: 7550:auto
  Dests: 7570:auto
G(6000) (0 2) 7570 PRINT O1$
G(6000) (1 3)      FOR I = 1 TO 8
G(6000) (0 2)      PRINT I;
G(6000) (1 4)      IF H8 = 0 THEN 7740
  Origs: 7560:auto
  Dests: 7630:auto, 7740:ifthen, 7850:fornext
G(6000) (1 3) 7630 FOR J = 1 TO 8
G(6000) (0 2)      PRINT "   ";
G(6000) (1 5)      IF Z(I, J) = 0 THEN PRINT "***";
G(6000) (0 2)      GOTO 7720
  Origs: 7570:auto
  Dests: 7700:auto, 7720:fornext, 7720:goto
G(6000) (0 3) 7700 PRINT RIGHT$(STR$(Z(I, J) + 1000), 3);
  Origs: 7630:auto
  Dests: 7720:auto
G(6000) (0 1) 7720 NEXT J
G(6000) (0 2)      GOTO 7850
  Origs: 7630:fornext, 7630:goto, 7700:auto
  Dests: 7850:goto
G(6000) (0 3) 7740 Z4 = I
G(6000) (0 3)      Z5 = 1
G(6000) (0 2)      GOSUB 9030
G(6000) (0 4)      J0 = INT(15 - .5 * LEN(G2$))
G(6000) (0 4)      PRINT TAB(J0); G2$;
  Origs: 7570:ifthen
  Dests: 7800:auto, 9030:gosub
G(6000) (0 3) 7800 Z5 = 5
G(6000) (0 2)      GOSUB 9030
G(6000) (0 4)      J0 = INT(39 - .5 * LEN(G2$))
G(6000) (0 4)      PRINT TAB(J0); G2$;
  Origs: 7740:auto
  Dests: 7850:auto, 9030:gosub
G(6000) (0 2) 7850 PRINT
G(6000) (0 2)      PRINT O1$
G(6000) (0 1)      NEXT I
G(6000) (0 2)      PRINT
G(6000) (0 3)      GOTO 1990
  Origs: 7570:fornext, 7720:goto, 7800:auto
  Dests: 1990:goto
(0 1) 7890 REM STATUS REPORT
  Origs: 
  Dests: 
G(6000) (0 2) 7900 PRINT "   STATUS REPORT:"
G(6000) (0 3)      X$ = ""
G(6000) (1 6)      IF K9 > 1 THEN X$ = "S"
  Origs: 7350:goto
  Dests: 7940:auto
G(6000) (0 5) 7940 PRINT "KLINGON"; X$; " LEFT: "; K9
  Origs: 7900:auto
  Dests: 7960:auto
G(6000) (0 6) 7960 PRINT "MISSION MUST BE COMPLETED IN"; .1 * INT((T0 + T9 - T) * 10); "STARDATES"
  Origs: 7940:auto
  Dests: 7970:auto
G(6000) (0 3) 7970 X$ = "S"
G(6000) (1 6)      IF B9 < 2 THEN X$ = ""
G(6000) (1 4)      IF B9 < 1 THEN 8010
  Origs: 7960:auto
  Dests: 7980:auto, 8010:ifthen
G(6000) (0 6) 7980 PRINT "THE FEDERATION IS MAINTAINING"; B9; "STARBASE"; X$; " IN THE GALAXY"
  Origs: 7970:auto
  Dests: 7990:auto
G(6000) (0 3) 7990 GOTO 5690
  Origs: 7980:auto
  Dests: 5690:goto
G(6000) (0 2) 8010 PRINT "YOUR STUPIDITY HAS LEFT YOU ON YOUR ON IN"
  Origs: 7970:ifthen
  Dests: 8020:auto
G(6000) (0 2) 8020 PRINT "  THE GALAXY -- YOU HAVE NO STARBASES LEFT!"
G(6000) (0 3)      GOTO 5690
  Origs: 8010:auto
  Dests: 5690:goto
(0 1) 8060 REM TORPEDO, BASE NAV, D/D CALCULATOR
  Origs: 
  Dests: 
G(6000) (1 5) 8070 IF K3 <= 0 THEN 4270
  Origs: 7350:goto
  Dests: 4270:ifthen, 8080:auto
G(6000) (0 3) 8080 X$ = ""
G(6000) (1 6)      IF K3 > 1 THEN X$ = "S"
  Origs: 8070:auto
  Dests: 8090:auto
G(6000) (0 3) 8090 PRINT "FROM ENTERPRISE TO KLINGON BATTLE CRUSER"; X$
  Origs: 8080:auto
  Dests: 8100:auto
G(6000) (0 3) 8100 H8 = 0
G(6000) (1 3)      FOR I = 1 TO 3
G(6000) (1 4)      IF K(I, 3) <= 0 THEN 8480
  Origs: 8090:auto
  Dests: 8110:auto, 8480:fornext, 8480:ifthen
G(6000) (0 3) 8110 W1 = K(I, 1)
G(6000) (0 3)      X = K(I, 2)
  Origs: 8100:auto
  Dests: 8120:auto
G(6000) (0 3) 8120 C1 = S1
G(6000) (0 3)      A = S2
G(6000) (0 2)      GOTO 8220
  Origs: 8110:auto, 8500:goto
  Dests: 8220:goto
G(6000) (0 2) 8150 PRINT "DIRECTION/DISTANCE CALCULATOR:"
  Origs: 7350:goto
  Dests: 8160:auto
G(6000) (0 9) 8160 PRINT "YOU ARE AT QUADRANT "; Q1; ","; Q2; " SECTOR "; S1; ","; S2
  Origs: 8150:auto
  Dests: 8170:auto
G(6000) (0 2) 8170 PRINT "PLEASE ENTER"
G(6000) (2 3)      INPUT "  INITIAL COORDINATES (X,Y)"; C1, A
  Origs: 8160:auto
  Dests: 8200:auto
G(6000) (2 3) 8200 INPUT "  FINAL COORDINATES (X,Y)"; W1, X
  Origs: 8170:auto
  Dests: 8220:auto
G(6000) (0 4) 8220 X = X - A
G(6000) (0 4)      A = C1 - W1
G(6000) (1 4)      IF X < 0 THEN 8350
  Origs: 8120:goto, 8200:auto
  Dests: 8250:auto, 8350:ifthen
G(6000) (1 4) 8250 IF A < 0 THEN 8410
  Origs: 8220:auto
  Dests: 8260:auto, 8410:ifthen
G(6000) (1 4) 8260 IF X > 0 THEN 8280
  Origs: 8250:auto
  Dests: 8270:auto, 8280:ifthen
G(6000) (1 6) 8270 IF A = 0 THEN C1 = 5
G(6000) (0 2)      GOTO 8290
  Origs: 8260:auto
  Dests: 8280:auto, 8290:goto
G(6000) (0 3) 8280 C1 = 1
  Origs: 8260:ifthen, 8270:auto
  Dests: 8290:auto
G(6000) (1 6) 8290 IF ABS(A) <= ABS(X) THEN 8330
  Origs: 8270:goto, 8280:auto, 8360:goto
  Dests: 8310:auto, 8330:ifthen
G(6000) (0 12) 8310 PRINT "DIRECTION ="; C1 + (((ABS(A) - ABS(X)) + ABS(A)) / ABS(A))
G(6000) (0 2)      GOTO 8460
  Origs: 8290:auto
  Dests: 8460:goto
G(6000) (0 8) 8330 PRINT "DIRECTION ="; C1 + (ABS(A) / ABS(X))
G(6000) (0 2)      GOTO 8460
  Origs: 8290:ifthen
  Dests: 8460:goto
G(6000) (1 6) 8350 IF A > 0 THEN C1 = 3
G(6000) (0 2)      GOTO 8420
  Origs: 8220:ifthen
  Dests: 8360:auto, 8420:goto
G(6000) (1 6) 8360 IF X <> 0 THEN C1 = 5
G(6000) (0 3)      GOTO 8290
  Origs: 8350:auto
  Dests: 8290:goto, 8410:auto
G(6000) (0 3) 8410 C1 = 7
  Origs: 8250:ifthen, 8360:auto
  Dests: 8420:auto
G(6000) (1 6) 8420 IF ABS(A) >= ABS(X) THEN 8450
  Origs: 8350:goto, 8410:auto
  Dests: 8430:auto, 8450:ifthen
G(6000) (0 12) 8430 PRINT "DIRECTION ="; C1 + (((ABS(X) - ABS(A)) + ABS(X)) / ABS(X))
G(6000) (0 2)      GOTO 8460
  Origs: 8420:auto
  Dests: 8460:goto
G(6000) (0 8) 8450 PRINT "DIRECTION ="; C1 + (ABS(X) / ABS(A))
  Origs: 8420:ifthen
  Dests: 8460:auto
G(6000) (0 4) 8460 PRINT "DISTANCE ="; SQR(X ^ 2 + A ^ 2)
G(6000) (1 5)      IF H8 = 1 THEN 1990
  Origs: 8310:goto, 8330:goto, 8430:goto, 8450:auto
  Dests: 1990:ifthen, 8480:auto
G(6000) (0 1) 8480 NEXT I
G(6000) (0 3)      GOTO 1990
  Origs: 8100:fornext, 8100:ifthen, 8460:auto
  Dests: 1990:goto
G(6000) (1 5) 8500 IF B3 <> 0 THEN PRINT "FROM ENTERPRISE TO STARBASE:"
G(6000) (0 3)      W1 = B4
G(6000) (0 3)      X = B5
G(6000) (0 3)      GOTO 8120
  Origs: 7350:goto
  Dests: 8120:goto, 8510:auto
G(6000) (0 2) 8510 PRINT "MR. SPOCK REPORTS,  'SENSORS SHOW NO STARBASES IN THIS";
  Origs: 8500:auto
  Dests: 8520:auto
G(6000) (0 2) 8520 PRINT " QUADRANT.'"
G(6000) (0 3)      GOTO 1990
  Origs: 8510:auto
  Dests: 1990:goto
(0 1) 8580 REM FIND EMPTY PLACE IN QUADRANT (FOR THINGS)
  Origs: 
  Dests: 
G(8590) (0 5) 8590 R1 = FNR(1)
G(8590) (0 5)      R2 = FNR(1)
G(8590) (0 3)      A$ = "   "
G(8590) (0 3)      Z1 = R1
G(8590) (0 3)      Z2 = R2
G(8590) (0 2)      GOSUB 8830
G(8590) (1 5)      IF Z3 = 0 THEN 8590
  Origs: 1720:gosub, 1880:gosub, 1910:gosub, 2610:gosub
  Dests: 475:function, 8600:auto, 8830:gosub
G(8590) (0 1) 8600 RETURN
  Origs: 8590:auto
  Dests: 
(0 1) 8660 REM INSERT IN STRING ARRAY FOR QUADRANT
  Origs: 
  Dests: 
G(8670) (0 10) 8670 S8 = INT(Z2 - .5) * 3 + INT(Z1 - .5) * 24 + 1
  Origs: 1680:gosub, 1780:gosub, 1880:gosub, 1910:gosub, 2610:gosub, 2660:gosub, 3070:gosub, 3370:gosub, 4580:gosub, 5430:gosub
  Dests: 8675:auto
G(8670) (1 6) 8675 IF LEN(A$) <> 3 THEN PRINT "ERROR"
G(8670) (0 1)      STOP
     WARNING: Terminating statement in GOSUB
  Origs: 8670:auto
  Dests: :stop, 8680:auto
G(8670) (1 8) 8680 IF S8 = 1 THEN Q$ = A$ + RIGHT$(Q$, 189)
G(8670) (0 1)      RETURN
  Origs: 8675:auto
  Dests: 8690:auto
G(8670) (1 8) 8690 IF S8 = 190 THEN Q$ = LEFT$(Q$, 189) + A$
G(8670) (0 1)      RETURN
  Origs: 8680:auto
  Dests: 8700:auto
G(8670) (0 7) 8700 Q$ = LEFT$(Q$, S8 - 1) + A$ + RIGHT$(Q$, 190 - S8)
G(8670) (0 1)      RETURN
  Origs: 8690:auto
  Dests: 
(0 1) 8780 REM PRINTS DEVICE NAME
  Origs: 
  Dests: 
G(8790) (8 10) 8790 ON R1 GOTO 8792, 8794, 8796, 8798, 8800, 8802, 8804, 8806
  Origs: 2840:gosub, 2960:gosub, 3030:gosub, 5920:gosub, 6140:gosub
  Dests: 8792:auto, 8792:goto, 8794:goto, 8796:goto, 8798:goto, 8800:goto, 8802:goto, 8804:goto, 8806:goto
G(8790) (0 3) 8792 G2$ = "WARP ENGINES"
G(8790) (0 1)      RETURN
  Origs: 8790:auto, 8790:goto
  Dests: 
G(8790) (0 3) 8794 G2$ = "SHORT RANGE SENSORS"
G(8790) (0 1)      RETURN
  Origs: 8790:goto
  Dests: 
G(8790) (0 3) 8796 G2$ = "LONG RANGE SENSORS"
G(8790) (0 1)      RETURN
  Origs: 8790:goto
  Dests: 
G(8790) (0 3) 8798 G2$ = "PHASER CONTROL"
G(8790) (0 1)      RETURN
  Origs: 8790:goto
  Dests: 
G(8790) (0 3) 8800 G2$ = "PHOTON TUBES"
G(8790) (0 1)      RETURN
  Origs: 8790:goto
  Dests: 
G(8790) (0 3) 8802 G2$ = "DAMAGE CONTROL"
G(8790) (0 1)      RETURN
  Origs: 8790:goto
  Dests: 
G(8790) (0 3) 8804 G2$ = "SHIELD CONTROL"
G(8790) (0 1)      RETURN
  Origs: 8790:goto
  Dests: 
G(8790) (0 3) 8806 G2$ = "LIBRARY-COMPUTER"
G(8790) (0 1)      RETURN
  Origs: 8790:goto
  Dests: 
(0 1) 8820 REM STRING COMPARISON IN QUADRANT ARRAY
  Origs: 
  Dests: 
G(8830) (0 4) 8830 Z1 = INT(Z1 + .5)
G(8830) (0 4)      Z2 = INT(Z2 + .5)
G(8830) (0 10)      S8 = (Z2 - 1) * 3 + (Z1 - 1) * 24 + 1
G(8830) (0 3)      Z3 = 0
  Origs: 5000:gosub, 5060:gosub, 5210:gosub, 5280:gosub, 6490:gosub, 8590:gosub
  Dests: 8890:auto
G(8830) (1 5) 8890 IF MID$(Q$, S8, 3) <> A$ THEN RETURN
  Origs: 8830:auto
  Dests: 8900:auto
G(8830) (0 3) 8900 Z3 = 1
G(8830) (0 1)      RETURN
  Origs: 8890:auto
  Dests: 
(0 1) 9010 REM QUADRANT NAME IN G2$ FROM Z4,Z5 (=Q1,Q2)
  Origs: 
  Dests: 
(0 1) 9020 REM CALL WITH G5=1 TO GET REGION NAME ONLY
  Origs: 
  Dests: 
G(9030) (9 13) 9030 IF Z5 <= 4 THEN ON Z4 GOTO 9040, 9050, 9060, 9070, 9080, 9090, 9100, 9110
  Origs: 1430:gosub, 7740:gosub, 7800:gosub
  Dests: 9035:auto, 9040:goto, 9050:goto, 9060:goto, 9070:goto, 9080:goto, 9090:goto, 9100:goto, 9110:goto
G(9030) (0 2) 9035 GOTO 9120
  Origs: 9030:auto
  Dests: 9120:goto
G(9030) (0 3) 9040 G2$ = "ANTARES"
G(9030) (0 2)      GOTO 9210
  Origs: 9030:goto
  Dests: 9210:goto
G(9030) (0 3) 9050 G2$ = "RIGEL"
G(9030) (0 2)      GOTO 9210
  Origs: 9030:goto
  Dests: 9210:goto
G(9030) (0 3) 9060 G2$ = "PROCYON"
G(9030) (0 2)      GOTO 9210
  Origs: 9030:goto
  Dests: 9210:goto
G(9030) (0 3) 9070 G2$ = "VEGA"
G(9030) (0 2)      GOTO 9210
  Origs: 9030:goto
  Dests: 9210:goto
G(9030) (0 3) 9080 G2$ = "CANOPUS"
G(9030) (0 2)      GOTO 9210
  Origs: 9030:goto
  Dests: 9210:goto
G(9030) (0 3) 9090 G2$ = "ALTAIR"
G(9030) (0 2)      GOTO 9210
  Origs: 9030:goto
  Dests: 9210:goto
G(9030) (0 3) 9100 G2$ = "SAGITTARIUS"
G(9030) (0 2)      GOTO 9210
  Origs: 9030:goto
  Dests: 9210:goto
G(9030) (0 3) 9110 G2$ = "POLLUX"
G(9030) (0 2)      GOTO 9210
  Origs: 9030:goto
  Dests: 9210:goto
G(9030) (8 10) 9120 ON Z4 GOTO 9130, 9140, 9150, 9160, 9170, 9180, 9190, 9200
  Origs: 9035:goto
  Dests: 9130:auto, 9130:goto, 9140:goto, 9150:goto, 9160:goto, 9170:goto, 9180:goto, 9190:goto, 9200:goto
G(9030) (0 3) 9130 G2$ = "SIRIUS"
G(9030) (0 2)      GOTO 9210
  Origs: 9120:auto, 9120:goto
  Dests: 9210:goto
G(9030) (0 3) 9140 G2$ = "DENEB"
G(9030) (0 2)      GOTO 9210
  Origs: 9120:goto
  Dests: 9210:goto
G(9030) (0 3) 9150 G2$ = "CAPELLA"
G(9030) (0 2)      GOTO 9210
  Origs: 9120:goto
  Dests: 9210:goto
G(9030) (0 3) 9160 G2$ = "BETELGEUSE"
G(9030) (0 2)      GOTO 9210
  Origs: 9120:goto
  Dests: 9210:goto
G(9030) (0 3) 9170 G2$ = "ALDEBARAN"
G(9030) (0 2)      GOTO 9210
  Origs: 9120:goto
  Dests: 9210:goto
G(9030) (0 3) 9180 G2$ = "REGULUS"
G(9030) (0 2)      GOTO 9210
  Origs: 9120:goto
  Dests: 9210:goto
G(9030) (0 3) 9190 G2$ = "ARCTURUS"
G(9030) (0 2)      GOTO 9210
  Origs: 9120:goto
  Dests: 9210:goto
G(9030) (0 3) 9200 G2$ = "SPICA"
  Origs: 9120:goto
  Dests: 9210:auto
G(9030) (9 13) 9210 IF G5 <> 1 THEN ON Z5 GOTO 9230, 9240, 9250, 9260, 9230, 9240, 9250, 9260
  Origs: 9040:goto, 9050:goto, 9060:goto, 9070:goto, 9080:goto, 9090:goto, 9100:goto, 9110:goto, 9130:goto, 9140:goto, 9150:goto, 9160:goto, 9170:goto, 9180:goto, 9190:goto, 9200:auto
  Dests: 9220:auto, 9230:goto, 9240:goto, 9250:goto, 9260:goto
G(9030) (0 1) 9220 RETURN
  Origs: 9210:auto
  Dests: 
G(9030) (0 4) 9230 G2$ = G2$ + " I"
G(9030) (0 1)      RETURN
  Origs: 9210:goto
  Dests: 
G(9030) (0 4) 9240 G2$ = G2$ + " II"
G(9030) (0 1)      RETURN
  Origs: 9210:goto
  Dests: 
G(9030) (0 4) 9250 G2$ = G2$ + " III"
G(9030) (0 1)      RETURN
  Origs: 9210:goto
  Dests: 
G(9030) (0 4) 9260 G2$ = G2$ + " IV"
G(9030) (0 1)      RETURN
  Origs: 9210:goto
  Dests: 

Unreachable code:

All executable lines are reachable.

