2 PRINT TAB(32);"FLIPFLOP"
 NumericConstant:32
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextConstant:"FLIPFLOP"
 CarriageControl:NL
4 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericConstant:15
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextConstant:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
6 PRINT
 CarriageControl:NL
10 REM *** CREATED BY MICHAEL CASS
 Remark:*** CREATED BY MICHAEL CASS
15 DIM A$(20)
 NumericConstant:20
 Declaration:A$() -> $()
20 PRINT "THE OBJECT OF THIS PUZZLE IS TO CHANGE THIS:"
 TextConstant:"THE OBJECT OF THIS PUZZLE IS TO CHANGE THIS:"
 CarriageControl:NL
30 PRINT
 CarriageControl:NL
40 PRINT "X X X X X X X X X X"
 TextConstant:"X X X X X X X X X X"
 CarriageControl:NL
50 PRINT
 CarriageControl:NL
60 PRINT "TO THIS:"
 TextConstant:"TO THIS:"
 CarriageControl:NL
70 PRINT
 CarriageControl:NL
80 PRINT "O O O O O O O O O O"
 TextConstant:"O O O O O O O O O O"
 CarriageControl:NL
90 PRINT
 CarriageControl:NL
100 PRINT "BY TYPING THE NUMBER CORRESPONDING TO THE POSITION OF THE"
 TextConstant:"BY TYPING THE NUMBER CORRESPONDING TO THE POSITION OF THE"
 CarriageControl:NL
110 PRINT "LETTER ON SOME NUMBERS, ONE POSITION WILL CHANGE, ON"
 TextConstant:"LETTER ON SOME NUMBERS, ONE POSITION WILL CHANGE, ON"
 CarriageControl:NL
120 PRINT "OTHERS, TWO WILL CHANGE.  TO RESET LINE TO ALL X'S, TYPE 0"
 TextConstant:"OTHERS, TWO WILL CHANGE.  TO RESET LINE TO ALL X'S, TYPE 0"
 CarriageControl:NL
130 PRINT "(ZERO) AND TO START OVER IN THE MIDDLE OF A GAME, TYPE "
 TextConstant:"(ZERO) AND TO START OVER IN THE MIDDLE OF A GAME, TYPE "
 CarriageControl:NL
140 PRINT "11 (ELEVEN)."
 TextConstant:"11 (ELEVEN)."
 CarriageControl:NL
170 PRINT
 CarriageControl:NL
180 REM
 Remark:
190 Q=RND(1)
 Variable:Q -> _
 NumericConstant:1
 FunctionRnd:RND(_) -> _
 AssignmentOperator:= _ -> _
200 PRINT "HERE IS THE STARTING LINE OF X'S."
 TextConstant:"HERE IS THE STARTING LINE OF X'S."
 CarriageControl:NL
210 PRINT
 CarriageControl:NL
220 C=0
 Variable:C -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
230 PRINT "1 2 3 4 5 6 7 8 9 10"
 TextConstant:"1 2 3 4 5 6 7 8 9 10"
 CarriageControl:NL
240 PRINT "X X X X X X X X X X"
 TextConstant:"X X X X X X X X X X"
 CarriageControl:NL
250 PRINT
 CarriageControl:NL
260 REM
 Remark:
270 FOR X=1 TO 10
 control: Variable:X -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:10"]
280 A$(X)="X"
 Variable:X -> _
 Variable:A$(_) -> $
 TextConstant:"X"
 AssignmentOperator:= =$ -> $
290 NEXT X
 Variable:X -> _
300 GOTO 320
 LineNumber:320
310 PRINT "ILLEGAL ENTRY--TRY AGAIN."
 TextConstant:"ILLEGAL ENTRY--TRY AGAIN."
 CarriageControl:NL
320 PRINT "INPUT THE NUMBER";
 TextConstant:"INPUT THE NUMBER"
 CarriageControl:;
330 INPUT N
 Variable:N -> _
340 IF N<>INT(N) THEN 310
 Variable:N -> _
 Variable:N -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorNotEqual:<>(_,_) -> _
 LineNumber:310
350 IF N=11 THEN 180
 Variable:N -> _
 NumericConstant:11
 BinaryOperatorEqual:=(_,_) -> _
 LineNumber:180
360 IF N>11 THEN 310
 Variable:N -> _
 NumericConstant:11
 BinaryOperatorGreater:>(_,_) -> _
 LineNumber:310
370 IF N=0 THEN 230
 Variable:N -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> _
 LineNumber:230
380 IF M=N THEN 510
 Variable:M -> _
 Variable:N -> _
 BinaryOperatorEqual:=(_,_) -> _
 LineNumber:510
390 M=N
 Variable:M -> _
 Variable:N -> _
 AssignmentOperator:= _ -> _
400 IF A$(N)="O" THEN 480
 Variable:N -> _
 Variable:A$(_) -> $
 TextConstant:"O"
 BinaryOperatorEqual:=($,$) -> _
 LineNumber:480
410 A$(N)="O"
 Variable:N -> _
 Variable:A$(_) -> $
 TextConstant:"O"
 AssignmentOperator:= =$ -> $
420 R=TAN(Q+N/Q-N)-SIN(Q/N)+336*SIN(8*N)
 Variable:R -> _
 Variable:Q -> _
 Variable:N -> _
 Variable:Q -> _
 BinaryOperatorDivide:/(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:N -> _
 BinaryOperatorMinus:-(_,_) -> _
 FunctionTan:TAN(_) -> _
 Variable:Q -> _
 Variable:N -> _
 BinaryOperatorDivide:/(_,_) -> _
 FunctionSin:SIN(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 NumericConstant:336
 NumericConstant:8
 Variable:N -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionSin:SIN(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
430 N=ABS(R-INT(R))
 Variable:N -> _
 Variable:R -> _
 Variable:R -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 FunctionAbs:ABS(_) -> _
 AssignmentOperator:= _ -> _
440 N=INT(10*N)
 Variable:N -> _
 NumericConstant:10
 Variable:N -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
450 IF A$(N)="O" THEN 480
 Variable:N -> _
 Variable:A$(_) -> $
 TextConstant:"O"
 BinaryOperatorEqual:=($,$) -> _
 LineNumber:480
460 A$(N)="O"
 Variable:N -> _
 Variable:A$(_) -> $
 TextConstant:"O"
 AssignmentOperator:= =$ -> $
470 GOTO 610
 LineNumber:610
480 A$(N)="X"
 Variable:N -> _
 Variable:A$(_) -> $
 TextConstant:"X"
 AssignmentOperator:= =$ -> $
490 IF M=N THEN 420
 Variable:M -> _
 Variable:N -> _
 BinaryOperatorEqual:=(_,_) -> _
 LineNumber:420
500 GOTO 610
 LineNumber:610
510 IF A$(N)="O" THEN 590
 Variable:N -> _
 Variable:A$(_) -> $
 TextConstant:"O"
 BinaryOperatorEqual:=($,$) -> _
 LineNumber:590
520 A$(N)="O"
 Variable:N -> _
 Variable:A$(_) -> $
 TextConstant:"O"
 AssignmentOperator:= =$ -> $
530 R=.592*(1/TAN(Q/N+Q))/SIN(N*2+Q)-COS(N)
 Variable:R -> _
 NumericConstant:.592
 NumericConstant:1
 Variable:Q -> _
 Variable:N -> _
 BinaryOperatorDivide:/(_,_) -> _
 Variable:Q -> _
 BinaryOperatorPlus:+(_,_) -> _
 FunctionTan:TAN(_) -> _
 BinaryOperatorDivide:/(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:N -> _
 NumericConstant:2
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:Q -> _
 BinaryOperatorPlus:+(_,_) -> _
 FunctionSin:SIN(_) -> _
 BinaryOperatorDivide:/(_,_) -> _
 Variable:N -> _
 FunctionCos:COS(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
540 N=ABS(R-INT(R))
 Variable:N -> _
 Variable:R -> _
 Variable:R -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 FunctionAbs:ABS(_) -> _
 AssignmentOperator:= _ -> _
550 N=INT(10*N)
 Variable:N -> _
 NumericConstant:10
 Variable:N -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
560 IF A$(N)="O" THEN 590
 Variable:N -> _
 Variable:A$(_) -> $
 TextConstant:"O"
 BinaryOperatorEqual:=($,$) -> _
 LineNumber:590
570 A$(N)="O"
 Variable:N -> _
 Variable:A$(_) -> $
 TextConstant:"O"
 AssignmentOperator:= =$ -> $
580 GOTO 610
 LineNumber:610
590 A$(N)="X"
 Variable:N -> _
 Variable:A$(_) -> $
 TextConstant:"X"
 AssignmentOperator:= =$ -> $
600 IF M=N THEN 530
 Variable:M -> _
 Variable:N -> _
 BinaryOperatorEqual:=(_,_) -> _
 LineNumber:530
610 PRINT "1 2 3 4 5 6 7 8 9 10"
 TextConstant:"1 2 3 4 5 6 7 8 9 10"
 CarriageControl:NL
620 FOR Z=1 TO 10: PRINT A$(Z);" ";: NEXT Z
 control: Variable:Z -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:10"]
 Variable:Z -> _
 Variable:A$(_) -> $
 CarriageControl:;
 TextConstant:" "
 CarriageControl:;
 Variable:Z -> _
630 C=C+1
 Variable:C -> _
 Variable:C -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
640 PRINT
 CarriageControl:NL
650 FOR Z=1 TO 10
 control: Variable:Z -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:10"]
660 IF A$(Z)<>"O" THEN 320
 Variable:Z -> _
 Variable:A$(_) -> $
 TextConstant:"O"
 BinaryOperatorNotEqual:<>($,$) -> _
 LineNumber:320
670 NEXT Z
 Variable:Z -> _
680 IF C>12 THEN 710
 Variable:C -> _
 NumericConstant:12
 BinaryOperatorGreater:>(_,_) -> _
 LineNumber:710
690 PRINT "VERY GOOD.  YOU GUESSED IT IN ONLY";C;"GUESSES."
 TextConstant:"VERY GOOD.  YOU GUESSED IT IN ONLY"
 CarriageControl:;
 Variable:C -> _
 CarriageControl:;
 TextConstant:"GUESSES."
 CarriageControl:NL
700 GOTO 720
 LineNumber:720
710 PRINT "TRY HARDER NEXT TIME.  IT TOOK YOU";C;"GUESSES."
 TextConstant:"TRY HARDER NEXT TIME.  IT TOOK YOU"
 CarriageControl:;
 Variable:C -> _
 CarriageControl:;
 TextConstant:"GUESSES."
 CarriageControl:NL
720 PRINT "DO YOU WANT TO TRY ANOTHER PUZZLE";
 TextConstant:"DO YOU WANT TO TRY ANOTHER PUZZLE"
 CarriageControl:;
730 INPUT X$
 Variable:X$ -> $
740 IF LEFT$(X$,1)="N" THEN 780
 Variable:X$ -> $
 NumericConstant:1
 FunctionLeft:LEFT$($,_) -> $
 TextConstant:"N"
 BinaryOperatorEqual:=($,$) -> _
 LineNumber:780
760 PRINT
 CarriageControl:NL
770 GOTO 180
 LineNumber:180
780 END
 

