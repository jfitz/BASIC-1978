Statistics:

Number of lines: 232
Number of valid statements: 185
Number of comments: 49
Number of executable statements: 185

Complexity:

Comment density: 0.265
Comprehension effort: 652
McCabe complexity: 34
Halstead complexity:
 length: 967
 volume: 5053.297
 difficulty: 36.519
 effort: 184538.921
 language: 3.789
 intelligence: 138.376
 time: 170.869

10 (0 4) PRINT TAB(30); "STOCK MARKET"
  Origs: :start
  Dests: 20:auto
20 (0 4) PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 10:auto
  Dests: 30:auto
30 (0 2) PRINT
   (0 2) PRINT
   (0 2) PRINT
  Origs: 20:auto
  Dests: 110:auto
100 (0 1) REM STOCK MARKET SIMULATION     -STOCK-
  Origs: 
  Dests: 
101 (0 1) REM REVISED 8/18/70 (D. PESSEL, L. BRAUN, C. LOSIK)  
  Origs: 
  Dests: 
102 (0 1) REM IMP VRBLS: A-MRKT TRND SLP; B5-BRKRGE FEE; C-TTL CSH ASSTS;    
  Origs: 
  Dests: 
103 (0 1) REM C5-TTL CSH ASSTS (TEMP); C(I)-CHNG IN STK VAL; D-TTL ASSTS;
  Origs: 
  Dests: 
104 (0 1) REM E1,E2-LRG CHNG MISC; I-STCK #; I1,I2-STCKS W LRG CHNG; 
  Origs: 
  Dests: 
105 (0 1) REM N1,N2-LRG CHNG DAY CNTS; P5-TTL DAYS PRCHSS; P(I)-PRTFL CNTNTS;
  Origs: 
  Dests: 
106 (0 1) REM Q9-NEW CYCL?; S4-SGN OF A; S5-TTL DYS SLS; S(I)-VALUE/SHR; 
  Origs: 
  Dests: 
107 (0 1) REM T-TTL STCK ASSTS; T5-TTL VAL OF TRNSCTNS;
  Origs: 
  Dests: 
108 (0 1) REM W3-LRG CHNG; X1-SMLL CHNG(<$1); Z4,Z5,Z6-NYSE AVE.; Z(I)-TRNSCT
  Origs: 
  Dests: 
110 (0 5) DIM S(5), P(5), Z(5), C(5)
  Origs: 30:auto
  Dests: 113:auto
112 (0 1) REM SLOPE OF MARKET TREND:A  (SAME FOR ALL STOCKS) 
  Origs: 
  Dests: 
113 (0 3) LET X = 1
  Origs: 110:auto
  Dests: 114:auto
114 (0 5) LET A = INT((RND(X) / 10) * 100 + 0.5) / 100
  Origs: 113:auto
  Dests: 115:auto
115 (0 3) LET T5 = 0
  Origs: 114:auto
  Dests: 116:auto
116 (0 3) LET X9 = 0
  Origs: 115:auto
  Dests: 117:auto
117 (0 3) LET N1 = 0
  Origs: 116:auto
  Dests: 118:auto
118 (0 3) LET N2 = 0
  Origs: 117:auto
  Dests: 119:auto
119 (0 3) LET E1 = 0
  Origs: 118:auto
  Dests: 120:auto
120 (0 3) LET E2 = 0
  Origs: 119:auto
  Dests: 122:auto
121 (0 1) REM INTRODUCTION 
  Origs: 
  Dests: 
122 (0 2) PRINT "DO YOU WANT THE INSTRUCTIONS (YES-TYPE 1, NO-TYPE 0)";
  Origs: 120:auto
  Dests: 123:auto
123 (1 2) INPUT Z9
  Origs: 122:auto
  Dests: 124:auto
124 (0 2) PRINT
  Origs: 123:auto
  Dests: 125:auto
125 (0 2) PRINT
  Origs: 124:auto
  Dests: 126:auto
126 (1 4) IF Z9 < 1 THEN 200
  Origs: 125:auto
  Dests: 130:auto, 220:ifthen
130 (0 2) PRINT "THIS PROGRAM PLAYS THE STOCK MARKET.  YOU WILL BE GIVEN"
  Origs: 126:auto
  Dests: 132:auto
132 (0 2) PRINT "$10,000 AND MAY BUY OR SELL STOCKS.  THE STOCK PRICES WILL"
  Origs: 130:auto
  Dests: 134:auto
134 (0 2) PRINT "BE GENERATED RANDOMLY AND THEREFORE THIS MODEL DOES NOT"
  Origs: 132:auto
  Dests: 135:auto
135 (0 2) PRINT "REPRESENT EXACTLY WHAT HAPPENS ON THE EXCHANGE.  A TABLE"
  Origs: 134:auto
  Dests: 136:auto
136 (0 2) PRINT "OF AVAILABLE STOCKS, THEIR PRICES, AND THE NUMBER OF SHARES"
  Origs: 135:auto
  Dests: 137:auto
137 (0 2) PRINT "IN YOUR PORTFOLIO WILL BE PRINTED.  FOLLOWING THIS, THE"
  Origs: 136:auto
  Dests: 138:auto
138 (0 2) PRINT "INITIALS OF EACH STOCK WILL BE PRINTED WITH A QUESTION"
  Origs: 137:auto
  Dests: 139:auto
139 (0 2) PRINT "MARK.  HERE YOU INDICATE A TRANSACTION.  TO BUY A STOCK"
  Origs: 138:auto
  Dests: 140:auto
140 (0 2) PRINT "TYPE +NNN, TO SELL A STOCK TYPE -NNN, WHERE NNN IS THE"
  Origs: 139:auto
  Dests: 141:auto
141 (0 2) PRINT "NUMBER OF SHARES.  A BROKERAGE FEE OF 1% WILL BE CHARGED"
  Origs: 140:auto
  Dests: 142:auto
142 (0 2) PRINT "ON ALL TRANSACTIONS.  NOTE THAT IF A STOCK'S VALUE DROPS"
  Origs: 141:auto
  Dests: 143:auto
143 (0 2) PRINT "TO ZERO IT MAY REBOUND TO A POSITIVE VALUE AGAIN.  YOU"
  Origs: 142:auto
  Dests: 144:auto
144 (0 2) PRINT "HAVE $10,000 TO INVEST.  USE INTEGERS FOR ALL YOUR INPUTS."
  Origs: 143:auto
  Dests: 145:auto
145 (0 2) PRINT "(NOTE:  TO GET A 'FEEL' FOR THE MARKET RUN FOR AT LEAST"
  Origs: 144:auto
  Dests: 146:auto
146 (0 2) PRINT "10 DAYS)"
  Origs: 145:auto
  Dests: 147:auto
147 (0 2) PRINT "-----GOOD LUCK!-----"
  Origs: 146:auto
  Dests: 220:auto
200 (0 1) REM GENERATION OF STOCK TABLE; INPUT REQUESTS  
  Origs: 
  Dests: 
210 (0 1) REM INITIAL STOCK VALUES 
  Origs: 
  Dests: 
220 (0 3) LET S(1) = 100
  Origs: 126:ifthen, 147:auto
  Dests: 230:auto
230 (0 3) LET S(2) = 85
  Origs: 220:auto
  Dests: 240:auto
240 (0 3) LET S(3) = 150
  Origs: 230:auto
  Dests: 250:auto
250 (0 3) LET S(4) = 140
  Origs: 240:auto
  Dests: 260:auto
260 (0 3) LET S(5) = 110
  Origs: 250:auto
  Dests: 266:auto
265 (0 1) REM INITIAL T8 - # DAYS FOR FIRST TREND SLOPE (A)
  Origs: 
  Dests: 
266 (0 4) LET T8 = INT(4.99 * RND(X) + 1)
  Origs: 260:auto
  Dests: 268:auto
267 (0 1) REM RANDOMIZE SIGN OF FIRST TREND SLOPE (A)
  Origs: 
  Dests: 
268 (1 5) IF RND(X) > 0.5 THEN 270
  Origs: 266:auto
  Dests: 269:auto, 280:ifthen
269 (0 4) LET A = -A
  Origs: 268:auto
  Dests: 280:auto
270 (0 1) REM RANDOMIZE INITIAL VALUES 
  Origs: 
  Dests: 
280 (0 2) GOSUB 830
  Origs: 268:ifthen, 269:auto
  Dests: 290:auto, 841:gosub
285 (0 1) REM INITIAL PORTFOLIO CONTENTS 
  Origs: 
  Dests: 
290 F(I) (1 3) FOR I = 1 TO 5
  Origs: 280:auto
  Dests: 300:fornext, 310:fornext
300 F(I) (0 3) LET P(I) = 0
  Origs: 290:fornext
  Dests: 305:auto
305 F(I) (0 3) LET Z(I) = 0
  Origs: 300:auto
  Dests: 310:auto
310 F(I) (0 1) NEXT I
  Origs: 290:fornext, 305:auto
  Dests: 320:auto
320 (0 2) PRINT
  Origs: 310:auto
  Dests: 330:auto
330 (0 2) PRINT
  Origs: 320:auto
  Dests: 335:auto
333 (0 1) REM INITIALIZE CASH ASSETS:C 
  Origs: 
  Dests: 
335 (0 3) LET C = 10000
  Origs: 330:auto
  Dests: 340:auto
338 (0 1) REM PRINT INITIAL PORTFOLIO
  Origs: 
  Dests: 
340 (0 5) PRINT "STOCK", " ", "INITIALS", "PRICE/SHARE"
  Origs: 335:auto
  Dests: 350:auto
350 (0 4) PRINT "INT. BALLISTIC MISSILES", "  IBM", S(1)
  Origs: 340:auto
  Dests: 352:auto
352 (0 4) PRINT "RED CROSS OF AMERICA", "  RCA", S(2)
  Origs: 350:auto
  Dests: 354:auto
354 (0 4) PRINT "LICHTENSTEIN, BUMRAP & JOKE", "  LBJ", S(3)
  Origs: 352:auto
  Dests: 356:auto
356 (0 4) PRINT "AMERICAN BANKRUPT CO.", "  ABC", S(4)
  Origs: 354:auto
  Dests: 358:auto
358 (0 4) PRINT "CENSURED BOOKS STORE", "  CBS", S(5)
  Origs: 356:auto
  Dests: 360:auto
360 (0 2) PRINT
  Origs: 358:auto, 810:goto
  Dests: 363:auto
361 (0 1) REM NYSE AVERAGE:Z5; TEMP. VALUE:Z4; NET CHANGE:Z6 
  Origs: 
  Dests: 
363 (0 3) LET Z4 = Z5
  Origs: 360:auto
  Dests: 364:auto
364 (0 3) LET Z5 = 0
  Origs: 363:auto
  Dests: 365:auto
365 (0 3) LET T = 0
  Origs: 364:auto
  Dests: 370:auto
370 F(I) (1 3) FOR I = 1 TO 5
  Origs: 365:auto
  Dests: 375:fornext, 390:fornext
375 F(I) (0 4) LET Z5 = Z5 + S(I)
  Origs: 370:fornext
  Dests: 380:auto
380 F(I) (0 6) LET T = T + S(I) * P(I)
  Origs: 375:auto
  Dests: 390:auto
390 F(I) (0 1) NEXT I
  Origs: 370:fornext, 380:auto
  Dests: 391:auto
391 (0 5) LET Z5 = INT(100 * (Z5 / 5) + 0.5) / 100
  Origs: 390:auto
  Dests: 392:auto
392 (0 5) LET Z6 = INT((Z5 - Z4) * 100 + 0.5) / 100
  Origs: 391:auto
  Dests: 394:auto
393 (0 1) REM TOTAL ASSETS:D 
  Origs: 
  Dests: 
394 (0 4) LET D = T + C
  Origs: 392:auto
  Dests: 395:auto
395 (1 4) IF X9 > 0 THEN 398
  Origs: 394:auto
  Dests: 396:auto, 398:ifthen
396 (0 3) PRINT "NEW YORK STOCK EXCHANGE AVERAGE: "; Z5
  Origs: 395:auto
  Dests: 397:auto
397 (0 2) GOTO 399
  Origs: 396:auto
  Dests: 399:goto
398 (0 5) PRINT "NEW YORK STOCK EXCHANGE AVERAGE: "; Z5; " NET CHANGE"; Z6
  Origs: 395:ifthen
  Dests: 399:auto
399 (0 2) PRINT
  Origs: 397:goto, 398:auto
  Dests: 400:auto
400 (0 5) LET T = INT(100 * T + 0.5) / 100
  Origs: 399:auto
  Dests: 401:auto
401 (0 3) PRINT "TOTAL STOCK ASSETS ARE   $"; T
  Origs: 400:auto
  Dests: 403:auto
403 (0 5) LET C = INT(100 * C + 0.5) / 100
  Origs: 401:auto
  Dests: 405:auto
405 (0 3) PRINT "TOTAL CASH ASSETS ARE    $"; C
  Origs: 403:auto
  Dests: 407:auto
407 (0 5) LET D = INT(100 * D + 0.5) / 100
  Origs: 405:auto
  Dests: 408:auto
408 (0 3) PRINT "TOTAL ASSETS ARE         $"; D
  Origs: 407:auto
  Dests: 410:auto
410 (0 2) PRINT
  Origs: 408:auto
  Dests: 411:auto
411 (1 4) IF X9 = 0 THEN 416
  Origs: 410:auto
  Dests: 412:auto, 420:ifthen
412 (0 2) PRINT "DO YOU WISH TO CONTINUE (YES-TYPE 1, NO-TYPE 0)";
  Origs: 411:auto
  Dests: 413:auto
413 (1 2) INPUT Q9
  Origs: 412:auto
  Dests: 414:auto
414 (1 4) IF Q9 < 1 THEN 998
  Origs: 413:auto
  Dests: 420:auto, 998:ifthen
416 (0 1) REM INPUT TRANSACTIONS 
  Origs: 
  Dests: 
420 F(I) (0 2) PRINT "WHAT IS YOUR TRANSACTION IN"
  Origs: 411:ifthen, 414:auto, 616:goto, 660:goto
  Dests: 430:auto
430 F(I) (0 2) PRINT "IBM";
  Origs: 420:auto
  Dests: 440:auto
440 F(I) (1 2) INPUT Z(1)
  Origs: 430:auto
  Dests: 450:auto
450 F(I) (0 2) PRINT "RCA";
  Origs: 440:auto
  Dests: 460:auto
460 F(I) (1 2) INPUT Z(2)
  Origs: 450:auto
  Dests: 470:auto
470 F(I) (0 2) PRINT "LBJ";
  Origs: 460:auto
  Dests: 480:auto
480 F(I) (1 2) INPUT Z(3)
  Origs: 470:auto
  Dests: 490:auto
490 F(I) (0 2) PRINT "ABC";
  Origs: 480:auto
  Dests: 500:auto
500 F(I) (1 2) INPUT Z(4)
  Origs: 490:auto
  Dests: 510:auto
510 F(I) (0 2) PRINT "CBS";
  Origs: 500:auto
  Dests: 520:auto
520 F(I) (1 2) INPUT Z(5)
  Origs: 510:auto
  Dests: 525:auto
525 F(I) (0 2) PRINT
  Origs: 520:auto
  Dests: 540:auto
530 (0 1) REM TOTAL DAY'S PURCHASES IN $:P5
  Origs: 
  Dests: 
540 F(I) (0 3) LET P5 = 0
  Origs: 525:auto
  Dests: 560:auto
550 (0 1) REM TOTAL DAY'S SALES IN $:S5
  Origs: 
  Dests: 
560 F(I) (0 3) LET S5 = 0
  Origs: 540:auto
  Dests: 570:auto
570 F(I) (1 3) FOR I = 1 TO 5
  Origs: 560:auto
  Dests: 575:fornext, 620:fornext
575 F(I) (0 4) LET Z(I) = INT(Z(I) + 0.5)
  Origs: 570:fornext
  Dests: 580:auto
580 F(I) (1 4) IF Z(I) <= 0 THEN 610
  Origs: 575:auto
  Dests: 590:auto, 610:ifthen
590 F(I) (0 6) LET P5 = P5 + Z(I) * S(I)
  Origs: 580:auto
  Dests: 600:auto
600 F(I) (0 2) GOTO 620
  Origs: 590:auto
  Dests: 620:goto
610 F(I) (0 6) LET S5 = S5 - Z(I) * S(I)
  Origs: 580:ifthen
  Dests: 612:auto
612 F(I) (1 5) IF -Z(I) <= P(I) THEN 620
  Origs: 610:auto
  Dests: 614:auto, 620:ifthen
614 F(I) (0 2) PRINT "YOU HAVE OVERSOLD A STOCK; TRY AGAIN."
  Origs: 612:auto
  Dests: 616:auto
616 F(I) (0 3) GOTO 420
  Origs: 614:auto
  Dests: 420:goto
620 F(I) (0 1) NEXT I
  Origs: 570:fornext, 600:goto, 612:ifthen
  Dests: 625:auto
622 (0 1) REM TOTAL VALUE OF TRANSACTIONS:T5 
  Origs: 
  Dests: 
625 (0 4) LET T5 = P5 + S5
  Origs: 620:auto
  Dests: 640:auto
630 (0 1) REM BROKERAGE FEE:B5 
  Origs: 
  Dests: 
640 (0 5) LET B5 = INT(0.01 * T5 * 100 + 0.5) / 100
  Origs: 625:auto
  Dests: 654:auto
650 (0 1) REM CASH ASSETS=OLD CASH ASSETS-TOTAL PURCHASES
  Origs: 
  Dests: 
652 (0 1) REM -BROKERAGE FEES+TOTAL SALES:C5 
  Origs: 
  Dests: 
654 (0 6) LET C5 = C - P5 - B5 + S5
  Origs: 640:auto
  Dests: 656:auto
656 (1 4) IF C5 >= 0 THEN 674
  Origs: 654:auto
  Dests: 658:auto, 674:ifthen
658 (0 5) PRINT "YOU HAVE USED $"; -C5; " MORE THAN YOU HAVE."
  Origs: 656:auto
  Dests: 660:auto
660 (0 3) GOTO 420
  Origs: 658:auto
  Dests: 420:goto
674 (0 3) LET C = C5
  Origs: 656:ifthen
  Dests: 680:auto
675 (0 1) REM CALCULATE NEW PORTFOLIO  
  Origs: 
  Dests: 
680 F(I) (1 3) FOR I = 1 TO 5
  Origs: 674:auto
  Dests: 690:fornext, 700:fornext
690 F(I) (0 4) LET P(I) = P(I) + Z(I)
  Origs: 680:fornext
  Dests: 700:auto
700 F(I) (0 1) NEXT I
  Origs: 680:fornext, 690:auto
  Dests: 720:auto
710 (0 1) REM CALCULATE NEW STOCK VALUES 
  Origs: 
  Dests: 
720 (0 2) GOSUB 830
  Origs: 700:auto
  Dests: 755:auto, 841:gosub
750 (0 1) REM PRINT PORTFOLIO
  Origs: 
  Dests: 
751 (0 1) REM BELL RINGING-DIFFERENT ON MANY COMPUTERS 
  Origs: 
  Dests: 
755 (0 2) PRINT
  Origs: 720:auto
  Dests: 756:auto
756 (0 2) PRINT "**********     END OF DAY'S TRADING     **********"
  Origs: 755:auto
  Dests: 757:auto
757 (0 2) PRINT
  Origs: 756:auto
  Dests: 758:auto
758 (0 2) PRINT
  Origs: 757:auto
  Dests: 759:auto
759 (1 4) IF X9 < 1 THEN 769
  Origs: 758:auto
  Dests: 769:auto, 769:ifthen
769 (0 6) PRINT "STOCK", "PRICE/SHARE", "HOLDINGS", "VALUE", "NET PRICE CHANGE"
  Origs: 759:auto, 759:ifthen
  Dests: 770:auto
770 (0 7) PRINT "IBM", S(1), P(1), S(1) * P(1), C(1)
  Origs: 769:auto
  Dests: 771:auto
771 (0 7) PRINT "RCA", S(2), P(2), S(2) * P(2), C(2)
  Origs: 770:auto
  Dests: 772:auto
772 (0 7) PRINT "LBJ", S(3), P(3), S(3) * P(3), C(3)
  Origs: 771:auto
  Dests: 773:auto
773 (0 7) PRINT "ABC", S(4), P(4), S(4) * P(4), C(4)
  Origs: 772:auto
  Dests: 774:auto
774 (0 7) PRINT "CBS", S(5), P(5), S(5) * P(5), C(5)
  Origs: 773:auto
  Dests: 775:auto
775 (0 3) LET X9 = 1
  Origs: 774:auto
  Dests: 780:auto
780 (0 2) PRINT
  Origs: 775:auto
  Dests: 790:auto
790 (0 2) PRINT
  Origs: 780:auto
  Dests: 810:auto
810 (0 3) GOTO 360
  Origs: 790:auto
  Dests: 360:goto
829 (0 1) REM NEW STOCK VALUES - SUBROUTINE
  Origs: 
  Dests: 
830 (0 1) REM RANDOMLY PRODUCE NEW STOCK VALUES BASED ON PREVIOUS
  Origs: 
  Dests: 
831 (0 1) REM DAY'S VALUES 
  Origs: 
  Dests: 
832 (0 1) REM N1,N2 ARE RANDOM NUMBERS OF DAYS WHICH RESPECTIVELY
  Origs: 
  Dests: 
833 (0 1) REM DETERMINE WHEN STOCK I1 WILL INCREASE 10 PTS. AND STOCK
  Origs: 
  Dests: 
834 (0 1) REM I2 WILL DECREASE 10 PTS. 
  Origs: 
  Dests: 
840 (0 1) REM IF N1 DAYS HAVE PASSED, PICK AN I1, SET E1, DETERMINE NEW N1 
  Origs: 
  Dests: 
841 G(841) (1 4) IF N1 > 0 THEN 850
    WARNING: GOSUB length exceeds limit 40
  Origs: 280:gosub, 720:gosub
  Dests: 845:auto, 851:ifthen
845 G(841) (0 4) LET I1 = INT(4.99 * RND(X) + 1)
  Origs: 841:auto
  Dests: 846:auto
846 G(841) (0 4) LET N1 = INT(4.99 * RND(X) + 1)
  Origs: 845:auto
  Dests: 847:auto
847 G(841) (0 3) LET E1 = 1
  Origs: 846:auto
  Dests: 851:auto
850 (0 1) REM IF N2 DAYS HAVE PASSED, PICK AN I2, SET E2, DETERMINE NEW N2 
  Origs: 
  Dests: 
851 G(841) (1 4) IF N2 > 0 THEN 860
  Origs: 841:ifthen, 847:auto
  Dests: 855:auto, 861:ifthen
855 G(841) (0 4) LET I2 = INT(4.99 * RND(X) + 1)
  Origs: 851:auto
  Dests: 856:auto
856 G(841) (0 4) LET N2 = INT(4.99 * RND(X) + 1)
  Origs: 855:auto
  Dests: 857:auto
857 G(841) (0 3) LET E2 = 1
  Origs: 856:auto
  Dests: 861:auto
860 (0 1) REM DEDUCT ONE DAY FROM N1 AND N2
  Origs: 
  Dests: 
861 G(841) (0 4) LET N1 = N1 - 1
  Origs: 851:ifthen, 857:auto
  Dests: 862:auto
862 G(841) (0 4) LET N2 = N2 - 1
  Origs: 861:auto
  Dests: 900:auto
890 (0 1) REM LOOP THROUGH ALL STOCKS
  Origs: 
  Dests: 
900 G(841) F(I) (1 3) FOR I = 1 TO 5
  Origs: 862:auto
  Dests: 910:fornext, 970:fornext
910 G(841) F(I) (0 4) LET X1 = RND(X)
  Origs: 900:fornext
  Dests: 915:auto
915 G(841) F(I) (1 4) IF X1 > 0.25 THEN 920
  Origs: 910:auto
  Dests: 916:auto, 920:ifthen
916 G(841) F(I) (0 3) LET X1 = 0.25
  Origs: 915:auto
  Dests: 917:auto
917 G(841) F(I) (0 2) GOTO 935
  Origs: 916:auto
  Dests: 935:goto
920 G(841) F(I) (1 4) IF X1 > 0.5 THEN 925
  Origs: 915:ifthen
  Dests: 921:auto, 925:ifthen
921 G(841) F(I) (0 3) LET X1 = 0.5
  Origs: 920:auto
  Dests: 922:auto
922 G(841) F(I) (0 2) GOTO 935
  Origs: 921:auto
  Dests: 935:goto
925 G(841) F(I) (1 4) IF X1 > 0.75 THEN 930
  Origs: 920:ifthen
  Dests: 926:auto, 930:ifthen
926 G(841) F(I) (0 3) LET X1 = 0.75
  Origs: 925:auto
  Dests: 927:auto
927 G(841) F(I) (0 2) GOTO 935
  Origs: 926:auto
  Dests: 935:goto
930 G(841) F(I) (0 3) LET X1 = 0
  Origs: 925:ifthen
  Dests: 935:auto
931 (0 1) REM BIG CHANGE CONSTANT:W3  (SET TO ZERO INITIALLY)
  Origs: 
  Dests: 
935 G(841) F(I) (0 3) LET W3 = 0
  Origs: 917:goto, 922:goto, 927:goto, 930:auto
  Dests: 936:auto
936 G(841) F(I) (1 4) IF E1 < 1 THEN 945
  Origs: 935:auto
  Dests: 937:auto, 945:ifthen
937 G(841) F(I) (1 6) IF INT(I1 + 0.5) <> INT(I + 0.5) THEN 945
  Origs: 936:auto
  Dests: 939:auto, 945:ifthen
938 (0 1) REM ADD 10 PTS. TO THIS STOCK;  RESET E1 
  Origs: 
  Dests: 
939 G(841) F(I) (0 3) LET W3 = 10
  Origs: 937:auto
  Dests: 943:auto
943 G(841) F(I) (0 3) LET E1 = 0
  Origs: 939:auto
  Dests: 945:auto
945 G(841) F(I) (1 4) IF E2 < 1 THEN 955
  Origs: 936:ifthen, 937:ifthen, 943:auto
  Dests: 947:auto, 955:ifthen
947 G(841) F(I) (1 6) IF INT(I2 + 0.5) <> INT(I + 0.5) THEN 955
  Origs: 945:auto
  Dests: 949:auto, 955:ifthen
948 (0 1) REM SUBTRACT 10 PTS. FROM THIS STOCK;  RESET E2
  Origs: 
  Dests: 
949 G(841) F(I) (0 4) LET W3 = W3 - 10
  Origs: 947:auto
  Dests: 953:auto
953 G(841) F(I) (0 3) LET E2 = 0
  Origs: 949:auto
  Dests: 955:auto
954 (0 1) REM C(I) IS CHANGE IN STOCK VALUE
  Origs: 
  Dests: 
955 G(841) F(I) (0 8) LET C(I) = INT(A * S(I)) + X1 + INT(3 - 6 * RND(X) + 0.5) + W3
  Origs: 945:ifthen, 947:ifthen, 953:auto
  Dests: 956:auto
956 G(841) F(I) (0 5) LET C(I) = INT(100 * C(I) + 0.5) / 100
  Origs: 955:auto
  Dests: 957:auto
957 G(841) F(I) (0 4) LET S(I) = S(I) + C(I)
  Origs: 956:auto
  Dests: 960:auto
960 G(841) F(I) (1 4) IF S(I) > 0 THEN 967
  Origs: 957:auto
  Dests: 964:auto, 967:ifthen
964 G(841) F(I) (0 3) LET C(I) = 0
  Origs: 960:auto
  Dests: 965:auto
965 G(841) F(I) (0 3) LET S(I) = 0
  Origs: 964:auto
  Dests: 966:auto
966 G(841) F(I) (0 2) GOTO 970
  Origs: 965:auto
  Dests: 970:goto
967 G(841) F(I) (0 5) LET S(I) = INT(100 * S(I) + 0.5) / 100
  Origs: 960:ifthen
  Dests: 970:auto
970 G(841) F(I) (0 1) NEXT I
  Origs: 900:fornext, 966:goto, 967:auto
  Dests: 973:auto
972 (0 1) REM AFTER T8 DAYS RANDOMLY CHANGE TREND SIGN AND SLOPE 
  Origs: 
  Dests: 
973 G(841) (0 4) LET T8 = T8 - 1
  Origs: 970:auto
  Dests: 974:auto
974 G(841) (1 4) IF T8 < 1 THEN 985
  Origs: 973:auto
  Dests: 980:auto, 990:ifthen
980 G(841) (0 1) RETURN
  Origs: 974:auto
  Dests: 
985 (0 1) REM RANDOMLY CHANGE TREND SIGN AND SLOPE (A), AND DURATION 
  Origs: 
  Dests: 
986 (0 1) REM OF TREND (T8)
  Origs: 
  Dests: 
990 G(841) (0 4) LET T8 = INT(4.99 * RND(X) + 1)
  Origs: 974:ifthen
  Dests: 992:auto
992 G(841) (0 5) LET A = INT((RND(X) / 10) * 100 + 0.5) / 100
  Origs: 990:auto
  Dests: 993:auto
993 G(841) (0 4) LET S4 = RND(X)
  Origs: 992:auto
  Dests: 994:auto
994 G(841) (1 4) IF S4 <= 0.5 THEN 997
  Origs: 993:auto
  Dests: 995:auto, 997:ifthen
995 G(841) (0 4) LET A = -A
  Origs: 994:auto
  Dests: 997:auto
997 G(841) (0 1) RETURN
  Origs: 994:ifthen, 995:auto
  Dests: 
998 (0 2) PRINT "HOPE YOU HAD FUN!!"
  Origs: 414:ifthen
  Dests: 999:auto
999 (0 1) END
  Origs: 998:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

