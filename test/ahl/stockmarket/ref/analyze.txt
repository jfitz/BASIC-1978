Statistics:

Number of lines: 232
Number of valid statements: 185
Number of comments: 49
Number of executable statements: 185

Complexity:

Comment density: 0.265
Comprehension effort: 652
McCabe complexity: 34
Halstead complexity:
 length: 967
 volume: 5053.297
 difficulty: 36.519
 effort: 184538.921
 language: 3.789
 intelligence: 138.376
 time: 170.869

(0 4) 10 PRINT TAB(30); "STOCK MARKET"
  Origs: :start
  Dests: 20:auto
(0 4) 20 PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 10:auto
  Dests: 30:auto
(0 2) 30 PRINT
(0 2)    PRINT
(0 2)    PRINT
  Origs: 20:auto
  Dests: 110:auto
(0 1) 100 REM STOCK MARKET SIMULATION     -STOCK-
  Origs: 
  Dests: 
(0 1) 101 REM REVISED 8/18/70 (D. PESSEL, L. BRAUN, C. LOSIK)  
  Origs: 
  Dests: 
(0 1) 102 REM IMP VRBLS: A-MRKT TRND SLP; B5-BRKRGE FEE; C-TTL CSH ASSTS;    
  Origs: 
  Dests: 
(0 1) 103 REM C5-TTL CSH ASSTS (TEMP); C(I)-CHNG IN STK VAL; D-TTL ASSTS;
  Origs: 
  Dests: 
(0 1) 104 REM E1,E2-LRG CHNG MISC; I-STCK #; I1,I2-STCKS W LRG CHNG; 
  Origs: 
  Dests: 
(0 1) 105 REM N1,N2-LRG CHNG DAY CNTS; P5-TTL DAYS PRCHSS; P(I)-PRTFL CNTNTS;
  Origs: 
  Dests: 
(0 1) 106 REM Q9-NEW CYCL?; S4-SGN OF A; S5-TTL DYS SLS; S(I)-VALUE/SHR; 
  Origs: 
  Dests: 
(0 1) 107 REM T-TTL STCK ASSTS; T5-TTL VAL OF TRNSCTNS;
  Origs: 
  Dests: 
(0 1) 108 REM W3-LRG CHNG; X1-SMLL CHNG(<$1); Z4,Z5,Z6-NYSE AVE.; Z(I)-TRNSCT
  Origs: 
  Dests: 
(0 5) 110 DIM S(5), P(5), Z(5), C(5)
  Origs: 30:auto
  Dests: 113:auto
(0 1) 112 REM SLOPE OF MARKET TREND:A  (SAME FOR ALL STOCKS) 
  Origs: 
  Dests: 
(0 3) 113 LET X = 1
  Origs: 110:auto
  Dests: 114:auto
(0 5) 114 LET A = INT((RND(X) / 10) * 100 + .5) / 100
  Origs: 113:auto
  Dests: 115:auto
(0 3) 115 LET T5 = 0
  Origs: 114:auto
  Dests: 116:auto
(0 3) 116 LET X9 = 0
  Origs: 115:auto
  Dests: 117:auto
(0 3) 117 LET N1 = 0
  Origs: 116:auto
  Dests: 118:auto
(0 3) 118 LET N2 = 0
  Origs: 117:auto
  Dests: 119:auto
(0 3) 119 LET E1 = 0
  Origs: 118:auto
  Dests: 120:auto
(0 3) 120 LET E2 = 0
  Origs: 119:auto
  Dests: 122:auto
(0 1) 121 REM INTRODUCTION 
  Origs: 
  Dests: 
(0 2) 122 PRINT "DO YOU WANT THE INSTRUCTIONS (YES-TYPE 1, NO-TYPE 0)";
  Origs: 120:auto
  Dests: 123:auto
(1 2) 123 INPUT Z9
  Origs: 122:auto
  Dests: 124:auto
(0 2) 124 PRINT
  Origs: 123:auto
  Dests: 125:auto
(0 2) 125 PRINT
  Origs: 124:auto
  Dests: 126:auto
(1 4) 126 IF Z9 < 1 THEN 200
  Origs: 125:auto
  Dests: 130:auto, 210:ifthen
(0 2) 130 PRINT "THIS PROGRAM PLAYS THE STOCK MARKET.  YOU WILL BE GIVEN"
  Origs: 126:auto
  Dests: 132:auto
(0 2) 132 PRINT "$10,000 AND MAY BUY OR SELL STOCKS.  THE STOCK PRICES WILL"
  Origs: 130:auto
  Dests: 134:auto
(0 2) 134 PRINT "BE GENERATED RANDOMLY AND THEREFORE THIS MODEL DOES NOT"
  Origs: 132:auto
  Dests: 135:auto
(0 2) 135 PRINT "REPRESENT EXACTLY WHAT HAPPENS ON THE EXCHANGE.  A TABLE"
  Origs: 134:auto
  Dests: 136:auto
(0 2) 136 PRINT "OF AVAILABLE STOCKS, THEIR PRICES, AND THE NUMBER OF SHARES"
  Origs: 135:auto
  Dests: 137:auto
(0 2) 137 PRINT "IN YOUR PORTFOLIO WILL BE PRINTED.  FOLLOWING THIS, THE"
  Origs: 136:auto
  Dests: 138:auto
(0 2) 138 PRINT "INITIALS OF EACH STOCK WILL BE PRINTED WITH A QUESTION"
  Origs: 137:auto
  Dests: 139:auto
(0 2) 139 PRINT "MARK.  HERE YOU INDICATE A TRANSACTION.  TO BUY A STOCK"
  Origs: 138:auto
  Dests: 140:auto
(0 2) 140 PRINT "TYPE +NNN, TO SELL A STOCK TYPE -NNN, WHERE NNN IS THE"
  Origs: 139:auto
  Dests: 141:auto
(0 2) 141 PRINT "NUMBER OF SHARES.  A BROKERAGE FEE OF 1% WILL BE CHARGED"
  Origs: 140:auto
  Dests: 142:auto
(0 2) 142 PRINT "ON ALL TRANSACTIONS.  NOTE THAT IF A STOCK'S VALUE DROPS"
  Origs: 141:auto
  Dests: 143:auto
(0 2) 143 PRINT "TO ZERO IT MAY REBOUND TO A POSITIVE VALUE AGAIN.  YOU"
  Origs: 142:auto
  Dests: 144:auto
(0 2) 144 PRINT "HAVE $10,000 TO INVEST.  USE INTEGERS FOR ALL YOUR INPUTS."
  Origs: 143:auto
  Dests: 145:auto
(0 2) 145 PRINT "(NOTE:  TO GET A 'FEEL' FOR THE MARKET RUN FOR AT LEAST"
  Origs: 144:auto
  Dests: 146:auto
(0 2) 146 PRINT "10 DAYS)"
  Origs: 145:auto
  Dests: 147:auto
(0 2) 147 PRINT "-----GOOD LUCK!-----"
  Origs: 146:auto
  Dests: 220:auto
(0 1) 200 REM GENERATION OF STOCK TABLE; INPUT REQUESTS  
  Origs: 
  Dests: 
(0 1) 210 REM INITIAL STOCK VALUES 
  Origs: 126:ifthen
  Dests: 220:auto
(0 3) 220 LET S(1) = 100
  Origs: 147:auto, 210:auto
  Dests: 230:auto
(0 3) 230 LET S(2) = 85
  Origs: 220:auto
  Dests: 240:auto
(0 3) 240 LET S(3) = 150
  Origs: 230:auto
  Dests: 250:auto
(0 3) 250 LET S(4) = 140
  Origs: 240:auto
  Dests: 260:auto
(0 3) 260 LET S(5) = 110
  Origs: 250:auto
  Dests: 266:auto
(0 1) 265 REM INITIAL T8 - # DAYS FOR FIRST TREND SLOPE (A)
  Origs: 
  Dests: 
(0 4) 266 LET T8 = INT(4.99 * RND(X) + 1)
  Origs: 260:auto
  Dests: 268:auto
(0 1) 267 REM RANDOMIZE SIGN OF FIRST TREND SLOPE (A)
  Origs: 
  Dests: 
(1 5) 268 IF RND(X) > .5 THEN 270
  Origs: 266:auto
  Dests: 269:auto, 280:ifthen
(0 4) 269 LET A = -A
  Origs: 268:auto
  Dests: 280:auto
(0 1) 270 REM RANDOMIZE INITIAL VALUES 
  Origs: 
  Dests: 
(0 2) 280 GOSUB 830
  Origs: 268:ifthen, 269:auto
  Dests: 290:auto, 831:gosub
(0 1) 285 REM INITIAL PORTFOLIO CONTENTS 
  Origs: 
  Dests: 
(1 3) 290 FOR I = 1 TO 5
  Origs: 280:auto
  Dests: 300:fornext, 310:fornext
(0 3) 300 LET P(I) = 0
  Origs: 290:fornext
  Dests: 305:auto
(0 3) 305 LET Z(I) = 0
  Origs: 300:auto
  Dests: 310:auto
(0 1) 310 NEXT I
  Origs: 290:fornext, 305:auto
  Dests: 320:auto
(0 2) 320 PRINT
  Origs: 310:auto
  Dests: 330:auto
(0 2) 330 PRINT
  Origs: 320:auto
  Dests: 335:auto
(0 1) 333 REM INITIALIZE CASH ASSETS:C 
  Origs: 
  Dests: 
(0 3) 335 LET C = 10000
  Origs: 330:auto
  Dests: 340:auto
(0 1) 338 REM PRINT INITIAL PORTFOLIO
  Origs: 
  Dests: 
(0 5) 340 PRINT "STOCK", " ", "INITIALS", "PRICE/SHARE"
  Origs: 335:auto
  Dests: 350:auto
(0 4) 350 PRINT "INT. BALLISTIC MISSILES", "  IBM", S(1)
  Origs: 340:auto
  Dests: 352:auto
(0 4) 352 PRINT "RED CROSS OF AMERICA", "  RCA", S(2)
  Origs: 350:auto
  Dests: 354:auto
(0 4) 354 PRINT "LICHTENSTEIN, BUMRAP & JOKE", "  LBJ", S(3)
  Origs: 352:auto
  Dests: 356:auto
(0 4) 356 PRINT "AMERICAN BANKRUPT CO.", "  ABC", S(4)
  Origs: 354:auto
  Dests: 358:auto
(0 4) 358 PRINT "CENSURED BOOKS STORE", "  CBS", S(5)
  Origs: 356:auto
  Dests: 360:auto
(0 2) 360 PRINT
  Origs: 358:auto, 810:goto
  Dests: 363:auto
(0 1) 361 REM NYSE AVERAGE:Z5; TEMP. VALUE:Z4; NET CHANGE:Z6 
  Origs: 
  Dests: 
(0 3) 363 LET Z4 = Z5
  Origs: 360:auto
  Dests: 364:auto
(0 3) 364 LET Z5 = 0
  Origs: 363:auto
  Dests: 365:auto
(0 3) 365 LET T = 0
  Origs: 364:auto
  Dests: 370:auto
(1 3) 370 FOR I = 1 TO 5
  Origs: 365:auto
  Dests: 375:fornext, 390:fornext
(0 4) 375 LET Z5 = Z5 + S(I)
  Origs: 370:fornext
  Dests: 380:auto
(0 6) 380 LET T = T + S(I) * P(I)
  Origs: 375:auto
  Dests: 390:auto
(0 1) 390 NEXT I
  Origs: 370:fornext, 380:auto
  Dests: 391:auto
(0 5) 391 LET Z5 = INT(100 * (Z5 / 5) + .5) / 100
  Origs: 390:auto
  Dests: 392:auto
(0 5) 392 LET Z6 = INT((Z5 - Z4) * 100 + .5) / 100
  Origs: 391:auto
  Dests: 394:auto
(0 1) 393 REM TOTAL ASSETS:D 
  Origs: 
  Dests: 
(0 4) 394 LET D = T + C
  Origs: 392:auto
  Dests: 395:auto
(1 4) 395 IF X9 > 0 THEN 398
  Origs: 394:auto
  Dests: 396:auto, 398:ifthen
(0 3) 396 PRINT "NEW YORK STOCK EXCHANGE AVERAGE: "; Z5
  Origs: 395:auto
  Dests: 397:auto
(0 2) 397 GOTO 399
  Origs: 396:auto
  Dests: 399:goto
(0 5) 398 PRINT "NEW YORK STOCK EXCHANGE AVERAGE: "; Z5; " NET CHANGE"; Z6
  Origs: 395:ifthen
  Dests: 399:auto
(0 2) 399 PRINT
  Origs: 397:goto, 398:auto
  Dests: 400:auto
(0 5) 400 LET T = INT(100 * T + .5) / 100
  Origs: 399:auto
  Dests: 401:auto
(0 3) 401 PRINT "TOTAL STOCK ASSETS ARE   $"; T
  Origs: 400:auto
  Dests: 403:auto
(0 5) 403 LET C = INT(100 * C + .5) / 100
  Origs: 401:auto
  Dests: 405:auto
(0 3) 405 PRINT "TOTAL CASH ASSETS ARE    $"; C
  Origs: 403:auto
  Dests: 407:auto
(0 5) 407 LET D = INT(100 * D + .5) / 100
  Origs: 405:auto
  Dests: 408:auto
(0 3) 408 PRINT "TOTAL ASSETS ARE         $"; D
  Origs: 407:auto
  Dests: 410:auto
(0 2) 410 PRINT
  Origs: 408:auto
  Dests: 411:auto
(1 4) 411 IF X9 = 0 THEN 416
  Origs: 410:auto
  Dests: 412:auto, 420:ifthen
(0 2) 412 PRINT "DO YOU WISH TO CONTINUE (YES-TYPE 1, NO-TYPE 0)";
  Origs: 411:auto
  Dests: 413:auto
(1 2) 413 INPUT Q9
  Origs: 412:auto
  Dests: 414:auto
(1 4) 414 IF Q9 < 1 THEN 998
  Origs: 413:auto
  Dests: 416:auto, 420:auto, 998:ifthen
(0 1) 416 REM INPUT TRANSACTIONS 
  Origs: 414:auto
  Dests: 420:auto
(0 2) 420 PRINT "WHAT IS YOUR TRANSACTION IN"
  Origs: 411:ifthen, 414:auto, 416:auto, 616:goto, 660:goto
  Dests: 430:auto
(0 2) 430 PRINT "IBM";
  Origs: 420:auto
  Dests: 440:auto
(1 2) 440 INPUT Z(1)
  Origs: 430:auto
  Dests: 450:auto
(0 2) 450 PRINT "RCA";
  Origs: 440:auto
  Dests: 460:auto
(1 2) 460 INPUT Z(2)
  Origs: 450:auto
  Dests: 470:auto
(0 2) 470 PRINT "LBJ";
  Origs: 460:auto
  Dests: 480:auto
(1 2) 480 INPUT Z(3)
  Origs: 470:auto
  Dests: 490:auto
(0 2) 490 PRINT "ABC";
  Origs: 480:auto
  Dests: 500:auto
(1 2) 500 INPUT Z(4)
  Origs: 490:auto
  Dests: 510:auto
(0 2) 510 PRINT "CBS";
  Origs: 500:auto
  Dests: 520:auto
(1 2) 520 INPUT Z(5)
  Origs: 510:auto
  Dests: 525:auto
(0 2) 525 PRINT
  Origs: 520:auto
  Dests: 540:auto
(0 1) 530 REM TOTAL DAY'S PURCHASES IN $:P5
  Origs: 
  Dests: 
(0 3) 540 LET P5 = 0
  Origs: 525:auto
  Dests: 560:auto
(0 1) 550 REM TOTAL DAY'S SALES IN $:S5
  Origs: 
  Dests: 
(0 3) 560 LET S5 = 0
  Origs: 540:auto
  Dests: 570:auto
(1 3) 570 FOR I = 1 TO 5
  Origs: 560:auto
  Dests: 575:fornext, 620:fornext
(0 4) 575 LET Z(I) = INT(Z(I) + .5)
  Origs: 570:fornext
  Dests: 580:auto
(1 4) 580 IF Z(I) <= 0 THEN 610
  Origs: 575:auto
  Dests: 590:auto, 610:ifthen
(0 6) 590 LET P5 = P5 + Z(I) * S(I)
  Origs: 580:auto
  Dests: 600:auto
(0 2) 600 GOTO 620
  Origs: 590:auto
  Dests: 620:goto
(0 6) 610 LET S5 = S5 - Z(I) * S(I)
  Origs: 580:ifthen
  Dests: 612:auto
(1 5) 612 IF -Z(I) <= P(I) THEN 620
  Origs: 610:auto
  Dests: 614:auto, 620:ifthen
(0 2) 614 PRINT "YOU HAVE OVERSOLD A STOCK; TRY AGAIN."
  Origs: 612:auto
  Dests: 616:auto
(0 3) 616 GOTO 420
  Origs: 614:auto
  Dests: 420:goto
(0 1) 620 NEXT I
  Origs: 570:fornext, 600:goto, 612:ifthen
  Dests: 625:auto
(0 1) 622 REM TOTAL VALUE OF TRANSACTIONS:T5 
  Origs: 
  Dests: 
(0 4) 625 LET T5 = P5 + S5
  Origs: 620:auto
  Dests: 640:auto
(0 1) 630 REM BROKERAGE FEE:B5 
  Origs: 
  Dests: 
(0 5) 640 LET B5 = INT(.01 * T5 * 100 + .5) / 100
  Origs: 625:auto
  Dests: 654:auto
(0 1) 650 REM CASH ASSETS=OLD CASH ASSETS-TOTAL PURCHASES
  Origs: 
  Dests: 
(0 1) 652 REM -BROKERAGE FEES+TOTAL SALES:C5 
  Origs: 
  Dests: 
(0 6) 654 LET C5 = C - P5 - B5 + S5
  Origs: 640:auto
  Dests: 656:auto
(1 4) 656 IF C5 >= 0 THEN 674
  Origs: 654:auto
  Dests: 658:auto, 674:ifthen
(0 5) 658 PRINT "YOU HAVE USED $"; -C5; " MORE THAN YOU HAVE."
  Origs: 656:auto
  Dests: 660:auto
(0 3) 660 GOTO 420
  Origs: 658:auto
  Dests: 420:goto
(0 3) 674 LET C = C5
  Origs: 656:ifthen
  Dests: 680:auto
(0 1) 675 REM CALCULATE NEW PORTFOLIO  
  Origs: 
  Dests: 
(1 3) 680 FOR I = 1 TO 5
  Origs: 674:auto
  Dests: 690:fornext, 700:fornext
(0 4) 690 LET P(I) = P(I) + Z(I)
  Origs: 680:fornext
  Dests: 700:auto
(0 1) 700 NEXT I
  Origs: 680:fornext, 690:auto
  Dests: 720:auto
(0 1) 710 REM CALCULATE NEW STOCK VALUES 
  Origs: 
  Dests: 
(0 2) 720 GOSUB 830
  Origs: 700:auto
  Dests: 755:auto, 831:gosub
(0 1) 750 REM PRINT PORTFOLIO
  Origs: 
  Dests: 
(0 1) 751 REM BELL RINGING-DIFFERENT ON MANY COMPUTERS 
  Origs: 
  Dests: 
(0 2) 755 PRINT
  Origs: 720:auto
  Dests: 756:auto
(0 2) 756 PRINT "**********     END OF DAY'S TRADING     **********"
  Origs: 755:auto
  Dests: 757:auto
(0 2) 757 PRINT
  Origs: 756:auto
  Dests: 758:auto
(0 2) 758 PRINT
  Origs: 757:auto
  Dests: 759:auto
(1 4) 759 IF X9 < 1 THEN 769
  Origs: 758:auto
  Dests: 769:auto, 769:ifthen
(0 6) 769 PRINT "STOCK", "PRICE/SHARE", "HOLDINGS", "VALUE", "NET PRICE CHANGE"
  Origs: 759:auto, 759:ifthen
  Dests: 770:auto
(0 7) 770 PRINT "IBM", S(1), P(1), S(1) * P(1), C(1)
  Origs: 769:auto
  Dests: 771:auto
(0 7) 771 PRINT "RCA", S(2), P(2), S(2) * P(2), C(2)
  Origs: 770:auto
  Dests: 772:auto
(0 7) 772 PRINT "LBJ", S(3), P(3), S(3) * P(3), C(3)
  Origs: 771:auto
  Dests: 773:auto
(0 7) 773 PRINT "ABC", S(4), P(4), S(4) * P(4), C(4)
  Origs: 772:auto
  Dests: 774:auto
(0 7) 774 PRINT "CBS", S(5), P(5), S(5) * P(5), C(5)
  Origs: 773:auto
  Dests: 775:auto
(0 3) 775 LET X9 = 1
  Origs: 774:auto
  Dests: 780:auto
(0 2) 780 PRINT
  Origs: 775:auto
  Dests: 790:auto
(0 2) 790 PRINT
  Origs: 780:auto
  Dests: 810:auto
(0 3) 810 GOTO 360
  Origs: 790:auto
  Dests: 360:goto
(0 1) 829 REM NEW STOCK VALUES - SUBROUTINE
  Origs: 
  Dests: 
(0 1) 830 REM RANDOMLY PRODUCE NEW STOCK VALUES BASED ON PREVIOUS
  Origs: 
  Dests: 
G(831) (0 1) 831 REM DAY'S VALUES 
  Origs: 280:gosub, 720:gosub
  Dests: 841:auto
(0 1) 832 REM N1,N2 ARE RANDOM NUMBERS OF DAYS WHICH RESPECTIVELY
  Origs: 
  Dests: 
(0 1) 833 REM DETERMINE WHEN STOCK I1 WILL INCREASE 10 PTS. AND STOCK
  Origs: 
  Dests: 
(0 1) 834 REM I2 WILL DECREASE 10 PTS. 
  Origs: 
  Dests: 
(0 1) 840 REM IF N1 DAYS HAVE PASSED, PICK AN I1, SET E1, DETERMINE NEW N1 
  Origs: 
  Dests: 
G(831) (1 4) 841 IF N1 > 0 THEN 850
  Origs: 831:auto
  Dests: 845:auto, 851:ifthen
G(831) (0 4) 845 LET I1 = INT(4.99 * RND(X) + 1)
  Origs: 841:auto
  Dests: 846:auto
G(831) (0 4) 846 LET N1 = INT(4.99 * RND(X) + 1)
  Origs: 845:auto
  Dests: 847:auto
G(831) (0 3) 847 LET E1 = 1
  Origs: 846:auto
  Dests: 851:auto
(0 1) 850 REM IF N2 DAYS HAVE PASSED, PICK AN I2, SET E2, DETERMINE NEW N2 
  Origs: 
  Dests: 
G(831) (1 4) 851 IF N2 > 0 THEN 860
  Origs: 841:ifthen, 847:auto
  Dests: 855:auto, 861:ifthen
G(831) (0 4) 855 LET I2 = INT(4.99 * RND(X) + 1)
  Origs: 851:auto
  Dests: 856:auto
G(831) (0 4) 856 LET N2 = INT(4.99 * RND(X) + 1)
  Origs: 855:auto
  Dests: 857:auto
G(831) (0 3) 857 LET E2 = 1
  Origs: 856:auto
  Dests: 861:auto
(0 1) 860 REM DEDUCT ONE DAY FROM N1 AND N2
  Origs: 
  Dests: 
G(831) (0 4) 861 LET N1 = N1 - 1
  Origs: 851:ifthen, 857:auto
  Dests: 862:auto
G(831) (0 4) 862 LET N2 = N2 - 1
  Origs: 861:auto
  Dests: 900:auto
(0 1) 890 REM LOOP THROUGH ALL STOCKS
  Origs: 
  Dests: 
G(831) (1 3) 900 FOR I = 1 TO 5
  Origs: 862:auto
  Dests: 910:fornext, 970:fornext
G(831) (0 4) 910 LET X1 = RND(X)
  Origs: 900:fornext
  Dests: 915:auto
G(831) (1 4) 915 IF X1 > .25 THEN 920
  Origs: 910:auto
  Dests: 916:auto, 920:ifthen
G(831) (0 3) 916 LET X1 = .25
  Origs: 915:auto
  Dests: 917:auto
G(831) (0 2) 917 GOTO 935
  Origs: 916:auto
  Dests: 935:goto
G(831) (1 4) 920 IF X1 > .5 THEN 925
  Origs: 915:ifthen
  Dests: 921:auto, 925:ifthen
G(831) (0 3) 921 LET X1 = .5
  Origs: 920:auto
  Dests: 922:auto
G(831) (0 2) 922 GOTO 935
  Origs: 921:auto
  Dests: 935:goto
G(831) (1 4) 925 IF X1 > .75 THEN 930
  Origs: 920:ifthen
  Dests: 926:auto, 930:ifthen
G(831) (0 3) 926 LET X1 = .75
  Origs: 925:auto
  Dests: 927:auto
G(831) (0 2) 927 GOTO 935
  Origs: 926:auto
  Dests: 935:goto
G(831) (0 3) 930 LET X1 = 0.0
  Origs: 925:ifthen
  Dests: 935:auto
(0 1) 931 REM BIG CHANGE CONSTANT:W3  (SET TO ZERO INITIALLY)
  Origs: 
  Dests: 
G(831) (0 3) 935 LET W3 = 0
  Origs: 917:goto, 922:goto, 927:goto, 930:auto
  Dests: 936:auto
G(831) (1 4) 936 IF E1 < 1 THEN 945
  Origs: 935:auto
  Dests: 937:auto, 945:ifthen
G(831) (1 6) 937 IF INT(I1 + .5) <> INT(I + .5) THEN 945
  Origs: 936:auto
  Dests: 938:auto, 939:auto, 945:ifthen
G(831) (0 1) 938 REM ADD 10 PTS. TO THIS STOCK;  RESET E1 
  Origs: 937:auto
  Dests: 939:auto
G(831) (0 3) 939 LET W3 = 10
  Origs: 937:auto, 938:auto
  Dests: 943:auto
G(831) (0 3) 943 LET E1 = 0
  Origs: 939:auto
  Dests: 945:auto
G(831) (1 4) 945 IF E2 < 1 THEN 955
  Origs: 936:ifthen, 937:ifthen, 943:auto
  Dests: 947:auto, 955:ifthen
G(831) (1 6) 947 IF INT(I2 + .5) <> INT(I + .5) THEN 955
  Origs: 945:auto
  Dests: 948:auto, 949:auto, 955:ifthen
G(831) (0 1) 948 REM SUBTRACT 10 PTS. FROM THIS STOCK;  RESET E2
  Origs: 947:auto
  Dests: 949:auto
G(831) (0 4) 949 LET W3 = W3 - 10
  Origs: 947:auto, 948:auto
  Dests: 953:auto
G(831) (0 3) 953 LET E2 = 0
  Origs: 949:auto
  Dests: 955:auto
(0 1) 954 REM C(I) IS CHANGE IN STOCK VALUE
  Origs: 
  Dests: 
G(831) (0 8) 955 LET C(I) = INT(A * S(I)) + X1 + INT(3 - 6 * RND(X) + .5) + W3
  Origs: 945:ifthen, 947:ifthen, 953:auto
  Dests: 956:auto
G(831) (0 5) 956 LET C(I) = INT(100 * C(I) + .5) / 100
  Origs: 955:auto
  Dests: 957:auto
G(831) (0 4) 957 LET S(I) = S(I) + C(I)
  Origs: 956:auto
  Dests: 960:auto
G(831) (1 4) 960 IF S(I) > 0 THEN 967
  Origs: 957:auto
  Dests: 964:auto, 967:ifthen
G(831) (0 3) 964 LET C(I) = 0
  Origs: 960:auto
  Dests: 965:auto
G(831) (0 3) 965 LET S(I) = 0
  Origs: 964:auto
  Dests: 966:auto
G(831) (0 2) 966 GOTO 970
  Origs: 965:auto
  Dests: 970:goto
G(831) (0 5) 967 LET S(I) = INT(100 * S(I) + .5) / 100
  Origs: 960:ifthen
  Dests: 970:auto
G(831) (0 1) 970 NEXT I
  Origs: 900:fornext, 966:goto, 967:auto
  Dests: 973:auto
(0 1) 972 REM AFTER T8 DAYS RANDOMLY CHANGE TREND SIGN AND SLOPE 
  Origs: 
  Dests: 
G(831) (0 4) 973 LET T8 = T8 - 1
  Origs: 970:auto
  Dests: 974:auto
G(831) (1 4) 974 IF T8 < 1 THEN 985
  Origs: 973:auto
  Dests: 980:auto, 986:ifthen
G(831) (0 1) 980 RETURN
  Origs: 974:auto
  Dests: 
(0 1) 985 REM RANDOMLY CHANGE TREND SIGN AND SLOPE (A), AND DURATION 
  Origs: 
  Dests: 
G(831) (0 1) 986 REM OF TREND (T8)
  Origs: 974:ifthen
  Dests: 990:auto
G(831) (0 4) 990 LET T8 = INT(4.99 * RND(X) + 1)
  Origs: 986:auto
  Dests: 992:auto
G(831) (0 5) 992 LET A = INT((RND(X) / 10) * 100 + .5) / 100
  Origs: 990:auto
  Dests: 993:auto
G(831) (0 4) 993 LET S4 = RND(X)
  Origs: 992:auto
  Dests: 994:auto
G(831) (1 4) 994 IF S4 <= .5 THEN 997
  Origs: 993:auto
  Dests: 995:auto, 997:ifthen
G(831) (0 4) 995 LET A = -A
  Origs: 994:auto
  Dests: 997:auto
G(831) (0 1) 997 RETURN
  Origs: 994:ifthen, 995:auto
  Dests: 
(0 2) 998 PRINT "HOPE YOU HAD FUN!!"
  Origs: 414:ifthen
  Dests: 999:auto
(0 1) 999 END
  Origs: 998:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

