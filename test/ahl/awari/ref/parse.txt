5 PRINT TAB(34);"AWARI"
 NumericValue:34
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"AWARI"
 CarriageControl:NL
7 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericValue:15
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
10 DATA 0
 NumericValue:0
15 DIM B(13),G(13),F(50):READ N
 NumericValue:13
 Declaration:B() -> .()
 NumericValue:13
 Declaration:G() -> .()
 NumericValue:50
 Declaration:F() -> .()
 Variable:N -> .
20 PRINT:PRINT:E=0
 CarriageControl:NL
 CarriageControl:NL
 Variable:E -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
25 FOR I=0 TO 12:B(I)=3:NEXT I
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:12"]
 Variable:I -> .
 Variable:B(.) -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
 Variable:I -> .
30 C=0:F(N)=0:B(13)=0:B(6)=0
 Variable:C -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 Variable:N -> .
 Variable:F(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 NumericValue:13
 Variable:B(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 NumericValue:6
 Variable:B(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
35 GOSUB 500
 LineNumber:500
40 PRINT "YOUR MOVE";:GOSUB 110
 TextValue:"YOUR MOVE"
 CarriageControl:;
 LineNumber:110
45 IF E=0 THEN 80
 Variable:E -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:80
50 IF M=H THEN GOSUB 100
 Variable:M -> .
 Variable:H -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:100
55 IF E=0 THEN 80
 Variable:E -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:80
60 PRINT "MY MOVE IS ";:GOSUB 800
 TextValue:"MY MOVE IS "
 CarriageControl:;
 LineNumber:800
65 IF E=0 THEN 80
 Variable:E -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:80
70 IF M=H THEN PRINT ",";:GOSUB 800
 Variable:M -> .
 Variable:H -> .
 BinaryOperatorEqual:=(.,.) -> ?
 TextValue:","
 CarriageControl:;
 LineNumber:800
75 IF E>0 THEN 35
 Variable:E -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:35
80 PRINT:PRINT"GAME OVER"
 CarriageControl:NL
 TextValue:"GAME OVER"
 CarriageControl:NL
85 D=B(6)-B(13):IF D<0 THEN PRINT "I WIN BY";-D;"POINTS":GOTO 20
 Variable:D -> .
 NumericValue:6
 Variable:B(.) -> .
 NumericValue:13
 Variable:B(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:D -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 TextValue:"I WIN BY"
 CarriageControl:;
 Variable:D -> .
 UnaryOperatorMinus:-(.) -> .
 CarriageControl:;
 TextValue:"POINTS"
 CarriageControl:NL
 LineNumber:20
90 N=N+1:IF D=0 THEN PRINT "DRAWN GAME":GOTO 20
 Variable:N -> .
 Variable:N -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:D -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 TextValue:"DRAWN GAME"
 CarriageControl:NL
 LineNumber:20
95 PRINT "YOU WIN BY";D;"POINTS":GOTO 20
 TextValue:"YOU WIN BY"
 CarriageControl:;
 Variable:D -> .
 CarriageControl:;
 TextValue:"POINTS"
 CarriageControl:NL
 LineNumber:20
100 PRINT "AGAIN";
 WARNING: Inconsistent GOSUB origins
 TextValue:"AGAIN"
 CarriageControl:;
110 INPUT M:IF M<7 THEN IF M>0 THEN M=M-1:GOTO 130
 WARNING: Inconsistent GOSUB origins
 Variable:M -> .
 Variable:M -> .
 NumericValue:7
 BinaryOperatorLess:<(.,.) -> ?
 Variable:M -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:M -> .
 Variable:M -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 LineNumber:130
120 PRINT "ILLEGAL MOVE":GOTO 100
 WARNING: Branch to line before GOSUB start
 TextValue:"ILLEGAL MOVE"
 CarriageControl:NL
 LineNumber:100
130 IF B(M)=0 THEN 120
 Variable:M -> .
 Variable:B(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:120
140 H=6:GOSUB 200
 Variable:H -> .
 NumericValue:6
 AssignmentOperator:= =. -> .
 LineNumber:200
150 GOTO 500
 LineNumber:500
200 K=M:GOSUB 600
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
 Variable:M -> .
 AssignmentOperator:= . -> .
 LineNumber:600
205 E=0:IF K>6 THEN K=K-7
 WARNING: Multiple GOSUB entry points
 Variable:E -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 Variable:K -> .
 NumericValue:6
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:K -> .
 Variable:K -> .
 NumericValue:7
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
210 C=C+1:IF C<9 THEN F(N)=F(N)*6+K
 WARNING: Multiple GOSUB entry points
 Variable:C -> .
 Variable:C -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:C -> .
 NumericValue:9
 BinaryOperatorLess:<(.,.) -> ?
 Variable:N -> .
 Variable:F(.) -> .
 Variable:N -> .
 Variable:F(.) -> .
 NumericValue:6
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:K -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
215 FOR I=0 TO 5:IF B(I)<>0 THEN 230
 WARNING: Multiple GOSUB entry points
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:5"]
 Variable:I -> .
 Variable:B(.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:230
220 NEXT I
 WARNING: Multiple GOSUB entry points
 Variable:I -> .
225 RETURN
 WARNING: Multiple GOSUB entry points
 
230 FOR I=7 TO 12:IF B(I)<>0 THEN E=1:RETURN
 WARNING: Multiple GOSUB entry points
 control: Variable:I -> .
 start:   ["NumericValue:7"]
 end:     ["NumericValue:12"]
 Variable:I -> .
 Variable:B(.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 Variable:E -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
 
235 GOTO 220
 WARNING: Multiple GOSUB entry points
 LineNumber:220
500 PRINT:PRINT"   ";
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 CarriageControl:NL
 TextValue:"   "
 CarriageControl:;
505 FOR I=12 TO 7 STEP -1:GOSUB 580
 WARNING: Multiple GOSUB entry points
 control: Variable:I -> .
 start:   ["NumericValue:12"]
 end:     ["NumericValue:7"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
 LineNumber:580
510 NEXT I
 WARNING: Multiple GOSUB entry points
 Variable:I -> .
515 PRINT:I=13:GOSUB 580
 WARNING: Multiple GOSUB entry points
 CarriageControl:NL
 Variable:I -> .
 NumericValue:13
 AssignmentOperator:= =. -> .
 LineNumber:580
520 PRINT "                       ";:PRINT B(6):PRINT "   ";
 WARNING: Multiple GOSUB entry points
 TextValue:"                       "
 CarriageControl:;
 NumericValue:6
 Variable:B(.) -> .
 CarriageControl:NL
 TextValue:"   "
 CarriageControl:;
525 FOR I=0 TO 5:GOSUB 580
 WARNING: Multiple GOSUB entry points
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:5"]
 LineNumber:580
530 NEXT I
 WARNING: Multiple GOSUB entry points
 Variable:I -> .
535 PRINT:PRINT:RETURN
 WARNING: Multiple GOSUB entry points
 CarriageControl:NL
 CarriageControl:NL
 
580 IF B(I)<10 THEN PRINT " ";
 Variable:I -> .
 Variable:B(.) -> .
 NumericValue:10
 BinaryOperatorLess:<(.,.) -> ?
 TextValue:" "
 CarriageControl:;
585 PRINT B(I);:RETURN
 Variable:I -> .
 Variable:B(.) -> .
 CarriageControl:;
 
600 P=B(M):B(M)=0
 Variable:P -> .
 Variable:M -> .
 Variable:B(.) -> .
 AssignmentOperator:= . -> .
 Variable:M -> .
 Variable:B(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
605 FOR P=P TO 1 STEP -1:M=M+1:IF M>13 THEN M=M-14
 control: Variable:P -> .
 start:   ["Variable:P -> ."]
 end:     ["NumericValue:1"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
 Variable:M -> .
 Variable:M -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:M -> .
 NumericValue:13
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:M -> .
 Variable:M -> .
 NumericValue:14
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
610 B(M)=B(M)+1:NEXT P
 Variable:M -> .
 Variable:B(.) -> .
 Variable:M -> .
 Variable:B(.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:P -> .
615 IF B(M)=1 THEN IF M<>6 THEN IF M<>13 THEN IF B(12-M)<>0 THEN 625
 Variable:M -> .
 Variable:B(.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:M -> .
 NumericValue:6
 BinaryOperatorNotEqual:<>(.,.) -> ?
 Variable:M -> .
 NumericValue:13
 BinaryOperatorNotEqual:<>(.,.) -> ?
 NumericValue:12
 Variable:M -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:B(.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:625
620 RETURN
 
625 B(H)=B(H)+B(12-M)+1:B(M)=0:B(12-M)=0:RETURN
 Variable:H -> .
 Variable:B(.) -> .
 Variable:H -> .
 Variable:B(.) -> .
 NumericValue:12
 Variable:M -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:B(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:M -> .
 Variable:B(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 NumericValue:12
 Variable:M -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:B(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 
800 D=-99:H=13
 WARNING: GOSUB length exceeds limit 40
 Variable:D -> .
 NumericValue:99
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
 Variable:H -> .
 NumericValue:13
 AssignmentOperator:= =. -> .
805 FOR I=0 TO 13:G(I)=B(I):NEXT I
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:13"]
 Variable:I -> .
 Variable:G(.) -> .
 Variable:I -> .
 Variable:B(.) -> .
 AssignmentOperator:= . -> .
 Variable:I -> .
810 FOR J=7 TO 12:IF B(J)=0 THEN 885
 control: Variable:J -> .
 start:   ["NumericValue:7"]
 end:     ["NumericValue:12"]
 Variable:J -> .
 Variable:B(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:885
815 G=0:M=J:GOSUB 600
 Variable:G -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 Variable:M -> .
 Variable:J -> .
 AssignmentOperator:= . -> .
 LineNumber:600
820 FOR I=0 TO 5:IF B(I)=0 THEN 845
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:5"]
 Variable:I -> .
 Variable:B(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:845
825 L=B(I)+I:R=0
 Variable:L -> .
 Variable:I -> .
 Variable:B(.) -> .
 Variable:I -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:R -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
830 IF L>13 THEN L=L-14:R=1:GOTO 830
 Variable:L -> .
 NumericValue:13
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 Variable:L -> .
 NumericValue:14
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:R -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
 LineNumber:830
835 IF B(L)=0 THEN IF L<>6 THEN IF L<>13 THEN R=B(12-L)+R
 Variable:L -> .
 Variable:B(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:L -> .
 NumericValue:6
 BinaryOperatorNotEqual:<>(.,.) -> ?
 Variable:L -> .
 NumericValue:13
 BinaryOperatorNotEqual:<>(.,.) -> ?
 Variable:R -> .
 NumericValue:12
 Variable:L -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:B(.) -> .
 Variable:R -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
840 IF R>Q THEN Q=R
 Variable:R -> .
 Variable:Q -> .
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:Q -> .
 Variable:R -> .
 AssignmentOperator:= . -> .
845 NEXT I
 Variable:I -> .
850 Q=B(13)-B(6)-Q:IF C>8 THEN 875
 Variable:Q -> .
 NumericValue:13
 Variable:B(.) -> .
 NumericValue:6
 Variable:B(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:Q -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:C -> .
 NumericValue:8
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:875
855 K=J:IF K>6 THEN K=K-7
 Variable:K -> .
 Variable:J -> .
 AssignmentOperator:= . -> .
 Variable:K -> .
 NumericValue:6
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:K -> .
 Variable:K -> .
 NumericValue:7
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
860 FOR I=0 TO N-1:IF F(N)*6+K=INT(F(I)/6^(7-C)+.1) THEN Q=Q-2
 WARNING: Line exceeds PRETTY width limit 80
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:N -> .", "NumericValue:1", "BinaryOperatorMinus:-(.,.) -> ."]
 Variable:N -> .
 Variable:F(.) -> .
 NumericValue:6
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:K -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:I -> .
 Variable:F(.) -> .
 NumericValue:6
 NumericValue:7
 Variable:C -> .
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 NumericValue:.1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:Q -> .
 Variable:Q -> .
 NumericValue:2
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
870 NEXT I
 Variable:I -> .
875 FOR I=0 TO 13:B(I)=G(I):NEXT I
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:13"]
 Variable:I -> .
 Variable:B(.) -> .
 Variable:I -> .
 Variable:G(.) -> .
 AssignmentOperator:= . -> .
 Variable:I -> .
880 IF Q>=D THEN A=J:D=Q
 Variable:Q -> .
 Variable:D -> .
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 Variable:A -> .
 Variable:J -> .
 AssignmentOperator:= . -> .
 Variable:D -> .
 Variable:Q -> .
 AssignmentOperator:= . -> .
885 NEXT J
 Variable:J -> .
890 M=A:PRINT CHR$(42+M);:GOTO 200
 WARNING: Branch to line before GOSUB start
 Variable:M -> .
 Variable:A -> .
 AssignmentOperator:= . -> .
 NumericValue:42
 Variable:M -> .
 BinaryOperatorPlus:+(.,.) -> .
 FunctionChr:CHR$(.) -> $
 CarriageControl:;
 LineNumber:200
900 FOR I=0 TO N-1:PRINT B(I):NEXT I
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:N -> .", "NumericValue:1", "BinaryOperatorMinus:-(.,.) -> ."]
 Variable:I -> .
 Variable:B(.) -> .
 CarriageControl:NL
 Variable:I -> .
999 END
 

