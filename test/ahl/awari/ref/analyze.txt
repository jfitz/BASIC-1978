Statistics:

Number of lines: 70
Number of valid statements: 134
Number of comments: 0
Number of executable statements: 133

Complexity:

Comment density: 0.000
Comprehension effort: 443
McCabe complexity: 47
Halstead complexity:
 length: 599
 volume: 2826.381
 difficulty: 45.545
 effort: 128728.799
 language: 1.363
 intelligence: 62.056
 time: 119.193

5 (0 4) PRINT TAB(34); "AWARI"
  Origs: :start
  Dests: 7:auto
7 (0 4) PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 5:auto
  Dests: 15:auto
10 (0 2) DATA 0
  Origs: 
  Dests: 
15 (0 4) DIM B(13), G(13), F(50)
   (1 2) READ N
  Origs: 7:auto
  Dests: 20:auto
20 (0 2) PRINT
   (0 2) PRINT
   (0 3) E = 0
  Origs: 15:auto, 85:goto, 90:goto, 95:goto
  Dests: 25:auto
25 F(I:25) (1 3) FOR I = 0 TO 12
   F(I:25) (0 3) B(I) = 3
   F(I:25) (0 1) NEXT I
  Origs: 20:auto
  Dests: 30:auto
30 (0 3) C = 0
   (0 3) F(N) = 0
   (0 3) B(13) = 0
   (0 3) B(6) = 0
  Origs: 25:auto
  Dests: 35:auto
35 (0 2) GOSUB 500
  Origs: 30:auto, 75:ifthen
  Dests: 40:auto, 500:gosub
40 (0 2) PRINT "YOUR MOVE";
   (0 2) GOSUB 110
  Origs: 35:auto
  Dests: 45:auto, 110:gosub
45 (1 4) IF E = 0 THEN 80
  Origs: 40:auto
  Dests: 50:auto, 80:ifthen
50 (1 5) IF M = H THEN GOSUB 100
  Origs: 45:auto
  Dests: 55:auto, 100:gosub
55 (1 4) IF E = 0 THEN 80
  Origs: 50:auto
  Dests: 60:auto, 80:ifthen
60 (0 2) PRINT "MY MOVE IS ";
   (0 2) GOSUB 800
  Origs: 55:auto
  Dests: 65:auto, 800:gosub
65 (1 4) IF E = 0 THEN 80
  Origs: 60:auto
  Dests: 70:auto, 80:ifthen
70 (1 5) IF M = H THEN PRINT ",";
   (0 2) GOSUB 800
  Origs: 65:auto
  Dests: 75:auto, 800:gosub
75 (1 5) IF E > 0 THEN 35
  Origs: 70:auto
  Dests: 35:ifthen, 80:auto
80 (0 2) PRINT
   (0 2) PRINT "GAME OVER"
  Origs: 45:ifthen, 55:ifthen, 65:ifthen, 75:auto
  Dests: 85:auto
85 (0 4) D = B(6) - B(13)
   (1 8) IF D < 0 THEN PRINT "I WIN BY"; -D; "POINTS"
   (0 3) GOTO 20
  Origs: 80:auto
  Dests: 20:goto, 90:auto
90 (0 4) N = N + 1
   (1 5) IF D = 0 THEN PRINT "DRAWN GAME"
   (0 3) GOTO 20
  Origs: 85:auto
  Dests: 20:goto, 95:auto
95 (0 4) PRINT "YOU WIN BY"; D; "POINTS"
   (0 3) GOTO 20
  Origs: 90:auto
  Dests: 20:goto
100 G(110) (0 2) PRINT "AGAIN";
    WARNING: Inconsistent GOSUB origins
  Origs: 50:gosub, 120:goto
  Dests: 110:auto
110 G(110) (1 2) INPUT M
    G(110) (2 10) IF M < 7 THEN IF M > 0 THEN M = M - 1
    G(110) (0 2) GOTO 130
    WARNING: Inconsistent GOSUB origins
  Origs: 40:gosub, 100:auto
  Dests: 120:auto, 130:goto
120 G(110) (0 2) PRINT "ILLEGAL MOVE"
    G(110) (0 3) GOTO 100
    WARNING: Branch to line before GOSUB start
  Origs: 110:auto, 130:ifthen
  Dests: 100:goto
130 G(110) (1 5) IF B(M) = 0 THEN 120
  Origs: 110:goto
  Dests: 120:ifthen, 140:auto
140 G(110) (0 3) H = 6
    G(110) (0 2) GOSUB 200
  Origs: 130:auto
  Dests: 150:auto, 200:gosub
150 G(110) (0 2) GOTO 500
    WARNING: Transfer in/out of FOR/NEXT 500
  Origs: 140:auto
  Dests: 500:goto
200 G(800,200) (0 3) K = M
    G(800,200) (0 2) GOSUB 600
    WARNING: Inconsistent GOSUB origins
    WARNING: Multiple GOSUB entry points
  Origs: 140:gosub, 890:goto
  Dests: 205:auto, 600:gosub
205 G(800,200) (0 3) E = 0
    G(800,200) (1 7) IF K > 6 THEN K = K - 7
    WARNING: Multiple GOSUB entry points
  Origs: 200:auto
  Dests: 210:auto
210 G(800,200) (0 4) C = C + 1
    G(800,200) (1 8) IF C < 9 THEN F(N) = F(N) * 6 + K
    WARNING: Multiple GOSUB entry points
  Origs: 205:auto
  Dests: 215:auto
215 G(800,200) F(I:215) (1 3) FOR I = 0 TO 5
    G(800,200) F(I:215) (1 4) IF B(I) <> 0 THEN 230
    WARNING: Multiple GOSUB entry points
    WARNING: Transfer in/out of FOR/NEXT 230
  Origs: 210:auto
  Dests: 220:auto, 220:fornext, 230:ifthen
220 G(800,200) F(I:215) (0 1) NEXT I
    WARNING: Multiple GOSUB entry points
  Origs: 215:auto, 215:fornext, 235:goto
  Dests: 225:auto
225 G(800,200) (0 1) RETURN
    WARNING: Multiple GOSUB entry points
  Origs: 220:auto
  Dests: 
230 G(800,200) F(I:230) (1 3) FOR I = 7 TO 12
    G(800,200) F(I:230) (1 6) IF B(I) <> 0 THEN E = 1
    G(800,200) F(I:230) (0 1) RETURN
    WARNING: Multiple GOSUB entry points
  Origs: 215:ifthen
  Dests: 235:auto, 510:fornext
235 G(800,200) F(I:230) (0 3) GOTO 220
    WARNING: Multiple GOSUB entry points
    WARNING: Transfer in/out of FOR/NEXT 220
  Origs: 230:auto
  Dests: 220:goto
500 G(500,110) F(I:230) (0 2) PRINT
    G(500,110) F(I:230) (0 2) PRINT "   ";
    WARNING: Inconsistent GOSUB origins
    WARNING: Multiple GOSUB entry points
  Origs: 35:gosub, 150:goto
  Dests: 505:auto
505 G(500,110) F(I:230,I:505) (1 5) FOR I = 12 TO 7 STEP -1
    G(500,110) F(I:230,I:505) (0 2) GOSUB 580
    WARNING: Multiple GOSUB entry points
  Origs: 500:auto
  Dests: 510:auto, 510:fornext, 580:gosub
510 G(500,110,800,200) F(I:230,I:505) (0 1) NEXT I
    WARNING: Multiple GOSUB entry points
  Origs: 230:fornext, 505:auto, 505:fornext
  Dests: 515:auto
515 G(500,110,800,200) (0 2) PRINT
    G(500,110,800,200) (0 3) I = 13
    G(500,110,800,200) (0 2) GOSUB 580
    WARNING: Multiple GOSUB entry points
  Origs: 510:auto
  Dests: 520:auto, 580:gosub
520 G(500,110,800,200) (0 2) PRINT "                       ";
    G(500,110,800,200) (0 2) PRINT B(6)
    G(500,110,800,200) (0 2) PRINT "   ";
    WARNING: Multiple GOSUB entry points
  Origs: 515:auto
  Dests: 525:auto
525 G(500,110,800,200) F(I:525) (1 3) FOR I = 0 TO 5
    G(500,110,800,200) F(I:525) (0 2) GOSUB 580
    WARNING: Multiple GOSUB entry points
  Origs: 520:auto
  Dests: 530:auto, 530:fornext, 580:gosub
530 G(500,110,800,200) F(I:525) (0 1) NEXT I
    WARNING: Multiple GOSUB entry points
  Origs: 525:auto, 525:fornext
  Dests: 535:auto
535 G(500,110,800,200) (0 2) PRINT
    G(500,110,800,200) (0 2) PRINT
    G(500,110,800,200) (0 1) RETURN
    WARNING: Multiple GOSUB entry points
  Origs: 530:auto
  Dests: 
580 G(580) (1 5) IF B(I) < 10 THEN PRINT " ";
  Origs: 505:gosub, 515:gosub, 525:gosub
  Dests: 585:auto
585 G(580) (0 2) PRINT B(I);
    G(580) (0 1) RETURN
  Origs: 580:auto
  Dests: 
600 G(600) (0 3) P = B(M)
    G(600) (0 3) B(M) = 0
  Origs: 200:gosub, 815:gosub
  Dests: 605:auto
605 G(600) F(P:605) (1 5) FOR P = P TO 1 STEP -1
    G(600) F(P:605) (0 4) M = M + 1
    G(600) F(P:605) (1 7) IF M > 13 THEN M = M - 14
  Origs: 600:auto
  Dests: 610:auto, 610:fornext
610 G(600) F(P:605) (0 4) B(M) = B(M) + 1
    G(600) F(P:605) (0 1) NEXT P
  Origs: 605:auto, 605:fornext
  Dests: 615:auto
615 G(600) (4 13) IF B(M) = 1 THEN IF M <> 6 THEN IF M <> 13 THEN IF B(12 - M) <> 0 THEN 625
  Origs: 610:auto
  Dests: 620:auto, 625:ifthen
620 G(600) (0 1) RETURN
  Origs: 615:auto
  Dests: 
625 G(600) (0 5) B(H) = B(H) + B(12 - M) + 1
    G(600) (0 3) B(M) = 0
    G(600) (0 3) B(12 - M) = 0
    G(600) (0 1) RETURN
  Origs: 615:ifthen
  Dests: 
800 G(800) (0 4) D = -99
    G(800) (0 3) H = 13
    WARNING: GOSUB length exceeds limit 40
  Origs: 60:gosub, 70:gosub
  Dests: 805:auto
805 G(800) F(I:805) (1 3) FOR I = 0 TO 13
    G(800) F(I:805) (0 3) G(I) = B(I)
    G(800) F(I:805) (0 1) NEXT I
  Origs: 800:auto
  Dests: 810:auto
810 G(800) F(J:810) (1 3) FOR J = 7 TO 12
    G(800) F(J:810) (1 4) IF B(J) = 0 THEN 885
  Origs: 805:auto
  Dests: 815:auto, 885:fornext, 885:ifthen
815 G(800) F(J:810) (0 3) G = 0
    G(800) F(J:810) (0 3) M = J
    G(800) F(J:810) (0 3) GOSUB 600
  Origs: 810:auto
  Dests: 600:gosub, 820:auto
820 G(800) F(J:810,I:820) (1 3) FOR I = 0 TO 5
    G(800) F(J:810,I:820) (1 4) IF B(I) = 0 THEN 845
  Origs: 815:auto
  Dests: 825:auto, 845:fornext, 845:ifthen
825 G(800) F(J:810,I:820) (0 4) L = B(I) + I
    G(800) F(J:810,I:820) (0 3) R = 0
  Origs: 820:auto
  Dests: 830:auto
830 G(800) F(J:810,I:820) (1 7) IF L > 13 THEN L = L - 14
    G(800) F(J:810,I:820) (0 3) R = 1
    G(800) F(J:810,I:820) (0 3) GOTO 830
  Origs: 825:auto
  Dests: 835:auto
835 G(800) F(J:810,I:820) (3 13) IF B(L) = 0 THEN IF L <> 6 THEN IF L <> 13 THEN R = B(12 - L) + R
  Origs: 830:auto
  Dests: 840:auto
840 G(800) F(J:810,I:820) (1 6) IF R > Q THEN Q = R
  Origs: 835:auto
  Dests: 845:auto
845 G(800) F(J:810,I:820) (0 1) NEXT I
  Origs: 820:fornext, 820:ifthen, 840:auto
  Dests: 850:auto
850 G(800) F(J:810) (0 5) Q = B(13) - B(6) - Q
    G(800) F(J:810) (1 4) IF C > 8 THEN 875
  Origs: 845:auto
  Dests: 855:auto, 875:ifthen
855 G(800) F(J:810) (0 3) K = J
    G(800) F(J:810) (1 7) IF K > 6 THEN K = K - 7
  Origs: 850:auto
  Dests: 860:auto
860 G(800) F(J:810,I:860) (1 4) FOR I = 0 TO N - 1
    G(800) F(J:810,I:860) (1 10) IF F(N) * 6 + K = INT(F(I) / 6 ^ (7 - C) + 0.1) THEN Q = Q - 2
  Origs: 855:auto
  Dests: 870:auto, 870:fornext
870 G(800) F(J:810,I:860) (0 1) NEXT I
  Origs: 860:auto, 860:fornext
  Dests: 875:auto
875 G(800) F(J:810,I:875) (1 3) FOR I = 0 TO 13
    G(800) F(J:810,I:875) (0 3) B(I) = G(I)
    G(800) F(J:810,I:875) (0 1) NEXT I
  Origs: 850:ifthen, 870:auto
  Dests: 880:auto
880 G(800) F(J:810) (1 6) IF Q >= D THEN A = J
    G(800) F(J:810) (0 3) D = Q
  Origs: 875:auto
  Dests: 885:auto
885 G(800) F(J:810) (0 1) NEXT J
  Origs: 810:fornext, 810:ifthen, 880:auto
  Dests: 890:auto
890 G(800) (0 3) M = A
    G(800) (0 3) PRINT CHR$(42 + M);
    G(800) (0 3) GOTO 200
    WARNING: Branch to line before GOSUB start
  Origs: 885:auto
  Dests: 200:goto
900 F(I:900) (1 4) FOR I = 0 TO N - 1
    F(I:900) (0 2) PRINT B(I)
    F(I:900) (0 1) NEXT I
  Origs: 
  Dests: 999:auto
999 (0 1) END
  Origs: 900:auto
  Dests: :stop

Unreachable code:

900: FOR I = 0 TO N - 1
900.1: PRINT B(I)
900.2: NEXT I
999: END

No path from start to STOP, END, or CHAIN.

