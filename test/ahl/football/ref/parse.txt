1 PRINT TAB(32);"FOOTBALL"
 NumericValue:32
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"FOOTBALL"
 CarriageControl:NL
2 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericValue:15
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
3 PRINT:PRINT:PRINT
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
100 REM
 Remark:
120 DIM A(20),B(20),C(40),H(2),T(2),W(2),X(2),Y(2),Z(2)
 NumericValue:20
 Declaration:A() -> _()
 NumericValue:20
 Declaration:B() -> _()
 NumericValue:40
 Declaration:C() -> _()
 NumericValue:2
 Declaration:H() -> _()
 NumericValue:2
 Declaration:T() -> _()
 NumericValue:2
 Declaration:W() -> _()
 NumericValue:2
 Declaration:X() -> _()
 NumericValue:2
 Declaration:Y() -> _()
 NumericValue:2
 Declaration:Z() -> _()
130 DIM M$(2),D(2),P$(20)
 NumericValue:2
 Declaration:M$() -> $()
 NumericValue:2
 Declaration:D() -> _()
 NumericValue:20
 Declaration:P$() -> $()
140 PRINT "PRESENTING N.F.U. FOOTBALL (NO FORTRAN USED)"
 TextValue:"PRESENTING N.F.U. FOOTBALL (NO FORTRAN USED)"
 CarriageControl:NL
145 PRINT:PRINT
 CarriageControl:NL
 CarriageControl:NL
150 INPUT "DO YOU WANT INSTRUCTIONS";A$
 Variable:A$ -> $
160 IF A$="NO" THEN 290
 Variable:A$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:290
165 IF A$<>"YES" THEN 150
 Variable:A$ -> $
 TextValue:"YES"
 BinaryOperatorNotEqual:<>($,$) -> ?
 LineNumber:150
170 PRINT "THIS IS A FOOTBALL GAME FOR TWO TEAMS IN WHICH PLAYERS MUST"
 TextValue:"THIS IS A FOOTBALL GAME FOR TWO TEAMS IN WHICH PLAYERS MUST"
 CarriageControl:NL
180 PRINT "PREPARE A TAPE WITH A DATA STATEMENT (1770 FOR TEAM 1,"
 TextValue:"PREPARE A TAPE WITH A DATA STATEMENT (1770 FOR TEAM 1,"
 CarriageControl:NL
190 PRINT "1780 FOR TEAM 2) IN WHICH EACH TEAM SCRAMBLES NOS. 1-20"
 TextValue:"1780 FOR TEAM 2) IN WHICH EACH TEAM SCRAMBLES NOS. 1-20"
 CarriageControl:NL
195 PRINT "THESE NUMBERS ARE THEN ASSIGNED TO TWENTY GIVEN PLAYS."
 TextValue:"THESE NUMBERS ARE THEN ASSIGNED TO TWENTY GIVEN PLAYS."
 CarriageControl:NL
200 PRINT"A LIST OF NOS. AND THEIR PLAYS IS PROVIDED WITH"
 TextValue:"A LIST OF NOS. AND THEIR PLAYS IS PROVIDED WITH"
 CarriageControl:NL
210 PRINT "BOTH TEAMS HAVING THE SAME PLAYS. THE MORE SIMILAR THE"
 TextValue:"BOTH TEAMS HAVING THE SAME PLAYS. THE MORE SIMILAR THE"
 CarriageControl:NL
220 PRINT "PLAYS THE LESS YARDAGE GAINED.  SCORES ARE GIVEN"
 TextValue:"PLAYS THE LESS YARDAGE GAINED.  SCORES ARE GIVEN"
 CarriageControl:NL
223 PRINT "WHENEVER SCORES ARE MADE. SCORES MAY ALSO BE OBTAINED"
 TextValue:"WHENEVER SCORES ARE MADE. SCORES MAY ALSO BE OBTAINED"
 CarriageControl:NL
225 PRINT "BY INPUTTING 99,99 FOR PLAY NOS. TO PUNT OR ATTEMPT A"
 TextValue:"BY INPUTTING 99,99 FOR PLAY NOS. TO PUNT OR ATTEMPT A"
 CarriageControl:NL
227 PRINT "FIELD GOAL, INPUT 77,77 FOR PLAY NUMBERS. QUESTIONS WILL BE"
 TextValue:"FIELD GOAL, INPUT 77,77 FOR PLAY NUMBERS. QUESTIONS WILL BE"
 CarriageControl:NL
230 PRINT "ASKED THEN. ON 4TH DOWN, YOU WILL ALSO BE ASKED WHETHER"
 TextValue:"ASKED THEN. ON 4TH DOWN, YOU WILL ALSO BE ASKED WHETHER"
 CarriageControl:NL
240 PRINT "YOU WANT TO PUNT OR ATTEMPT A FIELD GOAL. IF THE ANSWER TO"
 TextValue:"YOU WANT TO PUNT OR ATTEMPT A FIELD GOAL. IF THE ANSWER TO"
 CarriageControl:NL
250 PRINT "BOTH QUESTIONS IS NO IT WILL BE ASSUMED YOU WANT TO"
 TextValue:"BOTH QUESTIONS IS NO IT WILL BE ASSUMED YOU WANT TO"
 CarriageControl:NL
260 PRINT "TRY AND GAIN YARDAGE. ANSWER ALL QUESTIONS YES OR NO."
 TextValue:"TRY AND GAIN YARDAGE. ANSWER ALL QUESTIONS YES OR NO."
 CarriageControl:NL
270 PRINT "THE GAME IS PLAYED UNTIL PLAYERS TERMINATE (CONTROL-C)."
 TextValue:"THE GAME IS PLAYED UNTIL PLAYERS TERMINATE (CONTROL-C)."
 CarriageControl:NL
280 PRINT "PLEASE PREPARE A TAPE AND RUN.": STOP
 TextValue:"PLEASE PREPARE A TAPE AND RUN."
 CarriageControl:NL
 
290 PRINT:PRINT "PLEASE INPUT SCORE LIMIT ON GAME";:INPUT E
 CarriageControl:NL
 TextValue:"PLEASE INPUT SCORE LIMIT ON GAME"
 CarriageControl:;
 Variable:E -> _
300 FOR I=1 TO 40: READ N: IF I>20 THEN 350
 control: Variable:I -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:40"]
 Variable:N -> _
 Variable:I -> _
 NumericValue:20
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:350
330 A(N)=I: GOTO 360
 Variable:N -> _
 Variable:A(_) -> _
 Variable:I -> _
 AssignmentOperator:= _ -> _
 LineNumber:360
350 B(N)=I-20
 Variable:N -> _
 Variable:B(_) -> _
 Variable:I -> _
 NumericValue:20
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
360 C(I)=N: NEXT I
 Variable:I -> _
 Variable:C(_) -> _
 Variable:N -> _
 AssignmentOperator:= _ -> _
 Variable:I -> _
370 FOR I=1 TO 20: READ P$(I): NEXT I
 control: Variable:I -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:20"]
 Variable:I -> _
 Variable:P$(_) -> $
 Variable:I -> _
380 L=0: T=1
 Variable:L -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 Variable:T -> _
 NumericValue:1
 AssignmentOperator:= =_ -> _
410 PRINT "TEAM";T;"PLAY CHART"
 TextValue:"TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"PLAY CHART"
 CarriageControl:NL
420 PRINT "NO.      PLAY"
 TextValue:"NO.      PLAY"
 CarriageControl:NL
430 FOR I=1 TO 20
 control: Variable:I -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:20"]
440 REM
 Remark:
450 PRINT C(I+L);TAB(6);P$(I)
 Variable:I -> _
 Variable:L -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:C(_) -> _
 CarriageControl:;
 NumericValue:6
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 Variable:I -> _
 Variable:P$(_) -> $
 CarriageControl:NL
460 NEXT I
 Variable:I -> _
630 L=L+20:T=2
 Variable:L -> _
 Variable:L -> _
 NumericValue:20
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
 Variable:T -> _
 NumericValue:2
 AssignmentOperator:= =_ -> _
640 PRINT
 CarriageControl:NL
650 PRINT "TEAR OFF HERE----------------------------------------------"
 TextValue:"TEAR OFF HERE----------------------------------------------"
 CarriageControl:NL
660 FOR X=1 TO 11: PRINT: NEXT X
 control: Variable:X -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:11"]
 CarriageControl:NL
 Variable:X -> _
670 FOR Z=1 TO 3000: NEXT Z
 control: Variable:Z -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3000"]
 Variable:Z -> _
680 IF L=20 THEN 410
 Variable:L -> _
 NumericValue:20
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:410
690 D(1)=0: D(2)=3: M$(1)="--->": M$(2)="<---"
 NumericValue:1
 Variable:D(_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 NumericValue:2
 Variable:D(_) -> _
 NumericValue:3
 AssignmentOperator:= =_ -> _
 NumericValue:1
 Variable:M$(_) -> $
 TextValue:"--->"
 AssignmentOperator:= =$ -> $
 NumericValue:2
 Variable:M$(_) -> $
 TextValue:"<---"
 AssignmentOperator:= =$ -> $
700 H(1)=0: H(2)=0: T(1)=2: T(2)=1
 NumericValue:1
 Variable:H(_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 NumericValue:2
 Variable:H(_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 NumericValue:1
 Variable:T(_) -> _
 NumericValue:2
 AssignmentOperator:= =_ -> _
 NumericValue:2
 Variable:T(_) -> _
 NumericValue:1
 AssignmentOperator:= =_ -> _
710 W(1)=-1: W(2)=1: X(1)=100: X(2)=0
 NumericValue:1
 Variable:W(_) -> _
 NumericValue:1
 UnaryOperatorMinus:-(_) -> =_
 AssignmentOperator:= =_ -> _
 NumericValue:2
 Variable:W(_) -> _
 NumericValue:1
 AssignmentOperator:= =_ -> _
 NumericValue:1
 Variable:X(_) -> _
 NumericValue:100
 AssignmentOperator:= =_ -> _
 NumericValue:2
 Variable:X(_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
720 Y(1)=1: Y(2)=-1: Z(1)=0: Z(2)=100
 NumericValue:1
 Variable:Y(_) -> _
 NumericValue:1
 AssignmentOperator:= =_ -> _
 NumericValue:2
 Variable:Y(_) -> _
 NumericValue:1
 UnaryOperatorMinus:-(_) -> =_
 AssignmentOperator:= =_ -> _
 NumericValue:1
 Variable:Z(_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 NumericValue:2
 Variable:Z(_) -> _
 NumericValue:100
 AssignmentOperator:= =_ -> _
725 GOSUB 1910
 LineNumber:1910
730 PRINT "TEAM 1 DEFENDS 0 YD GOAL -- TEAM 2 DEFENDS 100 YD GOAL."
 TextValue:"TEAM 1 DEFENDS 0 YD GOAL -- TEAM 2 DEFENDS 100 YD GOAL."
 CarriageControl:NL
740 T=INT(2*RND(1)+1)
 Variable:T -> _
 NumericValue:2
 NumericValue:1
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
760 PRINT: PRINT "THE COIN IS FLIPPED"
 CarriageControl:NL
 TextValue:"THE COIN IS FLIPPED"
 CarriageControl:NL
765 P=X(T)-Y(T)*40
 Variable:P -> _
 Variable:T -> _
 Variable:X(_) -> _
 Variable:T -> _
 Variable:Y(_) -> _
 NumericValue:40
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
770 GOSUB 1860: PRINT : PRINT "TEAM";T;"RECEIVES KICK-OFF"
 LineNumber:1860
 CarriageControl:NL
 TextValue:"TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"RECEIVES KICK-OFF"
 CarriageControl:NL
780 K=INT(26*RND(1)+40)
 Variable:K -> _
 NumericValue:26
 NumericValue:1
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericValue:40
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
790 P=P-Y(T)*K
 Variable:P -> _
 Variable:P -> _
 Variable:T -> _
 Variable:Y(_) -> _
 Variable:K -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
794 IF W(T)*P<Z(T)+10 THEN 810
 Variable:T -> _
 Variable:W(_) -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T -> _
 Variable:Z(_) -> _
 NumericValue:10
 BinaryOperatorPlus:+(_,_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:810
795 PRINT: PRINT "BALL WENT OUT OF ENDZONE --AUTOMATIC TOUCHBACK--"
 CarriageControl:NL
 TextValue:"BALL WENT OUT OF ENDZONE --AUTOMATIC TOUCHBACK--"
 CarriageControl:NL
796 GOTO 870 
 LineNumber:870
810 PRINT "BALL WENT";K;"YARDS.  NOW ON";P:GOSUB 1900
 TextValue:"BALL WENT"
 CarriageControl:;
 Variable:K -> _
 CarriageControl:;
 TextValue:"YARDS.  NOW ON"
 CarriageControl:;
 Variable:P -> _
 CarriageControl:NL
 LineNumber:1900
830 PRINT "TEAM";T;"DO YOU WANT TO RUNBACK";:INPUT A$
 TextValue:"TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"DO YOU WANT TO RUNBACK"
 CarriageControl:;
 Variable:A$ -> $
840 IF A$="YES" THEN 1430
 Variable:A$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1430
845 IF A$<>"NO" THEN 830
 WARNING: Branch to line before GOSUB start
 Variable:A$ -> $
 TextValue:"NO"
 BinaryOperatorNotEqual:<>($,$) -> ?
 LineNumber:830
850 IF W(T)*P<Z(T) THEN 880
 Variable:T -> _
 Variable:W(_) -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T -> _
 Variable:Z(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:880
870 P=Z(T)-W(T)*20
 Variable:P -> _
 Variable:T -> _
 Variable:Z(_) -> _
 Variable:T -> _
 Variable:W(_) -> _
 NumericValue:20
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
880 D=1: S=P
 Variable:D -> _
 NumericValue:1
 AssignmentOperator:= =_ -> _
 Variable:S -> _
 Variable:P -> _
 AssignmentOperator:= _ -> _
885 FOR I=1 TO 72: PRINT "=";: NEXT I
 control: Variable:I -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:72"]
 TextValue:"="
 CarriageControl:;
 Variable:I -> _
890 PRINT: PRINT "TEAM";T;"DOWN";D;"ON";P
 CarriageControl:NL
 TextValue:"TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"DOWN"
 CarriageControl:;
 Variable:D -> _
 CarriageControl:;
 TextValue:"ON"
 CarriageControl:;
 Variable:P -> _
 CarriageControl:NL
893 IF D<>1 THEN 900
 Variable:D -> _
 NumericValue:1
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:900
895 IF Y(T)*(P+Y(T)*10)>=X(T) THEN 898
 Variable:T -> _
 Variable:Y(_) -> _
 Variable:P -> _
 Variable:T -> _
 Variable:Y(_) -> _
 NumericValue:10
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T -> _
 Variable:X(_) -> _
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 LineNumber:898
897 C=4: GOTO 900
 Variable:C -> _
 NumericValue:4
 AssignmentOperator:= =_ -> _
 LineNumber:900
898 C=8
 Variable:C -> _
 NumericValue:8
 AssignmentOperator:= =_ -> _
900 IF C=8 THEN 904
 Variable:C -> _
 NumericValue:8
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:904
901 PRINT TAB(27);10-(Y(T)*P-Y(T)*S);"YARDS TO 1ST DOWN"
 NumericValue:27
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 NumericValue:10
 Variable:T -> _
 Variable:Y(_) -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T -> _
 Variable:Y(_) -> _
 Variable:S -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 CarriageControl:;
 TextValue:"YARDS TO 1ST DOWN"
 CarriageControl:NL
902 GOTO 910
 LineNumber:910
904 PRINT TAB(27);X(T)-Y(T)*P;"YARDS"
 NumericValue:27
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 Variable:T -> _
 Variable:X(_) -> _
 Variable:T -> _
 Variable:Y(_) -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 CarriageControl:;
 TextValue:"YARDS"
 CarriageControl:NL
910 GOSUB 1900: IF D=4 THEN 1180
 LineNumber:1900
 Variable:D -> _
 NumericValue:4
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1180
920 REM
 Remark:
930 U=INT(3*RND(0)-1): GOTO 940
 Variable:U -> _
 NumericValue:3
 NumericValue:0
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericValue:1
 BinaryOperatorMinus:-(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
 LineNumber:940
936 PRINT "ILLEGAL PLAY NUMBER, CHECK AND"
 TextValue:"ILLEGAL PLAY NUMBER, CHECK AND"
 CarriageControl:NL
940 PRINT "INPUT OFFENSIVE PLAY, DEFENSIVE PLAY";
 TextValue:"INPUT OFFENSIVE PLAY, DEFENSIVE PLAY"
 CarriageControl:;
950 IF T=2 THEN 970
 Variable:T -> _
 NumericValue:2
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:970
960 INPUT P1,P2: GOTO 975
 Variable:P1 -> _
 Variable:P2 -> _
 LineNumber:975
970 INPUT P2,P1
 Variable:P2 -> _
 Variable:P1 -> _
975 IF P1=77 THEN 1180
 Variable:P1 -> _
 NumericValue:77
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1180
980 IF P1>20 THEN 1800
 Variable:P1 -> _
 NumericValue:20
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1800
985 IF P1<1 THEN 1800
 Variable:P1 -> _
 NumericValue:1
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1800
990 IF P2>20 THEN 1800
 Variable:P2 -> _
 NumericValue:20
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1800
992 IF P2<1 THEN 1800
 Variable:P2 -> _
 NumericValue:1
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1800
995 P1=INT(P1): P2=INT(P2)
 Variable:P1 -> _
 Variable:P1 -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
 Variable:P2 -> _
 Variable:P2 -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
1000 Y=INT(ABS(A(P1)-B(P2))/19*((X(T)-Y(T)*P+25)*RND(1)-15))
 Variable:Y -> _
 Variable:P1 -> _
 Variable:A(_) -> _
 Variable:P2 -> _
 Variable:B(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 FunctionAbs:ABS(_) -> _
 NumericValue:19
 BinaryOperatorDivide:/(_,_) -> _
 Variable:T -> _
 Variable:X(_) -> _
 Variable:T -> _
 Variable:Y(_) -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 NumericValue:25
 BinaryOperatorPlus:+(_,_) -> _
 NumericValue:1
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericValue:15
 BinaryOperatorMinus:-(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
1005 PRINT: IF T=2 THEN 1015
 CarriageControl:NL
 Variable:T -> _
 NumericValue:2
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1015
1010 IF A(P1)<11 THEN 1048
 Variable:P1 -> _
 Variable:A(_) -> _
 NumericValue:11
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1048
1012 GOTO 1020
 LineNumber:1020
1015 IF B(P2)<11 THEN 1048
 Variable:P2 -> _
 Variable:B(_) -> _
 NumericValue:11
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1048
1020 IF U<>0 THEN 1035
 Variable:U -> _
 NumericValue:0
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:1035
1025 PRINT "PASS INCOMPLETE TEAM";T
 TextValue:"PASS INCOMPLETE TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:NL
1030 Y=0: GOTO 1050
 Variable:Y -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 LineNumber:1050
1035 G=RND(1): IF G>.025 THEN 1040
 Variable:G -> _
 NumericValue:1
 FunctionRnd:RND(_) -> _
 AssignmentOperator:= _ -> _
 Variable:G -> _
 NumericValue:.025
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1040
1037 IF Y>2 THEN 1045
 Variable:Y -> _
 NumericValue:2
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1045
1040 PRINT "QUARTERBACK SCRAMBLED": GOTO 1050
 TextValue:"QUARTERBACK SCRAMBLED"
 CarriageControl:NL
 LineNumber:1050
1045 PRINT "PASS COMPLETED": GOTO 1050
 TextValue:"PASS COMPLETED"
 CarriageControl:NL
 LineNumber:1050
1048 PRINT "THE BALL WAS RUN"
 TextValue:"THE BALL WAS RUN"
 CarriageControl:NL
1050 P=P-W(T)*Y
 Variable:P -> _
 Variable:P -> _
 Variable:T -> _
 Variable:W(_) -> _
 Variable:Y -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
1060 PRINT: PRINT "NET YARDS GAINED ON DOWN";D;"ARE ";Y
 CarriageControl:NL
 TextValue:"NET YARDS GAINED ON DOWN"
 CarriageControl:;
 Variable:D -> _
 CarriageControl:;
 TextValue:"ARE "
 CarriageControl:;
 Variable:Y -> _
 CarriageControl:NL
1070 G=RND(1): IF G>.025 THEN 1110
 Variable:G -> _
 NumericValue:1
 FunctionRnd:RND(_) -> _
 AssignmentOperator:= _ -> _
 Variable:G -> _
 NumericValue:.025
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1110
1080 PRINT: PRINT "** LOSS OF POSSESSION FROM TEAM";T;"TO TEAM";T(T)
 CarriageControl:NL
 TextValue:"** LOSS OF POSSESSION FROM TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"TO TEAM"
 CarriageControl:;
 Variable:T -> _
 Variable:T(_) -> _
 CarriageControl:NL
1100 GOSUB 1850: PRINT: T=T(T): GOTO 830
 WARNING: Branch to line before GOSUB start
 LineNumber:1850
 CarriageControl:NL
 Variable:T -> _
 Variable:T -> _
 Variable:T(_) -> _
 AssignmentOperator:= _ -> _
 LineNumber:830
1110 IF Y(T)*P>=X(T) THEN 1320
 Variable:T -> _
 Variable:Y(_) -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T -> _
 Variable:X(_) -> _
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 LineNumber:1320
1120 IF W(T)*P>=Z(T) THEN 1230
 Variable:T -> _
 Variable:W(_) -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T -> _
 Variable:Z(_) -> _
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 LineNumber:1230
1130 IF Y(T)*P-Y(T)*S>=10 THEN 880
 WARNING: Branch to line before GOSUB start
 Variable:T -> _
 Variable:Y(_) -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T -> _
 Variable:Y(_) -> _
 Variable:S -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 NumericValue:10
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 LineNumber:880
1140 D=D+1: IF D<>5 THEN 885
 WARNING: Branch to line before GOSUB start
 Variable:D -> _
 Variable:D -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
 Variable:D -> _
 NumericValue:5
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:885
1160 PRINT: PRINT "CONVERSION UNSUCCESSFUL TEAM";T:T=T(T)
 CarriageControl:NL
 TextValue:"CONVERSION UNSUCCESSFUL TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:NL
 Variable:T -> _
 Variable:T -> _
 Variable:T(_) -> _
 AssignmentOperator:= _ -> _
1170 GOSUB 1850: GOTO 880
 WARNING: Branch to line before GOSUB start
 LineNumber:1850
 LineNumber:880
1180 PRINT "DOES TEAM";T;"WANT TO PUNT";: INPUT A$
 TextValue:"DOES TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"WANT TO PUNT"
 CarriageControl:;
 Variable:A$ -> $
1185 IF A$="NO" THEN 1200
 Variable:A$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1200
1187 IF A$<>"YES" THEN 1180
 WARNING: Branch to line before GOSUB start
 Variable:A$ -> $
 TextValue:"YES"
 BinaryOperatorNotEqual:<>($,$) -> ?
 LineNumber:1180
1190 PRINT:PRINT "TEAM";T;"WILL PUNT": G=RND(1): IF G<.025 THEN 1080
 WARNING: Branch to line before GOSUB start
 CarriageControl:NL
 TextValue:"TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"WILL PUNT"
 CarriageControl:NL
 Variable:G -> _
 NumericValue:1
 FunctionRnd:RND(_) -> _
 AssignmentOperator:= _ -> _
 Variable:G -> _
 NumericValue:.025
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1080
1195 GOSUB 1850: K=INT(25*RND(1)+35): T=T(T): GOTO 790
 WARNING: Branch to line before GOSUB start
 LineNumber:1850
 Variable:K -> _
 NumericValue:25
 NumericValue:1
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericValue:35
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
 Variable:T -> _
 Variable:T -> _
 Variable:T(_) -> _
 AssignmentOperator:= _ -> _
 LineNumber:790
1200 PRINT "DOES TEAM";T;"WANT TO ATTEMPT A FIELD GOAL";: INPUT A$
 TextValue:"DOES TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"WANT TO ATTEMPT A FIELD GOAL"
 CarriageControl:;
 Variable:A$ -> $
1210 IF A$="YES" THEN 1640
 Variable:A$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1640
1215 IF A$<>"NO" THEN 1200
 WARNING: Branch to line before GOSUB start
 Variable:A$ -> $
 TextValue:"NO"
 BinaryOperatorNotEqual:<>($,$) -> ?
 LineNumber:1200
1217 GOTO 920
 WARNING: Branch to line before GOSUB start
 LineNumber:920
1230 PRINT: PRINT "SAFETY AGAINST TEAM";T;"**********************OH-OH"
 CarriageControl:NL
 TextValue:"SAFETY AGAINST TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"**********************OH-OH"
 CarriageControl:NL
1240 H(T(T))=H(T(T))+2: GOSUB 1810
 Variable:T -> _
 Variable:T(_) -> _
 Variable:H(_) -> _
 Variable:T -> _
 Variable:T(_) -> _
 Variable:H(_) -> _
 NumericValue:2
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
 LineNumber:1810
1280 PRINT"TEAM";T;"DO YOU WANT TO PUNT INSTEAD OF A KICKOFF";:INPUT A$
 TextValue:"TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"DO YOU WANT TO PUNT INSTEAD OF A KICKOFF"
 CarriageControl:;
 Variable:A$ -> $
1290 P=Z(T)-W(T)*20: IF A$="YES" THEN 1190
 WARNING: Branch to line before GOSUB start
 Variable:P -> _
 Variable:T -> _
 Variable:Z(_) -> _
 Variable:T -> _
 Variable:W(_) -> _
 NumericValue:20
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
 Variable:A$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1190
1320 PRINT: PRINT "TOUCHDOWN BY TEAM";T;"*********************YEA TEAM"
 CarriageControl:NL
 TextValue:"TOUCHDOWN BY TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"*********************YEA TEAM"
 CarriageControl:NL
1340 Q=7: G=RND(1): IF G>.1 THEN 1380
 Variable:Q -> _
 NumericValue:7
 AssignmentOperator:= =_ -> _
 Variable:G -> _
 NumericValue:1
 FunctionRnd:RND(_) -> _
 AssignmentOperator:= _ -> _
 Variable:G -> _
 NumericValue:.1
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1380
1360 Q=6: PRINT "EXTRA POINT NO GOOD": GOTO 1390
 Variable:Q -> _
 NumericValue:6
 AssignmentOperator:= =_ -> _
 TextValue:"EXTRA POINT NO GOOD"
 CarriageControl:NL
 LineNumber:1390
1380 PRINT "EXTRA POINT GOOD"
 TextValue:"EXTRA POINT GOOD"
 CarriageControl:NL
1390 H(T)=H(T)+Q: GOSUB 1810
 Variable:T -> _
 Variable:H(_) -> _
 Variable:T -> _
 Variable:H(_) -> _
 Variable:Q -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
 LineNumber:1810
1420 T=T(T): GOTO 765
 WARNING: Branch to line before GOSUB start
 Variable:T -> _
 Variable:T -> _
 Variable:T(_) -> _
 AssignmentOperator:= _ -> _
 LineNumber:765
1430 K=INT(9*RND(0)+1)
 Variable:K -> _
 NumericValue:9
 NumericValue:0
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
1440 R=INT(((X(T)-Y(T)*P+25)*RND(1)-15)/K)
 Variable:R -> _
 Variable:T -> _
 Variable:X(_) -> _
 Variable:T -> _
 Variable:Y(_) -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 NumericValue:25
 BinaryOperatorPlus:+(_,_) -> _
 NumericValue:1
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericValue:15
 BinaryOperatorMinus:-(_,_) -> _
 Variable:K -> _
 BinaryOperatorDivide:/(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
1460 P=P-W(T)*R
 Variable:P -> _
 Variable:P -> _
 Variable:T -> _
 Variable:W(_) -> _
 Variable:R -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
1480 PRINT:PRINT "RUNBACK TEAM";T;R;"YARDS"
 CarriageControl:NL
 TextValue:"RUNBACK TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 Variable:R -> _
 CarriageControl:;
 TextValue:"YARDS"
 CarriageControl:NL
1485 G=RND(1): IF G<.025 THEN 1080
 WARNING: Branch to line before GOSUB start
 Variable:G -> _
 NumericValue:1
 FunctionRnd:RND(_) -> _
 AssignmentOperator:= _ -> _
 Variable:G -> _
 NumericValue:.025
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1080
1490 IF Y(T)*P>=X(T) THEN 1320
 WARNING: Branch to line before GOSUB start
 Variable:T -> _
 Variable:Y(_) -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T -> _
 Variable:X(_) -> _
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 LineNumber:1320
1500 IF W(T)*P>=Z(T) THEN 1230
 WARNING: Branch to line before GOSUB start
 Variable:T -> _
 Variable:W(_) -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T -> _
 Variable:Z(_) -> _
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 LineNumber:1230
1510 GOTO 880
 WARNING: Branch to line before GOSUB start
 LineNumber:880
1640 PRINT: PRINT "TEAM";T;"WILL ATTEMPT A FIELD GOAL"
 CarriageControl:NL
 TextValue:"TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"WILL ATTEMPT A FIELD GOAL"
 CarriageControl:NL
1645 G=RND(1): IF G<.025 THEN 1080
 WARNING: Branch to line before GOSUB start
 Variable:G -> _
 NumericValue:1
 FunctionRnd:RND(_) -> _
 AssignmentOperator:= _ -> _
 Variable:G -> _
 NumericValue:.025
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1080
1650 F=INT(35*RND(1)+20)
 Variable:F -> _
 NumericValue:35
 NumericValue:1
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericValue:20
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
1660 PRINT: PRINT "KICK IS";F;"YARDS LONG"
 CarriageControl:NL
 TextValue:"KICK IS"
 CarriageControl:;
 Variable:F -> _
 CarriageControl:;
 TextValue:"YARDS LONG"
 CarriageControl:NL
1680 P=P-W(T)*F: G=RND(1)
 Variable:P -> _
 Variable:P -> _
 Variable:T -> _
 Variable:W(_) -> _
 Variable:F -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
 Variable:G -> _
 NumericValue:1
 FunctionRnd:RND(_) -> _
 AssignmentOperator:= _ -> _
1690 IF G<.35 THEN 1735
 Variable:G -> _
 NumericValue:.35
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1735
1700 IF Y(T)*P<X(T) THEN 1740
 Variable:T -> _
 Variable:Y(_) -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T -> _
 Variable:X(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1740
1710 PRINT "FIELD GOAL GOOD FOR TEAM";T;"*********************YEA"
 TextValue:"FIELD GOAL GOOD FOR TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"*********************YEA"
 CarriageControl:NL
1720 Q=3: GOTO 1390
 WARNING: Branch to line before GOSUB start
 Variable:Q -> _
 NumericValue:3
 AssignmentOperator:= =_ -> _
 LineNumber:1390
1735 PRINT "BALL WENT WIDE"
 TextValue:"BALL WENT WIDE"
 CarriageControl:NL
1740 PRINT "FIELD GOAL UNSUCCESFUL TEAM";T;"-----------------TOO BAD"
 TextValue:"FIELD GOAL UNSUCCESFUL TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"-----------------TOO BAD"
 CarriageControl:NL
1742 GOSUB 1850: IF Y(T)*P<X(T)+10 THEN 1745
 LineNumber:1850
 Variable:T -> _
 Variable:Y(_) -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T -> _
 Variable:X(_) -> _
 NumericValue:10
 BinaryOperatorPlus:+(_,_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1745
1744 T=T(T): GOTO 794
 WARNING: Branch to line before GOSUB start
 Variable:T -> _
 Variable:T -> _
 Variable:T(_) -> _
 AssignmentOperator:= _ -> _
 LineNumber:794
1745 PRINT: PRINT "BALL NOW ON";P
 CarriageControl:NL
 TextValue:"BALL NOW ON"
 CarriageControl:;
 Variable:P -> _
 CarriageControl:NL
1750 T=T(T): GOSUB 1900: GOTO 830
 WARNING: Branch to line before GOSUB start
 Variable:T -> _
 Variable:T -> _
 Variable:T(_) -> _
 AssignmentOperator:= _ -> _
 LineNumber:1900
 LineNumber:830
1770 DATA 17,8,4,14,19,3,10,1,7,11,15,9,5,20,13,18,16,2,12,6
 NumericValue:17
 NumericValue:8
 NumericValue:4
 NumericValue:14
 NumericValue:19
 NumericValue:3
 NumericValue:10
 NumericValue:1
 NumericValue:7
 NumericValue:11
 NumericValue:15
 NumericValue:9
 NumericValue:5
 NumericValue:20
 NumericValue:13
 NumericValue:18
 NumericValue:16
 NumericValue:2
 NumericValue:12
 NumericValue:6
1780 DATA 20,2,17,5,8,18,12,11,1,4,19,14,10,7,9,15,6,13,16,3
 NumericValue:20
 NumericValue:2
 NumericValue:17
 NumericValue:5
 NumericValue:8
 NumericValue:18
 NumericValue:12
 NumericValue:11
 NumericValue:1
 NumericValue:4
 NumericValue:19
 NumericValue:14
 NumericValue:10
 NumericValue:7
 NumericValue:9
 NumericValue:15
 NumericValue:6
 NumericValue:13
 NumericValue:16
 NumericValue:3
1790 DATA "PITCHOUT","TRIPLE REVERSE","DRAW","QB SNEAK","END AROUND"
 TextValue:"PITCHOUT"
 TextValue:"TRIPLE REVERSE"
 TextValue:"DRAW"
 TextValue:"QB SNEAK"
 TextValue:"END AROUND"
1792 DATA "DOUBLE REVERSE","LEFT SWEEP","RIGHT SWEEP","OFF TACKLE"
 TextValue:"DOUBLE REVERSE"
 TextValue:"LEFT SWEEP"
 TextValue:"RIGHT SWEEP"
 TextValue:"OFF TACKLE"
1794 DATA "WISHBONE OPTION","FLARE PASS","SCREEN PASS"
 TextValue:"WISHBONE OPTION"
 TextValue:"FLARE PASS"
 TextValue:"SCREEN PASS"
1796 DATA "ROLL OUT OPTION","RIGHT CURL","LEFT CURL","WISHBONE OPTION"
 TextValue:"ROLL OUT OPTION"
 TextValue:"RIGHT CURL"
 TextValue:"LEFT CURL"
 TextValue:"WISHBONE OPTION"
1798 DATA "SIDELINE PASS","HALF-BACK OPTION","RAZZLE-DAZZLE","BOMB!!!!"
 TextValue:"SIDELINE PASS"
 TextValue:"HALF-BACK OPTION"
 TextValue:"RAZZLE-DAZZLE"
 TextValue:"BOMB!!!!"
1800 IF P1<>99 THEN 936
 WARNING: Branch to line before GOSUB start
 Variable:P1 -> _
 NumericValue:99
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:936
1810 PRINT: PRINT "TEAM 1 SCORE IS";H(1)
 WARNING: Inconsistent GOSUB origins
 WARNING: GOSUB length exceeds limit 40
 CarriageControl:NL
 TextValue:"TEAM 1 SCORE IS"
 CarriageControl:;
 NumericValue:1
 Variable:H(_) -> _
 CarriageControl:NL
1820 PRINT "TEAM 2 SCORE IS";H(2): PRINT
 TextValue:"TEAM 2 SCORE IS"
 CarriageControl:;
 NumericValue:2
 Variable:H(_) -> _
 CarriageControl:NL
 CarriageControl:NL
1825 IF H(T)<E THEN 1830
 Variable:T -> _
 Variable:H(_) -> _
 Variable:E -> _
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1830
1827 PRINT "TEAM";T;"WINS*******************": GOTO 2000
 TextValue:"TEAM"
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 TextValue:"WINS*******************"
 CarriageControl:NL
 LineNumber:2000
1830 IF P1=99 THEN 940
 WARNING: Branch to line before GOSUB start
 Variable:P1 -> _
 NumericValue:99
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:940
1835 RETURN
 
1850 PRINT
 CarriageControl:NL
1860 FOR X=1 TO 72: PRINT "+";: NEXT X: PRINT
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 control: Variable:X -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:72"]
 TextValue:"+"
 CarriageControl:;
 Variable:X -> _
 CarriageControl:NL
1870 RETURN
 WARNING: Multiple GOSUB entry points
 
1900 PRINT TAB(D(T)+5+P/2);M$(T)
 Variable:T -> _
 Variable:D(_) -> _
 NumericValue:5
 BinaryOperatorPlus:+(_,_) -> _
 Variable:P -> _
 NumericValue:2
 BinaryOperatorDivide:/(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 Variable:T -> _
 Variable:M$(_) -> $
 CarriageControl:NL
1910 PRINT "TEAM 1 [0   10   20   30   40   50   60   70   80   90";
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 TextValue:"TEAM 1 [0   10   20   30   40   50   60   70   80   90"
 CarriageControl:;
1915 PRINT "   100] TEAM 2"
 WARNING: Multiple GOSUB entry points
 TextValue:"   100] TEAM 2"
 CarriageControl:NL
1920 PRINT
 WARNING: Multiple GOSUB entry points
 CarriageControl:NL
1930 RETURN
 WARNING: Multiple GOSUB entry points
 
2000 END
 WARNING: Terminating statement in GOSUB
 

