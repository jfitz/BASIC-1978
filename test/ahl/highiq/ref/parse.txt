1 PRINT TAB(33);"H-I-Q"
 NumericValue:33
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"H-I-Q"
 CarriageControl:NL
2 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericValue:15
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
3 PRINT:PRINT:PRINT
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
4 DIM B(70),T(9,9)
 NumericValue:70
 Declaration:B() -> .()
 NumericValue:9
 NumericValue:9
 Declaration:T(,) -> .(,)
5 PRINT "HERE IS THE BOARD:": PRINT
 TextValue:"HERE IS THE BOARD:"
 CarriageControl:NL
 CarriageControl:NL
6 PRINT "          !    !    !"
 TextValue:"          !    !    !"
 CarriageControl:NL
7 PRINT "         13   14   15": PRINT
 TextValue:"         13   14   15"
 CarriageControl:NL
 CarriageControl:NL
8 PRINT "          !    !    !"
 TextValue:"          !    !    !"
 CarriageControl:NL
9 PRINT "         22   23   24": PRINT
 TextValue:"         22   23   24"
 CarriageControl:NL
 CarriageControl:NL
10 PRINT "!    !    !    !    !    !    !"
 TextValue:"!    !    !    !    !    !    !"
 CarriageControl:NL
11 PRINT "29   30   31   32   33   34   35": PRINT
 TextValue:"29   30   31   32   33   34   35"
 CarriageControl:NL
 CarriageControl:NL
12 PRINT "!    !    !    !    !    !    !"
 TextValue:"!    !    !    !    !    !    !"
 CarriageControl:NL
13 PRINT "38   39   40   41   42   43   44": PRINT
 TextValue:"38   39   40   41   42   43   44"
 CarriageControl:NL
 CarriageControl:NL
14 PRINT "!    !    !    !    !    !    !"
 TextValue:"!    !    !    !    !    !    !"
 CarriageControl:NL
15 PRINT "47   48   49   50   51   52   53": PRINT
 TextValue:"47   48   49   50   51   52   53"
 CarriageControl:NL
 CarriageControl:NL
16 PRINT "          !    !    !"
 TextValue:"          !    !    !"
 CarriageControl:NL
17 PRINT "         58   59   60": PRINT
 TextValue:"         58   59   60"
 CarriageControl:NL
 CarriageControl:NL
18 PRINT "          !    !    !"
 TextValue:"          !    !    !"
 CarriageControl:NL
19 PRINT "         67   68   69": PRINT
 TextValue:"         67   68   69"
 CarriageControl:NL
 CarriageControl:NL
20 PRINT "TO SAVE TYPING TIME, A COMPRESSED VERSION OF THE GAME BOARD"
 TextValue:"TO SAVE TYPING TIME, A COMPRESSED VERSION OF THE GAME BOARD"
 CarriageControl:NL
22 PRINT "WILL BE USED DURING PLAY.  REFER TO THE ABOVE ONE FOR PEG"
 TextValue:"WILL BE USED DURING PLAY.  REFER TO THE ABOVE ONE FOR PEG"
 CarriageControl:NL
24 PRINT "NUMBERS.  OK, LET'S BEGIN."
 TextValue:"NUMBERS.  OK, LET'S BEGIN."
 CarriageControl:NL
28 REM *** SET UP BOARD
 Remark:*** SET UP BOARD
29 FOR R=1 TO 9
 control: Variable:R -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:9"]
30 FOR C=1 TO 9
 control: Variable:C -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:9"]
31 IF (R-4)*(R-5)*(R-6)=0 THEN 40
 Variable:R -> .
 NumericValue:4
 BinaryOperatorMinus:-(.,.) -> .
 Variable:R -> .
 NumericValue:5
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:R -> .
 NumericValue:6
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:40
32 IF (C-4)*(C-5)*(C-6)=0 THEN 40
 Variable:C -> .
 NumericValue:4
 BinaryOperatorMinus:-(.,.) -> .
 Variable:C -> .
 NumericValue:5
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:C -> .
 NumericValue:6
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:40
35 T(R,C)=-5
 Variable:R -> .
 Variable:C -> .
 Variable:T(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
36 GOTO 50
 LineNumber:50
40 IF (R-1)*(C-1)*(R-9)*(C-9)=0 THEN 35
 WARNING: Branch to line before GOSUB start
 Variable:R -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:C -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:R -> .
 NumericValue:9
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:C -> .
 NumericValue:9
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:35
42 T(R,C)=5
 Variable:R -> .
 Variable:C -> .
 Variable:T(.,.) -> .
 NumericValue:5
 AssignmentOperator:= =. -> .
50 NEXT C
 Variable:C -> .
60 NEXT R
 Variable:R -> .
65 T(5,5)=0: GOSUB 500
 NumericValue:5
 NumericValue:5
 Variable:T(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 LineNumber:500
70 REM *** INPUT MOVE AND CHECK ON LEGALITY
 Remark:*** INPUT MOVE AND CHECK ON LEGALITY
75 FOR W=1 TO 33
 control: Variable:W -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:33"]
77 READ M
 Variable:M -> .
79 DATA 13,14,15,22,23,24,29,30,31,32,33,34,35,38,39,40,41
 NumericValue:13
 NumericValue:14
 NumericValue:15
 NumericValue:22
 NumericValue:23
 NumericValue:24
 NumericValue:29
 NumericValue:30
 NumericValue:31
 NumericValue:32
 NumericValue:33
 NumericValue:34
 NumericValue:35
 NumericValue:38
 NumericValue:39
 NumericValue:40
 NumericValue:41
81 DATA 42,43,44,47,48,49,50,51,52,53,58,59,60,67,68,69
 NumericValue:42
 NumericValue:43
 NumericValue:44
 NumericValue:47
 NumericValue:48
 NumericValue:49
 NumericValue:50
 NumericValue:51
 NumericValue:52
 NumericValue:53
 NumericValue:58
 NumericValue:59
 NumericValue:60
 NumericValue:67
 NumericValue:68
 NumericValue:69
83 B(M)=-7: NEXT W
 Variable:M -> .
 Variable:B(.) -> .
 NumericValue:7
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
 Variable:W -> .
86 B(41)=-3
 NumericValue:41
 Variable:B(.) -> .
 NumericValue:3
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
100 INPUT "MOVE WHICH PIECE";Z
 WARNING: Multiple GOSUB entry points
 Variable:Z -> .
110 IF B(Z)=-7 THEN 140
 WARNING: Multiple GOSUB entry points
 Variable:Z -> .
 Variable:B(.) -> .
 NumericValue:7
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:140
120 PRINT "ILLEGAL MOVE, TRY AGAIN...": GOTO 100
 WARNING: Multiple GOSUB entry points
 WARNING: Branch to line before GOSUB start
 TextValue:"ILLEGAL MOVE, TRY AGAIN..."
 CarriageControl:NL
 LineNumber:100
140 INPUT "TO WHERE";P
 WARNING: Multiple GOSUB entry points
 Variable:P -> .
150 IF B(P)=0 THEN 120
 WARNING: Multiple GOSUB entry points
 WARNING: Branch to line before GOSUB start
 Variable:P -> .
 Variable:B(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:120
153 IF B(P)=-7 THEN 120
 WARNING: Multiple GOSUB entry points
 WARNING: Branch to line before GOSUB start
 Variable:P -> .
 Variable:B(.) -> .
 NumericValue:7
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:120
156 IF Z=P THEN 100
 WARNING: Multiple GOSUB entry points
 WARNING: Branch to line before GOSUB start
 Variable:Z -> .
 Variable:P -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:100
160 IF ((Z+P)/2)=INT((Z+P)/2) THEN 180
 WARNING: Multiple GOSUB entry points
 Variable:Z -> .
 Variable:P -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 Variable:Z -> .
 Variable:P -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:180
170 GOTO 120
 WARNING: Multiple GOSUB entry points
 WARNING: Branch to line before GOSUB start
 LineNumber:120
180 IF (ABS(Z-P)-2)*(ABS(Z-P)-18)<>0 THEN 120
 WARNING: Multiple GOSUB entry points
 WARNING: Branch to line before GOSUB start
 Variable:Z -> .
 Variable:P -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionAbs:ABS(.) -> .
 NumericValue:2
 BinaryOperatorMinus:-(.,.) -> .
 Variable:Z -> .
 Variable:P -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionAbs:ABS(.) -> .
 NumericValue:18
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:120
190 GOSUB 1000
 WARNING: Multiple GOSUB entry points
 LineNumber:1000
200 GOSUB 500
 WARNING: Multiple GOSUB entry points
 LineNumber:500
210 GOSUB 1500
 WARNING: Multiple GOSUB entry points
 LineNumber:1500
220 GOTO 100
 WARNING: Multiple GOSUB entry points
 WARNING: Branch to line before GOSUB start
 LineNumber:100
500 REM *** PRINT BOARD
 Remark:*** PRINT BOARD
510 FOR X=1 TO 9
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:9"]
520 FOR Y=1 TO 9
 control: Variable:Y -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:9"]
525 IF (X-1)*(X-9)*(Y-1)*(Y-9)=0 THEN 550
 Variable:X -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:X -> .
 NumericValue:9
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:Y -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:Y -> .
 NumericValue:9
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:550
530 IF (X-4)*(X-5)*(X-6)=0 THEN 570
 Variable:X -> .
 NumericValue:4
 BinaryOperatorMinus:-(.,.) -> .
 Variable:X -> .
 NumericValue:5
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:X -> .
 NumericValue:6
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:570
540 IF (Y-4)*(Y-5)*(Y-6)=0 THEN 570
 Variable:Y -> .
 NumericValue:4
 BinaryOperatorMinus:-(.,.) -> .
 Variable:Y -> .
 NumericValue:5
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:Y -> .
 NumericValue:6
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:570
550 REM
 Remark:
560 GOTO 610
 LineNumber:610
570 IF T(X,Y)<>5 THEN 600
 Variable:X -> .
 Variable:Y -> .
 Variable:T(.,.) -> .
 NumericValue:5
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:600
580 PRINT TAB(Y*2);"!";
 Variable:Y -> .
 NumericValue:2
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"!"
 CarriageControl:;
590 GOTO 610
 LineNumber:610
600 PRINT TAB(Y*2);"O";
 Variable:Y -> .
 NumericValue:2
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"O"
 CarriageControl:;
610 REM
 Remark:
615 NEXT Y
 Variable:Y -> .
620 PRINT
 CarriageControl:NL
630 NEXT X
 Variable:X -> .
640 RETURN
 
1000 REM *** UPDATE BOARD
 Remark:*** UPDATE BOARD
1005 C=1: FOR X=1 TO 9
 WARNING: GOSUB length exceeds limit 40
 Variable:C -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:9"]
1020 FOR Y=1 TO 9
 control: Variable:Y -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:9"]
1030 IF C<>Z THEN 1220
 Variable:C -> .
 Variable:Z -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1220
1040 IF C+2<>P THEN 1080
 Variable:C -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 Variable:P -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1080
1045 IF T(X,Y+1)=0 THEN 120
 WARNING: Branch to line before GOSUB start
 Variable:X -> .
 Variable:Y -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:T(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:120
1050 T(X,Y+2)=5
 Variable:X -> .
 Variable:Y -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 Variable:T(.,.) -> .
 NumericValue:5
 AssignmentOperator:= =. -> .
1060 T(X,Y+1)=0: B(C+1)=-3
 Variable:X -> .
 Variable:Y -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:T(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 Variable:C -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:B(.) -> .
 NumericValue:3
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1070 GOTO 1200
 LineNumber:1200
1080 IF C+18<>P THEN 1130
 Variable:C -> .
 NumericValue:18
 BinaryOperatorPlus:+(.,.) -> .
 Variable:P -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1130
1085 IF T(X+1,Y)=0 THEN 120
 WARNING: Branch to line before GOSUB start
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:Y -> .
 Variable:T(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:120
1090 T(X+2,Y)=5: T(X+1,Y)=0: B(C+9)=-3
 Variable:X -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 Variable:Y -> .
 Variable:T(.,.) -> .
 NumericValue:5
 AssignmentOperator:= =. -> .
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:Y -> .
 Variable:T(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 Variable:C -> .
 NumericValue:9
 BinaryOperatorPlus:+(.,.) -> .
 Variable:B(.) -> .
 NumericValue:3
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1120 GOTO 1200
 LineNumber:1200
1130 IF C-2<>P THEN 1170
 Variable:C -> .
 NumericValue:2
 BinaryOperatorMinus:-(.,.) -> .
 Variable:P -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1170
1135 IF T(X,Y-1)=0 THEN 120
 WARNING: Branch to line before GOSUB start
 Variable:X -> .
 Variable:Y -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:T(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:120
1140 T(X,Y-2)=5: T(X,Y-1)=0: B(C-1)=-3
 Variable:X -> .
 Variable:Y -> .
 NumericValue:2
 BinaryOperatorMinus:-(.,.) -> .
 Variable:T(.,.) -> .
 NumericValue:5
 AssignmentOperator:= =. -> .
 Variable:X -> .
 Variable:Y -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:T(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 Variable:C -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:B(.) -> .
 NumericValue:3
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1160 GOTO 1200
 LineNumber:1200
1170 IF C-18<>P THEN 1220
 Variable:C -> .
 NumericValue:18
 BinaryOperatorMinus:-(.,.) -> .
 Variable:P -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1220
1175 IF T(X-1,Y)=0 THEN 120
 WARNING: Branch to line before GOSUB start
 Variable:X -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:Y -> .
 Variable:T(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:120
1180 T(X-2,Y)=5: T(X-1,Y)=0: B(C-9)=-3
 Variable:X -> .
 NumericValue:2
 BinaryOperatorMinus:-(.,.) -> .
 Variable:Y -> .
 Variable:T(.,.) -> .
 NumericValue:5
 AssignmentOperator:= =. -> .
 Variable:X -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:Y -> .
 Variable:T(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 Variable:C -> .
 NumericValue:9
 BinaryOperatorMinus:-(.,.) -> .
 Variable:B(.) -> .
 NumericValue:3
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1200 B(Z)=-3: B(P)=-7
 Variable:Z -> .
 Variable:B(.) -> .
 NumericValue:3
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
 Variable:P -> .
 Variable:B(.) -> .
 NumericValue:7
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1210 T(X,Y)=0: GOTO 1240
 Variable:X -> .
 Variable:Y -> .
 Variable:T(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 LineNumber:1240
1220 C=C+1
 Variable:C -> .
 Variable:C -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1225 NEXT Y
 Variable:Y -> .
1230 NEXT X
 Variable:X -> .
1240 RETURN
 
1500 REM*** CHECK IF GAME IS OVER
 Remark:*** CHECK IF GAME IS OVER
1505 F=0
 WARNING: GOSUB length exceeds limit 40
 Variable:F -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1510 FOR R=2 TO 8
 control: Variable:R -> .
 start:   ["NumericValue:2"]
 end:     ["NumericValue:8"]
1520 FOR C=2 TO 8
 control: Variable:C -> .
 start:   ["NumericValue:2"]
 end:     ["NumericValue:8"]
1530 IF T(R,C)<>5 THEN 1580
 Variable:R -> .
 Variable:C -> .
 Variable:T(.,.) -> .
 NumericValue:5
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1580
1535 F=F+1
 Variable:F -> .
 Variable:F -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1540 FOR A=R-1 TO R+1
 control: Variable:A -> .
 start:   ["Variable:R -> .", "NumericValue:1", "BinaryOperatorMinus:-(.,.) -> ."]
 end:     ["Variable:R -> .", "NumericValue:1", "BinaryOperatorPlus:+(.,.) -> ."]
1545 T=0
 Variable:T -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1550 FOR B=C-1 TO C+1
 WARNING: FOR/NEXT nesting exceeds limit 3
 control: Variable:B -> .
 start:   ["Variable:C -> .", "NumericValue:1", "BinaryOperatorMinus:-(.,.) -> ."]
 end:     ["Variable:C -> .", "NumericValue:1", "BinaryOperatorPlus:+(.,.) -> ."]
1560 T=T+T(A,B)
 Variable:T -> .
 Variable:T -> .
 Variable:A -> .
 Variable:B -> .
 Variable:T(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1561 NEXT B
 Variable:B -> .
1564 IF T<>10 THEN 1567
 Variable:T -> .
 NumericValue:10
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1567
1565 IF T(A,C)<>0 THEN 1630
 Variable:A -> .
 Variable:C -> .
 Variable:T(.,.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1630
1567 NEXT A
 Variable:A -> .
1568 FOR X=C-1 TO C+1
 control: Variable:X -> .
 start:   ["Variable:C -> .", "NumericValue:1", "BinaryOperatorMinus:-(.,.) -> ."]
 end:     ["Variable:C -> .", "NumericValue:1", "BinaryOperatorPlus:+(.,.) -> ."]
1569 T=0
 Variable:T -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1570 FOR Y=R-1 TO R+1
 WARNING: FOR/NEXT nesting exceeds limit 3
 control: Variable:Y -> .
 start:   ["Variable:R -> .", "NumericValue:1", "BinaryOperatorMinus:-(.,.) -> ."]
 end:     ["Variable:R -> .", "NumericValue:1", "BinaryOperatorPlus:+(.,.) -> ."]
1571 T=T+T(Y,X)
 Variable:T -> .
 Variable:T -> .
 Variable:Y -> .
 Variable:X -> .
 Variable:T(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1572 NEXT Y
 Variable:Y -> .
1573 IF T<>10 THEN 1575
 Variable:T -> .
 NumericValue:10
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1575
1574 IF T(R,X)<>0 THEN 1630
 Variable:R -> .
 Variable:X -> .
 Variable:T(.,.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1630
1575 NEXT X
 Variable:X -> .
1580 NEXT C
 Variable:C -> .
1590 NEXT R
 Variable:R -> .
1600 REM *** GAME IS OVER
 Remark:*** GAME IS OVER
1605 PRINT "THE GAME IS OVER."
 TextValue:"THE GAME IS OVER."
 CarriageControl:NL
1610 PRINT "YOU HAD";F;"PIECES REMAINING."
 TextValue:"YOU HAD"
 CarriageControl:;
 Variable:F -> .
 CarriageControl:;
 TextValue:"PIECES REMAINING."
 CarriageControl:NL
1611 IF F<>1 THEN 1615
 Variable:F -> .
 NumericValue:1
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1615
1612 PRINT "BRAVO!  YOU MADE A PERFECT SCORE!"
 TextValue:"BRAVO!  YOU MADE A PERFECT SCORE!"
 CarriageControl:NL
1613 PRINT "SAVE THIS PAPER AS A RECORD OF YOUR ACCOMPLISHMENT!"
 TextValue:"SAVE THIS PAPER AS A RECORD OF YOUR ACCOMPLISHMENT!"
 CarriageControl:NL
1615 PRINT: INPUT "PLAY AGAIN (YES OR NO)";A$
 CarriageControl:NL
 Variable:A$ -> $
1617 IF A$="NO" THEN 2000
 Variable:A$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:2000
1618 RESTORE: GOTO 28
 WARNING: Branch to line before GOSUB start
 
 LineNumber:28
1620 STOP
 
1630 RETURN
 
2000 PRINT: PRINT "SO LONG FOR NOW.": PRINT
 CarriageControl:NL
 TextValue:"SO LONG FOR NOW."
 CarriageControl:NL
 CarriageControl:NL
2010 END
 WARNING: Terminating statement in GOSUB
 

