100 PRINT TAB(31);"HORSERACE"
 NumericConstant:31
 FunctionTab:TAB(_) string scalar
 CarriageControl:;
 TextConstant:"HORSERACE"
 CarriageControl:NL
110 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericConstant:15
 FunctionTab:TAB(_) string scalar
 CarriageControl:;
 TextConstant:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
120 PRINT:PRINT:PRINT
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
210 DIM S(8)
 NumericConstant:8
 Declaration:S() array
220 PRINT "WELCOME TO SOUTH PORTLAND HIGH RACETRACK"
 TextConstant:"WELCOME TO SOUTH PORTLAND HIGH RACETRACK"
 CarriageControl:NL
230 PRINT "                      ...OWNED BY LAURIE CHEVALIER"
 TextConstant:"                      ...OWNED BY LAURIE CHEVALIER"
 CarriageControl:NL
240 PRINT "DO YOU WANT DIRECTIONS";
 TextConstant:"DO YOU WANT DIRECTIONS"
 CarriageControl:;
250 INPUT X$
 Variable:X$ string scalar
260 IF X$="NO" THEN 320
 Variable:X$ string scalar
 TextConstant:"NO"
 BinaryOperatorEqual:=($,$) numeric
270 PRINT"UP TO 10 MAY PLAY.  A TABLE OF ODDS WILL BE PRINTED.  YOU"
 TextConstant:"UP TO 10 MAY PLAY.  A TABLE OF ODDS WILL BE PRINTED.  YOU"
 CarriageControl:NL
280 PRINT"MAY BET ANY + AMOUNT UNDER 100000 ON ONE HORSE."
 TextConstant:"MAY BET ANY + AMOUNT UNDER 100000 ON ONE HORSE."
 CarriageControl:NL
290 PRINT "DURING THE RACE, A HORSE WILL BE SHOWN BY ITS"
 TextConstant:"DURING THE RACE, A HORSE WILL BE SHOWN BY ITS"
 CarriageControl:NL
300 PRINT"NUMBER.  THE HORSES RACE DOWN THE PAPER!"
 TextConstant:"NUMBER.  THE HORSES RACE DOWN THE PAPER!"
 CarriageControl:NL
310 PRINT
 CarriageControl:NL
320 PRINT "HOW MANY WANT TO BET";
 TextConstant:"HOW MANY WANT TO BET"
 CarriageControl:;
330 INPUT C
 Variable:C numeric scalar
340 PRINT "WHEN ? APPEARS,TYPE NAME"
 TextConstant:"WHEN ? APPEARS,TYPE NAME"
 CarriageControl:NL
350 FOR A=1 TO C
 control: Variable:A numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["Variable:C numeric scalar"]
360 INPUT W$(A)
 Variable:A numeric scalar
 Variable:W$(_) string scalar
370 NEXT A
 Variable:A numeric scalar
380 PRINT
 CarriageControl:NL
390 PRINT"HORSE",,"NUMBER","ODDS"
 TextConstant:"HORSE"
 CarriageControl:,
 CarriageControl:,
 TextConstant:"NUMBER"
 CarriageControl:,
 TextConstant:"ODDS"
 CarriageControl:NL
400 PRINT
 CarriageControl:NL
410 FOR I=1 TO 8: S(I)=0: NEXT I
 control: Variable:I numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8"]
 Variable:I numeric scalar
 Variable:S(_) numeric scalar
 NumericConstant:0
 AssignmentOperator:=
 Variable:I numeric scalar
420 LET R=0
 Variable:R numeric scalar
 NumericConstant:0
 AssignmentOperator:=
430 FOR A=1 TO 8
 control: Variable:A numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8"]
440 LET D(A)=INT(10*RND(1)+1)
 Variable:A numeric scalar
 Variable:D(_) numeric scalar
 NumericConstant:10
 NumericConstant:1
 FunctionRnd:RND(_) numeric scalar
 BinaryOperatorMultiply:*(_,_) numeric
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) numeric
 FunctionInt:INT(_) numeric scalar
 AssignmentOperator:=
450 NEXT A
 Variable:A numeric scalar
460 FOR A=1 TO 8
 control: Variable:A numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8"]
470 LET R=R+D(A)
 Variable:R numeric scalar
 Variable:R numeric scalar
 Variable:A numeric scalar
 Variable:D(_) numeric scalar
 BinaryOperatorPlus:+(_,_) numeric
 AssignmentOperator:=
480 NEXT A
 Variable:A numeric scalar
490 LET V$(1)="JOE MAW"
 NumericConstant:1
 Variable:V$(_) string scalar
 TextConstant:"JOE MAW"
 AssignmentOperator:=
500 LET V$(2)="L.B.J."
 NumericConstant:2
 Variable:V$(_) string scalar
 TextConstant:"L.B.J."
 AssignmentOperator:=
510 LET V$(3)="MR.WASHBURN"
 NumericConstant:3
 Variable:V$(_) string scalar
 TextConstant:"MR.WASHBURN"
 AssignmentOperator:=
520 LET V$(4)="MISS KAREN"
 NumericConstant:4
 Variable:V$(_) string scalar
 TextConstant:"MISS KAREN"
 AssignmentOperator:=
530 LET V$(5)="JOLLY"
 NumericConstant:5
 Variable:V$(_) string scalar
 TextConstant:"JOLLY"
 AssignmentOperator:=
540 LET V$(6)="HORSE"
 NumericConstant:6
 Variable:V$(_) string scalar
 TextConstant:"HORSE"
 AssignmentOperator:=
550 LET V$(7)="JELLY DO NOT"
 NumericConstant:7
 Variable:V$(_) string scalar
 TextConstant:"JELLY DO NOT"
 AssignmentOperator:=
560 LET V$(8)="MIDNIGHT"
 NumericConstant:8
 Variable:V$(_) string scalar
 TextConstant:"MIDNIGHT"
 AssignmentOperator:=
570 FOR N=1 TO 8
 control: Variable:N numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8"]
580 PRINT V$(N),,N,R/D(N);":1"
 Variable:N numeric scalar
 Variable:V$(_) string scalar
 CarriageControl:,
 CarriageControl:,
 Variable:N numeric scalar
 CarriageControl:,
 Variable:R numeric scalar
 Variable:N numeric scalar
 Variable:D(_) numeric scalar
 BinaryOperatorDivide:/(_,_) numeric
 CarriageControl:;
 TextConstant:":1"
 CarriageControl:NL
590 NEXT N
 Variable:N numeric scalar
600 PRINT"--------------------------------------------------"
 TextConstant:"--------------------------------------------------"
 CarriageControl:NL
610 PRINT "PLACE YOUR BETS...HORSE # THEN AMOUNT"
 TextConstant:"PLACE YOUR BETS...HORSE # THEN AMOUNT"
 CarriageControl:NL
620 FOR J=1 TO C
 control: Variable:J numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["Variable:C numeric scalar"]
630 PRINT W$(J);
 Variable:J numeric scalar
 Variable:W$(_) string scalar
 CarriageControl:;
640 INPUT Q(J),P(J)
 Variable:J numeric scalar
 Variable:Q(_) numeric scalar
 Variable:J numeric scalar
 Variable:P(_) numeric scalar
650 IF P(J)<1 THEN 670
 Variable:J numeric scalar
 Variable:P(_) numeric scalar
 NumericConstant:1
 BinaryOperatorLess:<(_,_) numeric
660 IF P(J)<100000 THEN 690
 Variable:J numeric scalar
 Variable:P(_) numeric scalar
 NumericConstant:100000
 BinaryOperatorLess:<(_,_) numeric
670 PRINT"  YOU CAN'T DO THAT!"
 TextConstant:"  YOU CAN'T DO THAT!"
 CarriageControl:NL
680 GOTO 630
 LineNumber:630
690 NEXT J
 Variable:J numeric scalar
700 PRINT
 CarriageControl:NL
710 PRINT"1 2 3 4 5 6 7 8"
 TextConstant:"1 2 3 4 5 6 7 8"
 CarriageControl:NL
720 PRINT"XXXXSTARTXXXX"
 TextConstant:"XXXXSTARTXXXX"
 CarriageControl:NL
730 FOR I=1 TO 8
 control: Variable:I numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8"]
740 LET M=I
 Variable:M numeric scalar
 Variable:I numeric scalar
 AssignmentOperator:=
750 LET M(I)=M
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:M numeric scalar
 AssignmentOperator:=
760 LET Y(M(I))=INT(100*RND(1)+1)
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 NumericConstant:100
 NumericConstant:1
 FunctionRnd:RND(_) numeric scalar
 BinaryOperatorMultiply:*(_,_) numeric
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) numeric
 FunctionInt:INT(_) numeric scalar
 AssignmentOperator:=
770 IF Y(M(I))<10 THEN 860
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 NumericConstant:10
 BinaryOperatorLess:<(_,_) numeric
780 LET S=INT(R/D(I)+.5)
 Variable:S numeric scalar
 Variable:R numeric scalar
 Variable:I numeric scalar
 Variable:D(_) numeric scalar
 BinaryOperatorDivide:/(_,_) numeric
 NumericConstant:.5
 BinaryOperatorPlus:+(_,_) numeric
 FunctionInt:INT(_) numeric scalar
 AssignmentOperator:=
790 IF Y(M(I))<S+17 THEN 880
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 Variable:S numeric scalar
 NumericConstant:17
 BinaryOperatorPlus:+(_,_) numeric
 BinaryOperatorLess:<(_,_) numeric
800 IF Y(M(I))<S+37 THEN 900
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 Variable:S numeric scalar
 NumericConstant:37
 BinaryOperatorPlus:+(_,_) numeric
 BinaryOperatorLess:<(_,_) numeric
810 IF Y(M(I))<S+57 THEN 920
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 Variable:S numeric scalar
 NumericConstant:57
 BinaryOperatorPlus:+(_,_) numeric
 BinaryOperatorLess:<(_,_) numeric
820 IF Y(M(I))<77+S THEN 940
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 NumericConstant:77
 Variable:S numeric scalar
 BinaryOperatorPlus:+(_,_) numeric
 BinaryOperatorLess:<(_,_) numeric
830 IF Y(M(I))<S+92 THEN 960
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 Variable:S numeric scalar
 NumericConstant:92
 BinaryOperatorPlus:+(_,_) numeric
 BinaryOperatorLess:<(_,_) numeric
840 LET Y(M(I))=7
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 NumericConstant:7
 AssignmentOperator:=
850 GOTO 970
 LineNumber:970
860 LET Y(M(I))=1
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 NumericConstant:1
 AssignmentOperator:=
870 GOTO 970
 LineNumber:970
880 LET Y(M(I))=2
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 NumericConstant:2
 AssignmentOperator:=
890 GOTO 970
 LineNumber:970
900 LET Y(M(I))=3
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 NumericConstant:3
 AssignmentOperator:=
910 GOTO 970
 LineNumber:970
920 LET Y(M(I))=4
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 NumericConstant:4
 AssignmentOperator:=
930 GOTO 970
 LineNumber:970
940 LET Y(M(I))=5
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 NumericConstant:5
 AssignmentOperator:=
950 GOTO 970
 LineNumber:970
960 LET Y(M(I))=6
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 NumericConstant:6
 AssignmentOperator:=
970 NEXT I
 Variable:I numeric scalar
980 LET M=I
 Variable:M numeric scalar
 Variable:I numeric scalar
 AssignmentOperator:=
990 FOR I=1 TO 8
 control: Variable:I numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8"]
1000 LET S(M(I))=S(M(I))+Y(M(I))
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:S(_) numeric scalar
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:S(_) numeric scalar
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:Y(_) numeric scalar
 BinaryOperatorPlus:+(_,_) numeric
 AssignmentOperator:=
1010 NEXT I
 Variable:I numeric scalar
1020 LET I=1
 Variable:I numeric scalar
 NumericConstant:1
 AssignmentOperator:=
1030 FOR L=1 TO 8
 control: Variable:L numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8"]
1040 FOR I=1 TO 8-L
 control: Variable:I numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8", "Variable:L numeric scalar", "BinaryOperatorMinus:-(_,_) numeric"]
1050 IF S(M(I))<S(M(I+1))THEN 1090
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:S(_) numeric scalar
 Variable:I numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) numeric
 Variable:M(_) numeric scalar
 Variable:S(_) numeric scalar
 BinaryOperatorLess:<(_,_) numeric
1060 LET H=M(I)
 Variable:H numeric scalar
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 AssignmentOperator:=
1070 LET M(I)=M(I+1)
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:I numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) numeric
 Variable:M(_) numeric scalar
 AssignmentOperator:=
1080 LET M(I+1)=H
 Variable:I numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) numeric
 Variable:M(_) numeric scalar
 Variable:H numeric scalar
 AssignmentOperator:=
1090 NEXT I
 Variable:I numeric scalar
1100 NEXT L
 Variable:L numeric scalar
1110 LET T=S(M(8))
 Variable:T numeric scalar
 NumericConstant:8
 Variable:M(_) numeric scalar
 Variable:S(_) numeric scalar
 AssignmentOperator:=
1120 FOR I=1 TO 8
 control: Variable:I numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8"]
1130 LET B=S(M(I))-S(M(I-1))
 Variable:B numeric scalar
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:S(_) numeric scalar
 Variable:I numeric scalar
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) numeric
 Variable:M(_) numeric scalar
 Variable:S(_) numeric scalar
 BinaryOperatorMinus:-(_,_) numeric
 AssignmentOperator:=
1140 IF B=0 THEN 1190
 Variable:B numeric scalar
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) numeric
1150 FOR A=1 TO B
 control: Variable:A numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["Variable:B numeric scalar"]
1160 PRINT
 CarriageControl:NL
1170 IF S(M(I))>27 THEN 1240
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 Variable:S(_) numeric scalar
 NumericConstant:27
 BinaryOperatorGreater:>(_,_) numeric
1180 NEXT A
 Variable:A numeric scalar
1190 PRINT M(I);
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 CarriageControl:;
1200 NEXT I
 Variable:I numeric scalar
1210 FOR A=1 TO 28-T
 control: Variable:A numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:28", "Variable:T numeric scalar", "BinaryOperatorMinus:-(_,_) numeric"]
1220 PRINT
 CarriageControl:NL
1230 NEXT A
 Variable:A numeric scalar
1240 PRINT "XXXXFINISHXXXX";
 TextConstant:"XXXXFINISHXXXX"
 CarriageControl:;
1242 PRINT
 CarriageControl:NL
1243 PRINT
 CarriageControl:NL
1244 PRINT "---------------------------------------------"
 TextConstant:"---------------------------------------------"
 CarriageControl:NL
1245 PRINT
 CarriageControl:NL
1250 IF T<28 THEN 720
 Variable:T numeric scalar
 NumericConstant:28
 BinaryOperatorLess:<(_,_) numeric
1270 PRINT "THE RACE RESULTS ARE:"
 TextConstant:"THE RACE RESULTS ARE:"
 CarriageControl:NL
1272 LET Z9=1
 Variable:Z9 numeric scalar
 NumericConstant:1
 AssignmentOperator:=
1280 FOR I=8 TO 1 STEP-1
 control: Variable:I numeric scalar
 start:   ["NumericConstant:8"]
 end:     ["NumericConstant:1"]
 step:    ["NumericConstant:1", "UnaryOperatorMinus:-(_) numeric"]
1290 LET F=M(I)
 Variable:F numeric scalar
 Variable:I numeric scalar
 Variable:M(_) numeric scalar
 AssignmentOperator:=
1300 PRINT
 CarriageControl:NL
1310 PRINT Z9;"PLACE HORSE NO.";F,"AT ";R/D(F);":1"
 Variable:Z9 numeric scalar
 CarriageControl:;
 TextConstant:"PLACE HORSE NO."
 CarriageControl:;
 Variable:F numeric scalar
 CarriageControl:,
 TextConstant:"AT "
 CarriageControl:;
 Variable:R numeric scalar
 Variable:F numeric scalar
 Variable:D(_) numeric scalar
 BinaryOperatorDivide:/(_,_) numeric
 CarriageControl:;
 TextConstant:":1"
 CarriageControl:NL
1312 LET Z9=Z9+1
 Variable:Z9 numeric scalar
 Variable:Z9 numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) numeric
 AssignmentOperator:=
1320  NEXT I
 Variable:I numeric scalar
1330 FOR J=1 TO C
 control: Variable:J numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["Variable:C numeric scalar"]
1340 IF Q(J)<>M(8) THEN 1370
 Variable:J numeric scalar
 Variable:Q(_) numeric scalar
 NumericConstant:8
 Variable:M(_) numeric scalar
 BinaryOperatorNotEqual:<>(_,_) numeric
1350 LET N=Q(J)
 Variable:N numeric scalar
 Variable:J numeric scalar
 Variable:Q(_) numeric scalar
 AssignmentOperator:=
1355 PRINT
 CarriageControl:NL
1360 PRINT W$(J);" WINS $";(R/D(N))*P(J)
 Variable:J numeric scalar
 Variable:W$(_) string scalar
 CarriageControl:;
 TextConstant:" WINS $"
 CarriageControl:;
 Variable:R numeric scalar
 Variable:N numeric scalar
 Variable:D(_) numeric scalar
 BinaryOperatorDivide:/(_,_) numeric
 Variable:J numeric scalar
 Variable:P(_) numeric scalar
 BinaryOperatorMultiply:*(_,_) numeric
 CarriageControl:NL
1370 NEXT J
 Variable:J numeric scalar
1372 PRINT "DO YOU WANT TO BET ON THE NEXT RACE ?"
 TextConstant:"DO YOU WANT TO BET ON THE NEXT RACE ?"
 CarriageControl:NL
1374 INPUT "YES OR NO"; O$
 Variable:O$ string scalar
1376 IF O$="YES" THEN 380
 Variable:O$ string scalar
 TextConstant:"YES"
 BinaryOperatorEqual:=($,$) numeric
1380 END
 

