10 PRINT TAB(33);"TOWERS"
 NumericValue:33
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"TOWERS"
 CarriageControl:NL
20 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericValue:15
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
30 PRINT:PRINT:PRINT
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
90 PRINT
 CarriageControl:NL
100 REM*** INITIALIZE
 Remark:*** INITIALIZE
110 DIM T(7,3)
 NumericValue:7
 NumericValue:3
 Declaration:T(,) -> .(,)
120 E=0
 Variable:E -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
130 FOR D=1 TO 7
 control: Variable:D -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:7"]
140 FOR N=1 TO 3
 control: Variable:N -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3"]
150 T(D,N)=0
 Variable:D -> .
 Variable:N -> .
 Variable:T(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
160 NEXT N
 Variable:N -> .
170 NEXT D
 Variable:D -> .
180 PRINT "TOWERS OF HANOI PUZZLE.": PRINT
 TextValue:"TOWERS OF HANOI PUZZLE."
 CarriageControl:NL
 CarriageControl:NL
200 PRINT "YOU MUST TRANSFER THE DISKS FROM THE LEFT TO THE RIGHT"
 TextValue:"YOU MUST TRANSFER THE DISKS FROM THE LEFT TO THE RIGHT"
 CarriageControl:NL
205 PRINT "TOWER, ONE AT A TIME, NEVER PUTTING A LARGER DISK ON A"
 TextValue:"TOWER, ONE AT A TIME, NEVER PUTTING A LARGER DISK ON A"
 CarriageControl:NL
210 PRINT "SMALLER DISK.": PRINT
 TextValue:"SMALLER DISK."
 CarriageControl:NL
 CarriageControl:NL
215 INPUT "HOW MANY DISKS DO YOU WANT TO MOVE (7 IS MAX)";S
 Variable:S -> .
220 PRINT
 CarriageControl:NL
230 M=0
 Variable:M -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
240 FOR Q=1 TO 7
 control: Variable:Q -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:7"]
250 IF Q=S THEN 350
 Variable:Q -> .
 Variable:S -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:350
260 NEXT Q
 Variable:Q -> .
270 E=E+1
 Variable:E -> .
 Variable:E -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
280 IF E>2 THEN 310
 Variable:E -> .
 NumericValue:2
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:310
290 PRINT "SORRY, BUT I CAN'T DO THAT JOB FOR YOU.": GOTO 215
 TextValue:"SORRY, BUT I CAN'T DO THAT JOB FOR YOU."
 CarriageControl:NL
 LineNumber:215
310 PRINT "ALL RIGHT, WISE GUY, IF YOU CAN'T PLAY THE GAME RIGHT, I'LL"
 TextValue:"ALL RIGHT, WISE GUY, IF YOU CAN'T PLAY THE GAME RIGHT, I'LL"
 CarriageControl:NL
320 PRINT "JUST TAKE MY PUZZLE AND GO HOME.  SO LONG.": STOP
 TextValue:"JUST TAKE MY PUZZLE AND GO HOME.  SO LONG."
 CarriageControl:NL
 
340 REM *** STORE DISKS FROM SMALLEST TO LARGEST
 Remark:*** STORE DISKS FROM SMALLEST TO LARGEST
350 PRINT "IN THIS PROGRAM, WE SHALL REFER TO DISKS BY NUMERICAL CODE."
 TextValue:"IN THIS PROGRAM, WE SHALL REFER TO DISKS BY NUMERICAL CODE."
 CarriageControl:NL
355 PRINT "3 WILL REPRESENT THE SMALLEST DISK, 5 THE NEXT SIZE,"
 TextValue:"3 WILL REPRESENT THE SMALLEST DISK, 5 THE NEXT SIZE,"
 CarriageControl:NL
360 PRINT "7 THE NEXT, AND SO ON, UP TO 15.  IF YOU DO THE PUZZLE WITH"
 TextValue:"7 THE NEXT, AND SO ON, UP TO 15.  IF YOU DO THE PUZZLE WITH"
 CarriageControl:NL
365 PRINT "2 DISKS, THEIR CODE NAMES WOULD BE 13 AND 15.  WITH 3 DISKS"
 TextValue:"2 DISKS, THEIR CODE NAMES WOULD BE 13 AND 15.  WITH 3 DISKS"
 CarriageControl:NL
370 PRINT "THE CODE NAMES WOULD BE 11, 13 AND 15, ETC.  THE NEEDLES"
 TextValue:"THE CODE NAMES WOULD BE 11, 13 AND 15, ETC.  THE NEEDLES"
 CarriageControl:NL
375 PRINT "ARE NUMBERED FROM LEFT TO RIGHT, 1 TO 3.  WE WILL"
 TextValue:"ARE NUMBERED FROM LEFT TO RIGHT, 1 TO 3.  WE WILL"
 CarriageControl:NL
380 PRINT "START WITH THE DISKS ON NEEDLE 1, AND ATTEMPT TO MOVE THEM"
 TextValue:"START WITH THE DISKS ON NEEDLE 1, AND ATTEMPT TO MOVE THEM"
 CarriageControl:NL
385 PRINT "TO NEEDLE 3."
 TextValue:"TO NEEDLE 3."
 CarriageControl:NL
390 PRINT: PRINT "GOOD LUCK!": PRINT
 CarriageControl:NL
 TextValue:"GOOD LUCK!"
 CarriageControl:NL
 CarriageControl:NL
400 Y=7: D=15
 Variable:Y -> .
 NumericValue:7
 AssignmentOperator:= =. -> .
 Variable:D -> .
 NumericValue:15
 AssignmentOperator:= =. -> .
420 FOR X=S TO 1 STEP -1
 control: Variable:X -> .
 start:   ["Variable:S -> ."]
 end:     ["NumericValue:1"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
430 T(Y,1)=D: D=D-2: Y=Y-1
 Variable:Y -> .
 NumericValue:1
 Variable:T(.,.) -> .
 Variable:D -> .
 AssignmentOperator:= . -> .
 Variable:D -> .
 Variable:D -> .
 NumericValue:2
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Y -> .
 Variable:Y -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
460 NEXT X
 Variable:X -> .
470 GOSUB 1230
 LineNumber:1230
480 PRINT "WHICH DISK WOULD YOU LIKE TO MOVE";:E=0
 TextValue:"WHICH DISK WOULD YOU LIKE TO MOVE"
 CarriageControl:;
 Variable:E -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
500 INPUT D
 Variable:D -> .
510 IF (D-3)*(D-5)*(D-7)*(D-9)*(D-11)*(D-13)*(D-15)=0 THEN 580
 WARNING: Line exceeds PRETTY width limit 80
 Variable:D -> .
 NumericValue:3
 BinaryOperatorMinus:-(.,.) -> .
 Variable:D -> .
 NumericValue:5
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:D -> .
 NumericValue:7
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:D -> .
 NumericValue:9
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:D -> .
 NumericValue:11
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:D -> .
 NumericValue:13
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:D -> .
 NumericValue:15
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:580
520 PRINT "ILLEGAL ENTRY... YOU MAY ONLY TYPE 3,5,7,9,11,13, OR 15."
 TextValue:"ILLEGAL ENTRY... YOU MAY ONLY TYPE 3,5,7,9,11,13, OR 15."
 CarriageControl:NL
530 E=E+1: IF E>1 THEN 560
 Variable:E -> .
 Variable:E -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:E -> .
 NumericValue:1
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:560
550 GOTO 500
 LineNumber:500
560 PRINT "STOP WASTING MY TIME.  GO BOTHER SOMEONE ELSE.": STOP
 TextValue:"STOP WASTING MY TIME.  GO BOTHER SOMEONE ELSE."
 CarriageControl:NL
 
580 REM *** CHECK IF REQUESTED DISK IS BELOW ANOTHER
 Remark:*** CHECK IF REQUESTED DISK IS BELOW ANOTHER
590 FOR R=1 TO 7
 control: Variable:R -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:7"]
600 FOR C=1 TO 3
 control: Variable:C -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3"]
610 IF T(R,C)=D THEN 640
 Variable:R -> .
 Variable:C -> .
 Variable:T(.,.) -> .
 Variable:D -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:640
620 NEXT C: NEXT R
 Variable:C -> .
 Variable:R -> .
640 FOR Q=R TO 1 STEP -1
 control: Variable:Q -> .
 start:   ["Variable:R -> ."]
 end:     ["NumericValue:1"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
645 IF T(Q,C)=0 THEN 660
 Variable:Q -> .
 Variable:C -> .
 Variable:T(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:660
650 IF T(Q,C)<D THEN 680
 Variable:Q -> .
 Variable:C -> .
 Variable:T(.,.) -> .
 Variable:D -> .
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:680
660 NEXT Q
 Variable:Q -> .
670 GOTO 700
 LineNumber:700
680 PRINT "THAT DISK IS BELOW ANOTHER ONE.  MAKE ANOTHER CHOICE."
 TextValue:"THAT DISK IS BELOW ANOTHER ONE.  MAKE ANOTHER CHOICE."
 CarriageControl:NL
690 GOTO 480
 LineNumber:480
700 E=0
 Variable:E -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
705 INPUT "PLACE DISK ON WHICH NEEDLE";N
 Variable:N -> .
730 IF (N-1)*(N-2)*(N-3)=0 THEN 800
 Variable:N -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:N -> .
 NumericValue:2
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:N -> .
 NumericValue:3
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:800
735 E=E+1
 Variable:E -> .
 Variable:E -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
740 IF E>1 THEN 780
 Variable:E -> .
 NumericValue:1
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:780
750 PRINT "I'LL ASSUME YOU HIT THE WRONG KEY THIS TIME.  BUT WATCH IT,"
 TextValue:"I'LL ASSUME YOU HIT THE WRONG KEY THIS TIME.  BUT WATCH IT,"
 CarriageControl:NL
760 PRINT "I ONLY ALLOW ONE MISTAKE.": GOTO 705
 TextValue:"I ONLY ALLOW ONE MISTAKE."
 CarriageControl:NL
 LineNumber:705
780 PRINT "I TRIED TO WARN YOU, BUT YOU WOULDN'T LISTEN."
 TextValue:"I TRIED TO WARN YOU, BUT YOU WOULDN'T LISTEN."
 CarriageControl:NL
790 PRINT "BYE BYE, BIG SHOT.":STOP
 TextValue:"BYE BYE, BIG SHOT."
 CarriageControl:NL
 
800 FOR R=1 TO 7
 control: Variable:R -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:7"]
810 IF T(R,N)<>0 THEN 840
 Variable:R -> .
 Variable:N -> .
 Variable:T(.,.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:840
820 NEXT R
 Variable:R -> .
830 GOTO 880
 LineNumber:880
835 REM *** CHECK IF DISK TO BE PLACED ON A LARGER ONE
 Remark:*** CHECK IF DISK TO BE PLACED ON A LARGER ONE
840 IF D<T(R,N) THEN 880
 Variable:D -> .
 Variable:R -> .
 Variable:N -> .
 Variable:T(.,.) -> .
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:880
850 PRINT "YOU CAN'T PLACE A LARGER DISK ON TOP OF A SMALLER ONE,"
 TextValue:"YOU CAN'T PLACE A LARGER DISK ON TOP OF A SMALLER ONE,"
 CarriageControl:NL
860 PRINT "IT MIGHT CRUSH IT!": PRINT "NOW THEN, ";:GOTO 480
 TextValue:"IT MIGHT CRUSH IT!"
 CarriageControl:NL
 TextValue:"NOW THEN, "
 CarriageControl:;
 LineNumber:480
875 REM *** MOVE RELOCATED DISK
 Remark:*** MOVE RELOCATED DISK
880 FOR V=1 TO 7: FOR W=1 TO 3
 control: Variable:V -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:7"]
 control: Variable:W -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3"]
900 IF T(V,W)=D THEN 930
 Variable:V -> .
 Variable:W -> .
 Variable:T(.,.) -> .
 Variable:D -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:930
910 NEXT W: NEXT V
 Variable:W -> .
 Variable:V -> .
925 REM *** LOCATE EMPTY SPACE ON NEEDLE N
 Remark:*** LOCATE EMPTY SPACE ON NEEDLE N
930 FOR U=1 TO 7
 control: Variable:U -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:7"]
940 IF T(U,N)<>0 THEN 970
 Variable:U -> .
 Variable:N -> .
 Variable:T(.,.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:970
950 NEXT U
 Variable:U -> .
960 U=7: GOTO 980
 Variable:U -> .
 NumericValue:7
 AssignmentOperator:= =. -> .
 LineNumber:980
965 REM *** MOVE DISK AND SET OLD LOCATION TO 0
 Remark:*** MOVE DISK AND SET OLD LOCATION TO 0
970 U=U-1
 Variable:U -> .
 Variable:U -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
980 T(U,N)=T(V,W): T(V,W)=0
 Variable:U -> .
 Variable:N -> .
 Variable:T(.,.) -> .
 Variable:V -> .
 Variable:W -> .
 Variable:T(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:V -> .
 Variable:W -> .
 Variable:T(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
995 REM *** PRINT OUT CURRENT STATUS
 Remark:*** PRINT OUT CURRENT STATUS
1000 GOSUB 1230
 LineNumber:1230
1018 REM *** CHECK IF DONE
 Remark:*** CHECK IF DONE
1020 M=M+1
 Variable:M -> .
 Variable:M -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1030 FOR R=1 TO 7: FOR C=1 TO 2
 control: Variable:R -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:7"]
 control: Variable:C -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:2"]
1050 IF T(R,C)<>0 THEN 1090
 Variable:R -> .
 Variable:C -> .
 Variable:T(.,.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1090
1060 NEXT C: NEXT R
 Variable:C -> .
 Variable:R -> .
1080 GOTO 1120
 LineNumber:1120
1090 IF M<=128 THEN 480
 Variable:M -> .
 NumericValue:128
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:480
1100 PRINT "SORRY, BUT I HAVE ORDERS TO STOP IF YOU MAKE MORE THAN"
 TextValue:"SORRY, BUT I HAVE ORDERS TO STOP IF YOU MAKE MORE THAN"
 CarriageControl:NL
1110 PRINT "128 MOVES.": STOP
 TextValue:"128 MOVES."
 CarriageControl:NL
 
1120 IF M<>2^S-1 THEN 1140
 Variable:M -> .
 NumericValue:2
 Variable:S -> .
 BinaryOperatorPower:^(.,.) -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1140
1130 PRINT:PRINT "CONGRATULATIONS!!":PRINT
 CarriageControl:NL
 TextValue:"CONGRATULATIONS!!"
 CarriageControl:NL
 CarriageControl:NL
1140 PRINT "YOU HAVE PERFORMED THE TASK IN";M;"MOVES."
 TextValue:"YOU HAVE PERFORMED THE TASK IN"
 CarriageControl:;
 Variable:M -> .
 CarriageControl:;
 TextValue:"MOVES."
 CarriageControl:NL
1150 PRINT: PRINT "TRY AGAIN (YES OR NO)";: INPUT A$
 CarriageControl:NL
 TextValue:"TRY AGAIN (YES OR NO)"
 CarriageControl:;
 Variable:A$ -> $
1160 IF A$="NO" THEN 1390
 Variable:A$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1390
1170 IF A$="YES" THEN 90
 Variable:A$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:90
1180 PRINT: PRINT "'YES' OR 'NO' PLEASE";: INPUT A$: GOTO 1160
 CarriageControl:NL
 TextValue:"'YES' OR 'NO' PLEASE"
 CarriageControl:;
 Variable:A$ -> $
 LineNumber:1160
1230 REM *** PRINT SUBROUTINE
 Remark:*** PRINT SUBROUTINE
1240 FOR K=1 TO 7
 control: Variable:K -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:7"]
1250 Z=10
 Variable:Z -> .
 NumericValue:10
 AssignmentOperator:= =. -> .
1260 FOR J=1 TO 3
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3"]
1270 IF T(K,J)=0 THEN 1330
 Variable:K -> .
 Variable:J -> .
 Variable:T(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1330
1280 PRINT TAB(Z-INT(T(K,J)/2));
 Variable:Z -> .
 Variable:K -> .
 Variable:J -> .
 Variable:T(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionTab:TAB(.) -> $
 CarriageControl:;
1290 FOR V=1 TO T(K,J)
 control: Variable:V -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:K -> .", "Variable:J -> .", "Variable:T(.,.) -> ."]
1300 PRINT "*";
 TextValue:"*"
 CarriageControl:;
1310 NEXT V
 Variable:V -> .
1320 GOTO 1340
 LineNumber:1340
1330 PRINT TAB(Z);"*";
 Variable:Z -> .
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"*"
 CarriageControl:;
1340 Z=Z+21
 Variable:Z -> .
 Variable:Z -> .
 NumericValue:21
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1350 NEXT J
 Variable:J -> .
1360 PRINT
 CarriageControl:NL
1370 NEXT K
 Variable:K -> .
1380 RETURN
 
1390 PRINT: PRINT "THANKS FOR THE GAME!": PRINT: END
 CarriageControl:NL
 TextValue:"THANKS FOR THE GAME!"
 CarriageControl:NL
 CarriageControl:NL
 

