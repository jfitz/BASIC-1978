Statistics:

Number of lines: 125
Number of valid statements: 151
Number of comments: 10
Number of executable statements: 150

Complexity:

Comment density: 0.066
Comprehension effort: 422
McCabe complexity: 41
Halstead complexity:
 length: 508
 volume: 2528.181
 difficulty: 28.959
 effort: 73212.771
 language: 3.015
 intelligence: 87.303
 time: 67.790

(0 4) 10 PRINT TAB(33); "TOWERS"
  Origs: 
  Dests: 20
(0 4) 20 PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 10
  Dests: 30
(0 2) 30 PRINT
(0 2)    PRINT
(0 2)    PRINT
  Origs: 20
  Dests: 90
(0 2) 90 PRINT
  Origs: 30, 1170
  Dests: 100
(0 1) 100 REM *** INITIALIZE
  Origs: 90
  Dests: 110
(0 2) 110 DIM T(7, 3)
  Origs: 100
  Dests: 120
(0 3) 120 E = 0
  Origs: 110
  Dests: 130
(1 3) 130 FOR D = 1 TO 7
  Origs: 120
  Dests: 140
(1 3) 140 FOR N = 1 TO 3
  Origs: 130
  Dests: 150
(0 3) 150 T(D, N) = 0
  Origs: 140
  Dests: 160
(0 1) 160 NEXT N
  Origs: 150
  Dests: 170
(0 1) 170 NEXT D
  Origs: 160
  Dests: 180
(0 2) 180 PRINT "TOWERS OF HANOI PUZZLE."
(0 2)     PRINT
  Origs: 170
  Dests: 200
(0 2) 200 PRINT "YOU MUST TRANSFER THE DISKS FROM THE LEFT TO THE RIGHT"
  Origs: 180
  Dests: 205
(0 2) 205 PRINT "TOWER, ONE AT A TIME, NEVER PUTTING A LARGER DISK ON A"
  Origs: 200
  Dests: 210
(0 2) 210 PRINT "SMALLER DISK."
(0 2)     PRINT
  Origs: 205
  Dests: 215
(1 2) 215 INPUT "HOW MANY DISKS DO YOU WANT TO MOVE (7 IS MAX)"; S
  Origs: 210, 290
  Dests: 220
(0 2) 220 PRINT
  Origs: 215
  Dests: 230
(0 3) 230 M = 0
  Origs: 220
  Dests: 240
(1 3) 240 FOR Q = 1 TO 7
  Origs: 230
  Dests: 250
(1 4) 250 IF Q = S THEN 350
  Origs: 240
  Dests: 260, 350
(0 1) 260 NEXT Q
  Origs: 250
  Dests: 270
(0 4) 270 E = E + 1
  Origs: 260
  Dests: 280
(1 4) 280 IF E > 2 THEN 310
  Origs: 270
  Dests: 290, 310
(0 2) 290 PRINT "SORRY, BUT I CAN'T DO THAT JOB FOR YOU."
(0 3)     GOTO 215
  Origs: 280
  Dests: 215
(0 2) 310 PRINT "ALL RIGHT, WISE GUY, IF YOU CAN'T PLAY THE GAME RIGHT, I'LL"
  Origs: 280
  Dests: 320
(0 2) 320 PRINT "JUST TAKE MY PUZZLE AND GO HOME.  SO LONG."
(0 1)     STOP
  Origs: 310
  Dests: 
(0 1) 340 REM *** STORE DISKS FROM SMALLEST TO LARGEST
  Origs: 
  Dests: 350
(0 2) 350 PRINT "IN THIS PROGRAM, WE SHALL REFER TO DISKS BY NUMERICAL CODE."
  Origs: 250, 340
  Dests: 355
(0 2) 355 PRINT "3 WILL REPRESENT THE SMALLEST DISK, 5 THE NEXT SIZE,"
  Origs: 350
  Dests: 360
(0 2) 360 PRINT "7 THE NEXT, AND SO ON, UP TO 15.  IF YOU DO THE PUZZLE WITH"
  Origs: 355
  Dests: 365
(0 2) 365 PRINT "2 DISKS, THEIR CODE NAMES WOULD BE 13 AND 15.  WITH 3 DISKS"
  Origs: 360
  Dests: 370
(0 2) 370 PRINT "THE CODE NAMES WOULD BE 11, 13 AND 15, ETC.  THE NEEDLES"
  Origs: 365
  Dests: 375
(0 2) 375 PRINT "ARE NUMBERED FROM LEFT TO RIGHT, 1 TO 3.  WE WILL"
  Origs: 370
  Dests: 380
(0 2) 380 PRINT "START WITH THE DISKS ON NEEDLE 1, AND ATTEMPT TO MOVE THEM"
  Origs: 375
  Dests: 385
(0 2) 385 PRINT "TO NEEDLE 3."
  Origs: 380
  Dests: 390
(0 2) 390 PRINT
(0 2)     PRINT "GOOD LUCK!"
(0 2)     PRINT
  Origs: 385
  Dests: 400
(0 3) 400 Y = 7
(0 3)     D = 15
  Origs: 390
  Dests: 420
(1 5) 420 FOR X = S TO 1 STEP -1
  Origs: 400
  Dests: 430
(0 3) 430 T(Y, 1) = D
(0 4)     D = D - 2
(0 4)     Y = Y - 1
  Origs: 420
  Dests: 460
(0 1) 460 NEXT X
  Origs: 430
  Dests: 470
(0 2) 470 GOSUB 1230
  Origs: 460
  Dests: 480, 1230
(0 2) 480 PRINT "WHICH DISK WOULD YOU LIKE TO MOVE";
(0 3)     E = 0
  Origs: 470, 690, 860, 1090
  Dests: 500
(1 2) 500 INPUT D
  Origs: 480, 550
  Dests: 510
(1 23) 510 IF (D - 3) * (D - 5) * (D - 7) * (D - 9) * (D - 11) * (D - 13) * (D - 15) = 0 THEN 580
  Origs: 500
  Dests: 520, 580
(0 2) 520 PRINT "ILLEGAL ENTRY... YOU MAY ONLY TYPE 3,5,7,9,11,13, OR 15."
  Origs: 510
  Dests: 530
(0 4) 530 E = E + 1
(1 4)     IF E > 1 THEN 560
  Origs: 520
  Dests: 550, 560
(0 3) 550 GOTO 500
  Origs: 530
  Dests: 500
(0 2) 560 PRINT "STOP WASTING MY TIME.  GO BOTHER SOMEONE ELSE."
(0 1)     STOP
  Origs: 530
  Dests: 
(0 1) 580 REM *** CHECK IF REQUESTED DISK IS BELOW ANOTHER
  Origs: 510
  Dests: 590
(1 3) 590 FOR R = 1 TO 7
  Origs: 580
  Dests: 600
(1 3) 600 FOR C = 1 TO 3
  Origs: 590
  Dests: 610
(1 4) 610 IF T(R, C) = D THEN 640
  Origs: 600
  Dests: 620, 640
(0 1) 620 NEXT C
(0 1)     NEXT R
  Origs: 610
  Dests: 640
(1 5) 640 FOR Q = R TO 1 STEP -1
  Origs: 610, 620
  Dests: 645
(1 4) 645 IF T(Q, C) = 0 THEN 660
  Origs: 640
  Dests: 650, 660
(1 4) 650 IF T(Q, C) < D THEN 680
  Origs: 645
  Dests: 660, 680
(0 1) 660 NEXT Q
  Origs: 645, 650
  Dests: 670
(0 2) 670 GOTO 700
  Origs: 660
  Dests: 700
(0 2) 680 PRINT "THAT DISK IS BELOW ANOTHER ONE.  MAKE ANOTHER CHOICE."
  Origs: 650
  Dests: 690
(0 3) 690 GOTO 480
  Origs: 680
  Dests: 480
(0 3) 700 E = 0
  Origs: 670
  Dests: 705
(1 2) 705 INPUT "PLACE DISK ON WHICH NEEDLE"; N
  Origs: 700, 760
  Dests: 730
(1 11) 730 IF (N - 1) * (N - 2) * (N - 3) = 0 THEN 800
  Origs: 705
  Dests: 735, 800
(0 4) 735 E = E + 1
  Origs: 730
  Dests: 740
(1 4) 740 IF E > 1 THEN 780
  Origs: 735
  Dests: 750, 780
(0 2) 750 PRINT "I'LL ASSUME YOU HIT THE WRONG KEY THIS TIME.  BUT WATCH IT,"
  Origs: 740
  Dests: 760
(0 2) 760 PRINT "I ONLY ALLOW ONE MISTAKE."
(0 3)     GOTO 705
  Origs: 750
  Dests: 705
(0 2) 780 PRINT "I TRIED TO WARN YOU, BUT YOU WOULDN'T LISTEN."
  Origs: 740
  Dests: 790
(0 2) 790 PRINT "BYE BYE, BIG SHOT."
(0 1)     STOP
  Origs: 780
  Dests: 
(1 3) 800 FOR R = 1 TO 7
  Origs: 730
  Dests: 810
(1 4) 810 IF T(R, N) <> 0 THEN 840
  Origs: 800
  Dests: 820, 840
(0 1) 820 NEXT R
  Origs: 810
  Dests: 830
(0 2) 830 GOTO 880
  Origs: 820
  Dests: 880
(0 1) 835 REM *** CHECK IF DISK TO BE PLACED ON A LARGER ONE
  Origs: 
  Dests: 840
(1 4) 840 IF D < T(R, N) THEN 880
  Origs: 810, 835
  Dests: 850, 880
(0 2) 850 PRINT "YOU CAN'T PLACE A LARGER DISK ON TOP OF A SMALLER ONE,"
  Origs: 840
  Dests: 860
(0 2) 860 PRINT "IT MIGHT CRUSH IT!"
(0 2)     PRINT "NOW THEN, ";
(0 3)     GOTO 480
  Origs: 850
  Dests: 480
(0 1) 875 REM *** MOVE RELOCATED DISK
  Origs: 
  Dests: 880
(1 3) 880 FOR V = 1 TO 7
(1 3)     FOR W = 1 TO 3
  Origs: 830, 840, 875
  Dests: 900
(1 4) 900 IF T(V, W) = D THEN 930
  Origs: 880
  Dests: 910, 930
(0 1) 910 NEXT W
(0 1)     NEXT V
  Origs: 900
  Dests: 925
(0 1) 925 REM *** LOCATE EMPTY SPACE ON NEEDLE N
  Origs: 910
  Dests: 930
(1 3) 930 FOR U = 1 TO 7
  Origs: 900, 925
  Dests: 940
(1 4) 940 IF T(U, N) <> 0 THEN 970
  Origs: 930
  Dests: 950, 970
(0 1) 950 NEXT U
  Origs: 940
  Dests: 960
(0 3) 960 U = 7
(0 2)     GOTO 980
  Origs: 950
  Dests: 980
(0 1) 965 REM *** MOVE DISK AND SET OLD LOCATION TO 0
  Origs: 
  Dests: 970
(0 4) 970 U = U - 1
  Origs: 940, 965
  Dests: 980
(0 3) 980 T(U, N) = T(V, W)
(0 3)     T(V, W) = 0
  Origs: 960, 970
  Dests: 995
(0 1) 995 REM *** PRINT OUT CURRENT STATUS
  Origs: 980
  Dests: 1000
(0 2) 1000 GOSUB 1230
  Origs: 995
  Dests: 1018, 1230
(0 1) 1018 REM *** CHECK IF DONE
  Origs: 1000
  Dests: 1020
(0 4) 1020 M = M + 1
  Origs: 1018
  Dests: 1030
(1 3) 1030 FOR R = 1 TO 7
(1 3)      FOR C = 1 TO 2
  Origs: 1020
  Dests: 1050
(1 4) 1050 IF T(R, C) <> 0 THEN 1090
  Origs: 1030
  Dests: 1060, 1090
(0 1) 1060 NEXT C
(0 1)      NEXT R
  Origs: 1050
  Dests: 1080
(0 2) 1080 GOTO 1120
  Origs: 1060
  Dests: 1120
(1 5) 1090 IF M <= 128 THEN 480
  Origs: 1050
  Dests: 480, 1100
(0 2) 1100 PRINT "SORRY, BUT I HAVE ORDERS TO STOP IF YOU MAKE MORE THAN"
  Origs: 1090
  Dests: 1110
(0 2) 1110 PRINT "128 MOVES."
(0 1)      STOP
  Origs: 1100
  Dests: 
(1 7) 1120 IF M <> 2 ^ S - 1 THEN 1140
  Origs: 1080
  Dests: 1130, 1140
(0 2) 1130 PRINT
(0 2)      PRINT "CONGRATULATIONS!!"
(0 2)      PRINT
  Origs: 1120
  Dests: 1140
(0 4) 1140 PRINT "YOU HAVE PERFORMED THE TASK IN"; M; "MOVES."
  Origs: 1120, 1130
  Dests: 1150
(0 2) 1150 PRINT
(0 2)      PRINT "TRY AGAIN (YES OR NO)";
(1 2)      INPUT A$
  Origs: 1140
  Dests: 1160
(1 4) 1160 IF A$ = "NO" THEN 1390
  Origs: 1150, 1180
  Dests: 1170, 1390
(1 5) 1170 IF A$ = "YES" THEN 90
  Origs: 1160
  Dests: 90, 1180
(0 2) 1180 PRINT
(0 2)      PRINT "'YES' OR 'NO' PLEASE";
(1 2)      INPUT A$
(0 3)      GOTO 1160
  Origs: 1170
  Dests: 1160
(0 1) 1230 REM *** PRINT SUBROUTINE
  Origs: 470, 1000
  Dests: 1240
(1 3) 1240 FOR K = 1 TO 7
  Origs: 1230
  Dests: 1250
(0 3) 1250 Z = 10
  Origs: 1240
  Dests: 1260
(1 3) 1260 FOR J = 1 TO 3
  Origs: 1250
  Dests: 1270
(1 4) 1270 IF T(K, J) = 0 THEN 1330
  Origs: 1260
  Dests: 1280, 1330
(0 3) 1280 PRINT TAB(Z - INT(T(K, J) / 2));
  Origs: 1270
  Dests: 1290
(1 3) 1290 FOR V = 1 TO T(K, J)
  Origs: 1280
  Dests: 1300
(0 2) 1300 PRINT "*";
  Origs: 1290
  Dests: 1310
(0 1) 1310 NEXT V
  Origs: 1300
  Dests: 1320
(0 2) 1320 GOTO 1340
  Origs: 1310
  Dests: 1340
(0 4) 1330 PRINT TAB(Z); "*";
  Origs: 1270
  Dests: 1340
(0 4) 1340 Z = Z + 21
  Origs: 1320, 1330
  Dests: 1350
(0 1) 1350 NEXT J
  Origs: 1340
  Dests: 1360
(0 2) 1360 PRINT
  Origs: 1350
  Dests: 1370
(0 1) 1370 NEXT K
  Origs: 1360
  Dests: 1380
(0 1) 1380 RETURN
  Origs: 1370
  Dests: 
(0 2) 1390 PRINT
(0 2)      PRINT "THANKS FOR THE GAME!"
(0 2)      PRINT
(0 1)      END
  Origs: 1160
  Dests: 

Unreachable code:

All executable lines are reachable.

