10 PRINT TAB(33);"BOMBARDMENT"
 NumericValue:33
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"BOMBARDMENT"
 CarriageControl:NL
20 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericValue:15
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
30 PRINT:PRINT:PRINT
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
100 PRINT "YOU ARE ON A BATTLEFIELD WITH 4 PLATOONS AND YOU"
 TextValue:"YOU ARE ON A BATTLEFIELD WITH 4 PLATOONS AND YOU"
 CarriageControl:NL
110 PRINT "HAVE 25 OUTPOSTS AVAILABLE WHERE THEY MAY BE PLACED."
 TextValue:"HAVE 25 OUTPOSTS AVAILABLE WHERE THEY MAY BE PLACED."
 CarriageControl:NL
120 PRINT "YOU CAN ONLY PLACE ONE PLATOON AT ANY ONE OUTPOST."
 TextValue:"YOU CAN ONLY PLACE ONE PLATOON AT ANY ONE OUTPOST."
 CarriageControl:NL
130 PRINT "THE COMPUTER DOES THE SAME WITH ITS FOUR PLATOONS."
 TextValue:"THE COMPUTER DOES THE SAME WITH ITS FOUR PLATOONS."
 CarriageControl:NL
135 PRINT
 CarriageControl:NL
140 PRINT "THE OBJECT OF THE GAME IS TO FIRE MISSLES AT THE"
 TextValue:"THE OBJECT OF THE GAME IS TO FIRE MISSLES AT THE"
 CarriageControl:NL
150 PRINT "OUTPOSTS OF THE COMPUTER.  IT WILL DO THE SAME TO YOU."
 TextValue:"OUTPOSTS OF THE COMPUTER.  IT WILL DO THE SAME TO YOU."
 CarriageControl:NL
160 PRINT "THE ONE WHO DESTROYS ALL FOUR OF THE ENEMY'S PLATOONS"
 TextValue:"THE ONE WHO DESTROYS ALL FOUR OF THE ENEMY'S PLATOONS"
 CarriageControl:NL
170 PRINT "FIRST IS THE WINNER."
 TextValue:"FIRST IS THE WINNER."
 CarriageControl:NL
180 PRINT
 CarriageControl:NL
190 PRINT "GOOD LUCK... AND TELL US WHERE YOU WANT THE BODIES SENT!"
 TextValue:"GOOD LUCK... AND TELL US WHERE YOU WANT THE BODIES SENT!"
 CarriageControl:NL
200 PRINT
 CarriageControl:NL
210 PRINT "TEAR OFF MATRIX AND USE IT TO CHECK OFF THE NUMBERS."
 TextValue:"TEAR OFF MATRIX AND USE IT TO CHECK OFF THE NUMBERS."
 CarriageControl:NL
220 FOR R=1 TO 5: PRINT: NEXT R
 control: Variable:R -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
 CarriageControl:NL
 Variable:R -> _
260 DIM M(100)
 NumericValue:100
 Declaration:M() -> _()
270 FOR R=1 TO 5
 control: Variable:R -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
280 I=(R-1)*5+1
 Variable:I -> _
 Variable:R -> _
 NumericValue:1
 BinaryOperatorMinus:-(_,_) -> _
 NumericValue:5
 BinaryOperatorMultiply:*(_,_) -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
290 PRINT I,I+1,I+2,I+3,I+4
 Variable:I -> _
 CarriageControl:,
 Variable:I -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 CarriageControl:,
 Variable:I -> _
 NumericValue:2
 BinaryOperatorPlus:+(_,_) -> _
 CarriageControl:,
 Variable:I -> _
 NumericValue:3
 BinaryOperatorPlus:+(_,_) -> _
 CarriageControl:,
 Variable:I -> _
 NumericValue:4
 BinaryOperatorPlus:+(_,_) -> _
 CarriageControl:NL
300 NEXT R
 Variable:R -> _
350 FOR R=1 TO 10: PRINT: NEXT R
 control: Variable:R -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:10"]
 CarriageControl:NL
 Variable:R -> _
380 C=INT(RND(1)*25)+1
 Variable:C -> _
 NumericValue:1
 FunctionRnd:RND(_) -> _
 NumericValue:25
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
390 D=INT(RND(1)*25)+1
 Variable:D -> _
 NumericValue:1
 FunctionRnd:RND(_) -> _
 NumericValue:25
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
400 E=INT(RND(1)*25)+1
 Variable:E -> _
 NumericValue:1
 FunctionRnd:RND(_) -> _
 NumericValue:25
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
410 F=INT(RND(1)*25)+1
 Variable:F -> _
 NumericValue:1
 FunctionRnd:RND(_) -> _
 NumericValue:25
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
420 IF C=D THEN 390
 Variable:C -> _
 Variable:D -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:390
430 IF C=E THEN 400
 Variable:C -> _
 Variable:E -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:400
440 IF C=F THEN 410
 Variable:C -> _
 Variable:F -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:410
450 IF D=E THEN 400
 Variable:D -> _
 Variable:E -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:400
460 IF D=F THEN 410
 Variable:D -> _
 Variable:F -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:410
470 IF E=F THEN 410
 Variable:E -> _
 Variable:F -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:410
480 PRINT "WHAT ARE YOUR FOUR POSITIONS";
 TextValue:"WHAT ARE YOUR FOUR POSITIONS"
 CarriageControl:;
490 INPUT G,H,K,L
 Variable:G -> _
 Variable:H -> _
 Variable:K -> _
 Variable:L -> _
495 PRINT
 CarriageControl:NL
500 PRINT "WHERE DO YOU WISH TO FIRE YOUR MISSLE";
 TextValue:"WHERE DO YOU WISH TO FIRE YOUR MISSLE"
 CarriageControl:;
510 INPUT Y
 Variable:Y -> _
520 IF Y=C THEN 710
 Variable:Y -> _
 Variable:C -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:710
530 IF Y=D THEN 710
 Variable:Y -> _
 Variable:D -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:710
540 IF Y=E THEN 710
 Variable:Y -> _
 Variable:E -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:710
550 IF Y=F THEN 710
 Variable:Y -> _
 Variable:F -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:710
560 GOTO 630
 LineNumber:630
570 M=INT(RND(1)*25)+1
 Variable:M -> _
 NumericValue:1
 FunctionRnd:RND(_) -> _
 NumericValue:25
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
575 GOTO 1160
 LineNumber:1160
580 IF X=G THEN 920
 Variable:X -> _
 Variable:G -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:920
590 IF X=H THEN 920
 Variable:X -> _
 Variable:H -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:920
600 IF X=L THEN 920
 Variable:X -> _
 Variable:L -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:920
610 IF X=K THEN 920
 Variable:X -> _
 Variable:K -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:920
620 GOTO 670
 LineNumber:670
630 PRINT "HA, HA YOU MISSED. MY TURN NOW:"
 TextValue:"HA, HA YOU MISSED. MY TURN NOW:"
 CarriageControl:NL
640 PRINT: PRINT: GOTO 570
 CarriageControl:NL
 CarriageControl:NL
 LineNumber:570
670 PRINT "I MISSED YOU, YOU DIRTY RAT. I PICKED";M". YOUR TURN:"
 TextValue:"I MISSED YOU, YOU DIRTY RAT. I PICKED"
 CarriageControl:;
 Variable:M -> _
 CarriageControl:
 TextValue:". YOUR TURN:"
 CarriageControl:NL
680 PRINT: PRINT: GOTO 500
 CarriageControl:NL
 CarriageControl:NL
 LineNumber:500
710 Q=Q+1
 Variable:Q -> _
 Variable:Q -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
720 IF Q=4 THEN 890
 Variable:Q -> _
 NumericValue:4
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:890
730 PRINT "YOU GOT ONE OF MY OUTPOSTS!"
 TextValue:"YOU GOT ONE OF MY OUTPOSTS!"
 CarriageControl:NL
740 IF Q=1 THEN 770
 Variable:Q -> _
 NumericValue:1
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:770
750 IF Q=2 THEN 810
 Variable:Q -> _
 NumericValue:2
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:810
760 IF Q=3 THEN 850
 Variable:Q -> _
 NumericValue:3
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:850
770 PRINT "ONE DOWN, THREE TO GO."
 TextValue:"ONE DOWN, THREE TO GO."
 CarriageControl:NL
780 PRINT: PRINT: GOTO 570
 CarriageControl:NL
 CarriageControl:NL
 LineNumber:570
810 PRINT "TWO DOWN, TWO TO GO."
 TextValue:"TWO DOWN, TWO TO GO."
 CarriageControl:NL
820 PRINT: PRINT: GOTO 570
 CarriageControl:NL
 CarriageControl:NL
 LineNumber:570
850 PRINT "THREE DOWN, ONE TO GO."
 TextValue:"THREE DOWN, ONE TO GO."
 CarriageControl:NL
860 PRINT: PRINT: GOTO 570
 CarriageControl:NL
 CarriageControl:NL
 LineNumber:570
890 PRINT "YOU GOT ME, I'M GOING FAST. BUT I'LL GET YOU WHEN"
 TextValue:"YOU GOT ME, I'M GOING FAST. BUT I'LL GET YOU WHEN"
 CarriageControl:NL
900 PRINT "MY TRANSISTORS RECUPERATE!"
 TextValue:"MY TRANSISTORS RECUPERATE!"
 CarriageControl:NL
910 GOTO 1235
 LineNumber:1235
920 Z=Z+1
 Variable:Z -> _
 Variable:Z -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
930 IF Z=4 THEN 1110
 Variable:Z -> _
 NumericValue:4
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1110
940 PRINT "I GOT YOU. IT WON'T BE LONG NOW. POST";X;"WAS HIT."
 TextValue:"I GOT YOU. IT WON'T BE LONG NOW. POST"
 CarriageControl:;
 Variable:X -> _
 CarriageControl:;
 TextValue:"WAS HIT."
 CarriageControl:NL
950 IF Z=1 THEN 990
 Variable:Z -> _
 NumericValue:1
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:990
960 IF Z=2 THEN 1030
 Variable:Z -> _
 NumericValue:2
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1030
970 IF Z=3 THEN 1070
 Variable:Z -> _
 NumericValue:3
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1070
990 PRINT "YOU HAVE ONLY THREE OUTPOSTS LEFT."
 TextValue:"YOU HAVE ONLY THREE OUTPOSTS LEFT."
 CarriageControl:NL
1000 PRINT: PRINT: GOTO 500
 CarriageControl:NL
 CarriageControl:NL
 LineNumber:500
1030 PRINT "YOU HAVE ONLY TWO OUTPOSTS LEFT."
 TextValue:"YOU HAVE ONLY TWO OUTPOSTS LEFT."
 CarriageControl:NL
1040 PRINT: PRINT: GOTO 500
 CarriageControl:NL
 CarriageControl:NL
 LineNumber:500
1070 PRINT "YOU HAVE ONLY ONE OUTPOST LEFT."
 TextValue:"YOU HAVE ONLY ONE OUTPOST LEFT."
 CarriageControl:NL
1080 PRINT: PRINT: GOTO 500
 CarriageControl:NL
 CarriageControl:NL
 LineNumber:500
1110 PRINT "YOU'RE DEAD. YOUR LAST OUTPOST WAS AT";X;". HA, HA, HA."
 TextValue:"YOU'RE DEAD. YOUR LAST OUTPOST WAS AT"
 CarriageControl:;
 Variable:X -> _
 CarriageControl:;
 TextValue:". HA, HA, HA."
 CarriageControl:NL
1120 PRINT "BETTER LUCK NEXT TIME."
 TextValue:"BETTER LUCK NEXT TIME."
 CarriageControl:NL
1150 GOTO 1235
 LineNumber:1235
1160 P=P+1
 Variable:P -> _
 Variable:P -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
1170 N=P-1
 Variable:N -> _
 Variable:P -> _
 NumericValue:1
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
1180 FOR T=1 TO N
 control: Variable:T -> _
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> _"]
1190 IF M=M(T) THEN 570
 Variable:M -> _
 Variable:T -> _
 Variable:M(_) -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:570
1200 NEXT T
 Variable:T -> _
1210 X=M
 Variable:X -> _
 Variable:M -> _
 AssignmentOperator:= _ -> _
1220 M(P)=M
 Variable:P -> _
 Variable:M(_) -> _
 Variable:M -> _
 AssignmentOperator:= _ -> _
1230 GOTO 580
 LineNumber:580
1235 END
 

