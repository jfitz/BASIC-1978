2 PRINT TAB(30);"MASTERMIND"
 NumericValue:30
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"MASTERMIND"
 CarriageControl:NL
4 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericValue:15
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
6 PRINT: PRINT: PRINT
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
10 REM
 Remark:
20 REM     MASTERMIND II
 Remark:    MASTERMIND II
30 REM     STEVE NORTH
 Remark:    STEVE NORTH
40 REM     CREATIVE COMPUTING
 Remark:    CREATIVE COMPUTING
50 REM     PO BOX 789-M MORRISTOWN NEW JERSEY 07960
 Remark:    PO BOX 789-M MORRISTOWN NEW JERSEY 07960
60 REM
 Remark:
70 REM
 Remark:
80 INPUT "NUMBER OF COLORS";C9
 Variable:C9 -> .
90 IF C9>8 THEN PRINT "NO MORE THAN 8, PLEASE!":GOTO 80
 Variable:C9 -> .
 NumericValue:8
 BinaryOperatorGreater:>(.,.) -> ?
 TextValue:"NO MORE THAN 8, PLEASE!"
 CarriageControl:NL
 LineNumber:80
100 INPUT "NUMBER OF POSITIONS";P9
 Variable:P9 -> .
110 INPUT "NUMBER OF ROUNDS";R9
 Variable:R9 -> .
120 P=C9^P9
 Variable:P -> .
 Variable:C9 -> .
 Variable:P9 -> .
 BinaryOperatorPower:^(.,.) -> .
 AssignmentOperator:= . -> .
130 PRINT "TOTAL POSSIBILITIES =";P
 TextValue:"TOTAL POSSIBILITIES ="
 CarriageControl:;
 Variable:P -> .
 CarriageControl:NL
140 H=0:C=0
 Variable:H -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 Variable:C -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
150 DIM Q(P9),S(10,2),S$(10),A$(P9),G$(P9),I(P),H$(P9)
 Variable:P9 -> .
 Declaration:Q() -> .()
 NumericValue:10
 NumericValue:2
 Declaration:S(,) -> .(,)
 NumericValue:10
 Declaration:S$() -> $()
 Variable:P9 -> .
 Declaration:A$() -> $()
 Variable:P9 -> .
 Declaration:G$() -> $()
 Variable:P -> .
 Declaration:I() -> .()
 Variable:P9 -> .
 Declaration:H$() -> $()
160 L$="BWRGOYPT"
 Variable:L$ -> $
 TextValue:"BWRGOYPT"
 AssignmentOperator:= =$ -> $
170 PRINT
 CarriageControl:NL
180 PRINT
 CarriageControl:NL
190 PRINT "COLOR     LETTER"
 TextValue:"COLOR     LETTER"
 CarriageControl:NL
200 PRINT "=====     ======"
 TextValue:"=====     ======"
 CarriageControl:NL
210 FOR X=1 TO C9
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:C9 -> ."]
220 READ X$
 Variable:X$ -> $
230 PRINT X$;TAB(13);MID$(L$,X,1)
 Variable:X$ -> $
 CarriageControl:;
 NumericValue:13
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 Variable:L$ -> $
 Variable:X -> .
 NumericValue:1
 FunctionMid:MID$($,.,.) -> $
 CarriageControl:NL
240 NEXT X
 Variable:X -> .
250 PRINT
 CarriageControl:NL
260 FOR R=1 TO R9
 WARNING: FORNEXT length exceeds limit 40
 control: Variable:R -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:R9 -> ."]
270 PRINT 
 CarriageControl:NL
280 PRINT "ROUND NUMBER";R;"----"
 TextValue:"ROUND NUMBER"
 CarriageControl:;
 Variable:R -> .
 CarriageControl:;
 TextValue:"----"
 CarriageControl:NL
290 PRINT
 CarriageControl:NL
300 PRINT "GUESS MY COMBINATION.":PRINT
 TextValue:"GUESS MY COMBINATION."
 CarriageControl:NL
 CarriageControl:NL
310 REM     GET A COMBINATION
 Remark:    GET A COMBINATION
320 A=INT(P*RND(1)+1)
 Variable:A -> .
 Variable:P -> .
 NumericValue:1
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
330 GOSUB 3000
 LineNumber:3000
340 FOR X=1 TO A
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:A -> ."]
350 GOSUB 3500
 LineNumber:3500
360 NEXT X
 Variable:X -> .
370 FOR M=1 TO 10
 control: Variable:M -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:10"]
380 PRINT "MOVE # ";M;" GUESS ";:INPUT X$
 TextValue:"MOVE # "
 CarriageControl:;
 Variable:M -> .
 CarriageControl:;
 TextValue:" GUESS "
 CarriageControl:;
 Variable:X$ -> $
390 IF X$="BOARD" THEN 2000
 Variable:X$ -> $
 TextValue:"BOARD"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:2000
400 IF X$="QUIT" THEN 2500
 Variable:X$ -> $
 TextValue:"QUIT"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:2500
410 IF LEN(X$)<>P9 THEN PRINT "BAD NUMBER OF POSITIONS.":GOTO 380
 Variable:X$ -> $
 FunctionLen:LEN($) -> .
 Variable:P9 -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 TextValue:"BAD NUMBER OF POSITIONS."
 CarriageControl:NL
 LineNumber:380
420 REM     UNPACK X$ INTO G$(1-P9)
 Remark:    UNPACK X$ INTO G$(1-P9)
430 FOR X=1 TO P9
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P9 -> ."]
440 FOR Y=1 TO C9
 WARNING: FOR/NEXT nesting exceeds limit 3
 control: Variable:Y -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:C9 -> ."]
450 IF MID$(X$,X,1)=MID$(L$,Y,1) THEN 480
 Variable:X$ -> $
 Variable:X -> .
 NumericValue:1
 FunctionMid:MID$($,.,.) -> $
 Variable:L$ -> $
 Variable:Y -> .
 NumericValue:1
 FunctionMid:MID$($,.,.) -> $
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:480
460 NEXT Y
 Variable:Y -> .
470 PRINT "'"; MID$(X$,X,1); "' IS UNRECOGNIZED.":GOTO 380
 TextValue:"'"
 CarriageControl:;
 Variable:X$ -> $
 Variable:X -> .
 NumericValue:1
 FunctionMid:MID$($,.,.) -> $
 CarriageControl:;
 TextValue:"' IS UNRECOGNIZED."
 CarriageControl:NL
 LineNumber:380
480 G$(X)=MID$(X$,X,1)
 Variable:X -> .
 Variable:G$(.) -> $
 Variable:X$ -> $
 Variable:X -> .
 NumericValue:1
 FunctionMid:MID$($,.,.) -> $
 AssignmentOperator:= $ -> $
490 NEXT X
 Variable:X -> .
500 REM     NOW WE CONVERT Q(1-P9) INTO A$(1-P9) [ACTUAL GUESS]
 Remark:    NOW WE CONVERT Q(1-P9) INTO A$(1-P9) [ACTUAL GUESS]
510 GOSUB 4000
 LineNumber:4000
520 REM     AND GET NUMBER OF BLACKS AND WHITES
 Remark:    AND GET NUMBER OF BLACKS AND WHITES
530 GOSUB 4500
 LineNumber:4500
540 IF B=P9 THEN 630
 Variable:B -> .
 Variable:P9 -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:630
550 REM     TELL HUMAN RESULTS
 Remark:    TELL HUMAN RESULTS
560 PRINT "YOU HAVE ";B;" BLACKS AND ";W;" WHITES."
 TextValue:"YOU HAVE "
 CarriageControl:;
 Variable:B -> .
 CarriageControl:;
 TextValue:" BLACKS AND "
 CarriageControl:;
 Variable:W -> .
 CarriageControl:;
 TextValue:" WHITES."
 CarriageControl:NL
570 REM     SAVE ALL THIS STUFF FOR BOARD PRINTOUT LATER
 Remark:    SAVE ALL THIS STUFF FOR BOARD PRINTOUT LATER
580 S$(M)=X$
 Variable:M -> .
 Variable:S$(.) -> $
 Variable:X$ -> $
 AssignmentOperator:= $ -> $
590 S(M,1)=B
 Variable:M -> .
 NumericValue:1
 Variable:S(.,.) -> .
 Variable:B -> .
 AssignmentOperator:= . -> .
600 S(M,2)=W
 Variable:M -> .
 NumericValue:2
 Variable:S(.,.) -> .
 Variable:W -> .
 AssignmentOperator:= . -> .
610 NEXT M
 Variable:M -> .
620 PRINT "YOU RAN OUT OF MOVES!  THAT'S ALL YOU GET!":GOTO 640
 TextValue:"YOU RAN OUT OF MOVES!  THAT'S ALL YOU GET!"
 CarriageControl:NL
 LineNumber:640
622 GOSUB 4000
 LineNumber:4000
623 PRINT "THE ACTUAL COMBINATION WAS: ";
 TextValue:"THE ACTUAL COMBINATION WAS: "
 CarriageControl:;
624 FOR X=1 TO P9
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P9 -> ."]
625 PRINT A$(X);
 Variable:X -> .
 Variable:A$(.) -> $
 CarriageControl:;
626 NEXT X
 Variable:X -> .
627 PRINT
 CarriageControl:NL
630 PRINT "YOU GUESSED IT IN ";M;" MOVES!"
 TextValue:"YOU GUESSED IT IN "
 CarriageControl:;
 Variable:M -> .
 CarriageControl:;
 TextValue:" MOVES!"
 CarriageControl:NL
640 H=H+M
 Variable:H -> .
 Variable:H -> .
 Variable:M -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
650 GOSUB 5000
 LineNumber:5000
660 REM
 Remark:
670 REM     NOW COMPUTER GUESSES
 Remark:    NOW COMPUTER GUESSES
680 REM
 Remark:
690 FOR X=1 TO P
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P -> ."]
700 I(X)=1
 Variable:X -> .
 Variable:I(.) -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
710 NEXT X
 Variable:X -> .
720 PRINT "NOW I GUESS.  THINK OF A COMBINATION."
 TextValue:"NOW I GUESS.  THINK OF A COMBINATION."
 CarriageControl:NL
730 INPUT "HIT RETURN WHEN READY:";X$
 Variable:X$ -> $
740 FOR M=1 TO 10
 control: Variable:M -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:10"]
750 GOSUB 3000
 LineNumber:3000
760 REM     FIND A GUESS
 Remark:    FIND A GUESS
770 G=INT(P*RND(1)+1)
 Variable:G -> .
 Variable:P -> .
 NumericValue:1
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
780 IF I(G)=1 THEN 890
 Variable:G -> .
 Variable:I(.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:890
790 FOR X=G TO P
 control: Variable:X -> .
 start:   ["Variable:G -> ."]
 end:     ["Variable:P -> ."]
800 IF I(X)=1 THEN 880
 Variable:X -> .
 Variable:I(.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:880
810 NEXT X
 Variable:X -> .
820 FOR X=1 TO G
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:G -> ."]
830 IF I(X)=1 THEN 880
 Variable:X -> .
 Variable:I(.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:880
840 NEXT X
 Variable:X -> .
850 PRINT "YOU HAVE GIVEN ME INCONSISTENT INFORMATION."
 TextValue:"YOU HAVE GIVEN ME INCONSISTENT INFORMATION."
 CarriageControl:NL
860 PRINT "TRY AGAIN, AND THIS TIME PLEASE BE MORE CAREFUL."
 TextValue:"TRY AGAIN, AND THIS TIME PLEASE BE MORE CAREFUL."
 CarriageControl:NL
870 GOTO 660
 LineNumber:660
880 G=X
 Variable:G -> .
 Variable:X -> .
 AssignmentOperator:= . -> .
890 REM     NOW WE CONVERT GUESS #G INTO G$
 Remark:    NOW WE CONVERT GUESS #G INTO G$
900 FOR X=1 TO G
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:G -> ."]
910 GOSUB 3500
 LineNumber:3500
920 NEXT X
 Variable:X -> .
930 GOSUB 6000
 LineNumber:6000
940 PRINT "MY GUESS IS: ";
 TextValue:"MY GUESS IS: "
 CarriageControl:;
950 FOR X=1 TO P9
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P9 -> ."]
960 PRINT H$(X);
 Variable:X -> .
 Variable:H$(.) -> $
 CarriageControl:;
970 NEXT X
 Variable:X -> .
980 INPUT "  BLACKS, WHITES ";B1,W1
 Variable:B1 -> .
 Variable:W1 -> .
990 IF B1=P9 THEN 1120
 Variable:B1 -> .
 Variable:P9 -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1120
1000 GOSUB 3000
 LineNumber:3000
1010 FOR X=1 TO P
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P -> ."]
1020 GOSUB 3500
 LineNumber:3500
1030 IF I(X)=0 THEN 1070
 Variable:X -> .
 Variable:I(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1070
1035 GOSUB 6500
 LineNumber:6500
1040 GOSUB 4000
 LineNumber:4000
1050 GOSUB 4500
 LineNumber:4500
1060 IF B1<>B OR W1<>W THEN I(X)=0
 Variable:B1 -> .
 Variable:B -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 Variable:W1 -> .
 Variable:W -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 Variable:X -> .
 Variable:I(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1070 NEXT X
 Variable:X -> .
1080 NEXT M
 Variable:M -> .
1090 PRINT "I USED UP ALL MY MOVES!"
 TextValue:"I USED UP ALL MY MOVES!"
 CarriageControl:NL
1100 PRINT "I GUESS MY CPU IS JUST HAVING AN OFF DAY."
 TextValue:"I GUESS MY CPU IS JUST HAVING AN OFF DAY."
 CarriageControl:NL
1110 GOTO 1130
 LineNumber:1130
1120 PRINT "I GOT IT IN ";M;" MOVES!"
 TextValue:"I GOT IT IN "
 CarriageControl:;
 Variable:M -> .
 CarriageControl:;
 TextValue:" MOVES!"
 CarriageControl:NL
1130 C=C+M
 Variable:C -> .
 Variable:C -> .
 Variable:M -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1140 GOSUB 5000
 LineNumber:5000
1150 NEXT R
 Variable:R -> .
1160 PRINT "GAME OVER"
 TextValue:"GAME OVER"
 CarriageControl:NL
1170 PRINT "FINAL SCORE:"
 TextValue:"FINAL SCORE:"
 CarriageControl:NL
1180 GOSUB 5040
 LineNumber:5040
1190 STOP
 
2000 REM
 Remark:
2010 REM     BOARD PRINTOUT ROUTINE
 Remark:    BOARD PRINTOUT ROUTINE
2020 REM
 Remark:
2025 PRINT
 CarriageControl:NL
2030 PRINT "BOARD"
 TextValue:"BOARD"
 CarriageControl:NL
2040 PRINT "MOVE     GUESS          BLACK     WHITE"
 TextValue:"MOVE     GUESS          BLACK     WHITE"
 CarriageControl:NL
2050 FOR Z=1 TO M-1
 control: Variable:Z -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:M -> .", "NumericValue:1", "BinaryOperatorMinus:-(.,.) -> ."]
2060 PRINT Z;TAB(9);S$(Z);TAB(25);S(Z,1);TAB(35);S(Z,2)
 Variable:Z -> .
 CarriageControl:;
 NumericValue:9
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 Variable:Z -> .
 Variable:S$(.) -> $
 CarriageControl:;
 NumericValue:25
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 Variable:Z -> .
 NumericValue:1
 Variable:S(.,.) -> .
 CarriageControl:;
 NumericValue:35
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 Variable:Z -> .
 NumericValue:2
 Variable:S(.,.) -> .
 CarriageControl:NL
2070 NEXT Z
 Variable:Z -> .
2075 PRINT
 CarriageControl:NL
2080 GOTO 380
 LineNumber:380
2500 REM
 Remark:
2510 REM     QUIT ROUTINE
 Remark:    QUIT ROUTINE
2520 REM
 Remark:
2530 PRINT "QUITTER!  MY COMBINATION WAS: ";
 TextValue:"QUITTER!  MY COMBINATION WAS: "
 CarriageControl:;
2535 GOSUB 4000
 LineNumber:4000
2540 FOR X=1 TO P9
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P9 -> ."]
2550 PRINT A$(X);
 Variable:X -> .
 Variable:A$(.) -> $
 CarriageControl:;
2560 NEXT X
 Variable:X -> .
2565 PRINT
 CarriageControl:NL
2570 PRINT "GOOD BYE"
 TextValue:"GOOD BYE"
 CarriageControl:NL
2580 STOP
 
3000 REM
 Remark:
3010 REM     INITIALIZE Q(1-P9) TO ZEROS
 Remark:    INITIALIZE Q(1-P9) TO ZEROS
3020 REM
 Remark:
3030 FOR S=1 TO P9
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P9 -> ."]
3040 Q(S)=0
 Variable:S -> .
 Variable:Q(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3050 NEXT S
 Variable:S -> .
3060 RETURN
 
3500 REM
 Remark:
3510 REM     INCREMENT Q(1-P9)
 Remark:    INCREMENT Q(1-P9)
3520 REM
 Remark:
3522 IF Q(1)>0 THEN 3530
 NumericValue:1
 Variable:Q(.) -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3530
3524 REM  IF ZERO, THIS IS OUR FIRST INCREMENT: MAKE ALL ONES
 Remark: IF ZERO, THIS IS OUR FIRST INCREMENT: MAKE ALL ONES
3526 FOR S=1 TO P9
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P9 -> ."]
3527 Q(S)=1
 Variable:S -> .
 Variable:Q(.) -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
3528 NEXT S
 Variable:S -> .
3529 RETURN
 
3530 Q=1
 Variable:Q -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
3540 Q(Q)=Q(Q)+1
 Variable:Q -> .
 Variable:Q(.) -> .
 Variable:Q -> .
 Variable:Q(.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3550 IF Q(Q)<=C9 THEN RETURN
 Variable:Q -> .
 Variable:Q(.) -> .
 Variable:C9 -> .
 BinaryOperatorLessEqual:<=(.,.) -> ?
 
3560 Q(Q)=1
 Variable:Q -> .
 Variable:Q(.) -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
3570 Q=Q+1
 Variable:Q -> .
 Variable:Q -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3580 GOTO 3540
 LineNumber:3540
4000 REM
 Remark:
4010 REM     CONVERT Q(1-P9) TO A$(1-P9)
 Remark:    CONVERT Q(1-P9) TO A$(1-P9)
4020 REM
 Remark:
4030 FOR S=1 TO P9
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P9 -> ."]
4040 A$(S)=MID$(L$,Q(S),1)
 Variable:S -> .
 Variable:A$(.) -> $
 Variable:L$ -> $
 Variable:S -> .
 Variable:Q(.) -> .
 NumericValue:1
 FunctionMid:MID$($,.,.) -> $
 AssignmentOperator:= $ -> $
4050 NEXT S
 Variable:S -> .
4060 RETURN
 
4500 REM
 Remark:
4510 REM     GET NUMBER OF BLACKS (B) AND WHITES (W)
 Remark:    GET NUMBER OF BLACKS (B) AND WHITES (W)
4520 REM     MASHES G$ AND A$ IN THE PROCESS
 Remark:    MASHES G$ AND A$ IN THE PROCESS
4530 REM
 Remark:
4540 B=0:W=0:F=0
 Variable:B -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 Variable:W -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 Variable:F -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
4550 FOR S=1 TO P9
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P9 -> ."]
4560 IF G$(S)<>A$(S) THEN 4620
 Variable:S -> .
 Variable:G$(.) -> $
 Variable:S -> .
 Variable:A$(.) -> $
 BinaryOperatorNotEqual:<>($,$) -> ?
 LineNumber:4620
4570 B=B+1
 Variable:B -> .
 Variable:B -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
4580 G$(S)=CHR$(F)
 Variable:S -> .
 Variable:G$(.) -> $
 Variable:F -> .
 FunctionChr:CHR$(.) -> $
 AssignmentOperator:= $ -> $
4590 A$(S)=CHR$(F+1)
 Variable:S -> .
 Variable:A$(.) -> $
 Variable:F -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionChr:CHR$(.) -> $
 AssignmentOperator:= $ -> $
4600 F=F+2
 Variable:F -> .
 Variable:F -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
4610 GOTO 4660
 LineNumber:4660
4620 FOR T=1 TO P9
 control: Variable:T -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P9 -> ."]
4630 IF G$(S)<>A$(T) THEN 4650
 Variable:S -> .
 Variable:G$(.) -> $
 Variable:T -> .
 Variable:A$(.) -> $
 BinaryOperatorNotEqual:<>($,$) -> ?
 LineNumber:4650
4640 IF G$(T)=A$(T) THEN 4650
 Variable:T -> .
 Variable:G$(.) -> $
 Variable:T -> .
 Variable:A$(.) -> $
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4650
4645 W=W+1:A$(T)=CHR$(F):G$(S)=CHR$(F+1):F=F+2:GOTO 4660
 Variable:W -> .
 Variable:W -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:T -> .
 Variable:A$(.) -> $
 Variable:F -> .
 FunctionChr:CHR$(.) -> $
 AssignmentOperator:= $ -> $
 Variable:S -> .
 Variable:G$(.) -> $
 Variable:F -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionChr:CHR$(.) -> $
 AssignmentOperator:= $ -> $
 Variable:F -> .
 Variable:F -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 LineNumber:4660
4650 NEXT T
 Variable:T -> .
4660 NEXT S
 Variable:S -> .
4670 RETURN
 
5000 REM
 Remark:
5010 REM     PRINT SCORE
 Remark:    PRINT SCORE
5020 REM
 Remark:
5030 PRINT "SCORE:"
 TextValue:"SCORE:"
 CarriageControl:NL
5040 PRINT "     COMPUTER ";C
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 TextValue:"     COMPUTER "
 CarriageControl:;
 Variable:C -> .
 CarriageControl:NL
5050 PRINT "     HUMAN    ";H
 WARNING: Multiple GOSUB entry points
 TextValue:"     HUMAN    "
 CarriageControl:;
 Variable:H -> .
 CarriageControl:NL
5060 PRINT
 WARNING: Multiple GOSUB entry points
 CarriageControl:NL
5070 RETURN
 WARNING: Multiple GOSUB entry points
 
5500 REM
 Remark:
5510 REM     CONVERT Q(1-P9) INTO G$(1-P9)
 Remark:    CONVERT Q(1-P9) INTO G$(1-P9)
5520 REM
 Remark:
5530 FOR S=1 TO P9
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P9 -> ."]
5540 G$(S)=MID$(L$,Q(S),1)
 Variable:S -> .
 Variable:G$(.) -> $
 Variable:L$ -> $
 Variable:S -> .
 Variable:Q(.) -> .
 NumericValue:1
 FunctionMid:MID$($,.,.) -> $
 AssignmentOperator:= $ -> $
5550 NEXT S
 Variable:S -> .
5560 RETURN
 
6000 REM
 Remark:
6010 REM     CONVERT Q(1-P9) TO H$(1-P9)
 Remark:    CONVERT Q(1-P9) TO H$(1-P9)
6020 REM
 Remark:
6030 FOR S=1 TO P9
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P9 -> ."]
6040 H$(S)=MID$(L$,Q(S),1)
 Variable:S -> .
 Variable:H$(.) -> $
 Variable:L$ -> $
 Variable:S -> .
 Variable:Q(.) -> .
 NumericValue:1
 FunctionMid:MID$($,.,.) -> $
 AssignmentOperator:= $ -> $
6050 NEXT S
 Variable:S -> .
6060 RETURN
 
6500 REM
 Remark:
6510 REM     COPY H$ INTO G$
 Remark:    COPY H$ INTO G$
6520 REM
 Remark:
6530 FOR S=1 TO P9
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P9 -> ."]
6540 G$(S)=H$(S)
 Variable:S -> .
 Variable:G$(.) -> $
 Variable:S -> .
 Variable:H$(.) -> $
 AssignmentOperator:= $ -> $
6550 NEXT S
 Variable:S -> .
6560 RETURN
 
8000 REM     PROGRAM DATA FOR COLOR NAMES
 Remark:    PROGRAM DATA FOR COLOR NAMES
8010 DATA "BLACK","WHITE","RED","GREEN","ORANGE","YELLOW","PURPLE","TAN"
 TextValue:"BLACK"
 TextValue:"WHITE"
 TextValue:"RED"
 TextValue:"GREEN"
 TextValue:"ORANGE"
 TextValue:"YELLOW"
 TextValue:"PURPLE"
 TextValue:"TAN"
9998 REM   ...WE'RE SORRY BUT IT'S TIME TO GO...
 Remark:  ...WE'RE SORRY BUT IT'S TIME TO GO...
9999 END
 

