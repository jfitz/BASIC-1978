Statistics:

Number of lines: 232
Number of valid statements: 195
Number of comments: 52
Number of executable statements: 194

Complexity:

Comment density: 0.267
Comprehension effort: 578
McCabe complexity: 50
Halstead complexity:
 length: 795
 volume: 4110.535
 difficulty: 38.054
 effort: 156421.021
 language: 2.839
 intelligence: 108.019
 time: 144.834

2 (0 4) PRINT TAB(30); "MASTERMIND"
  Origs: :start
  Dests: 4:auto
4 (0 4) PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 2:auto
  Dests: 6:auto
6 (0 2) PRINT
  (0 2) PRINT
  (0 2) PRINT
  Origs: 4:auto
  Dests: 80:auto
10 (0 1) REM
  Origs: 
  Dests: 
20 (0 1) REM     MASTERMIND II
  Origs: 
  Dests: 
30 (0 1) REM     STEVE NORTH
  Origs: 
  Dests: 
40 (0 1) REM     CREATIVE COMPUTING
  Origs: 
  Dests: 
50 (0 1) REM     PO BOX 789-M MORRISTOWN NEW JERSEY 07960
  Origs: 
  Dests: 
60 (0 1) REM
  Origs: 
  Dests: 
70 (0 1) REM
  Origs: 
  Dests: 
80 (1 2) INPUT "NUMBER OF COLORS"; C9
  Origs: 6:auto, 90:goto
  Dests: 90:auto
90 (1 5) IF C9 > 8 THEN PRINT "NO MORE THAN 8, PLEASE!"
   (0 3) GOTO 80
  Origs: 80:auto
  Dests: 80:goto, 100:auto
100 (1 2) INPUT "NUMBER OF POSITIONS"; P9
  Origs: 90:auto
  Dests: 110:auto
110 (1 2) INPUT "NUMBER OF ROUNDS"; R9
  Origs: 100:auto
  Dests: 120:auto
120 (0 4) P = C9 ^ P9
  Origs: 110:auto
  Dests: 130:auto
130 (0 3) PRINT "TOTAL POSSIBILITIES ="; P
  Origs: 120:auto
  Dests: 140:auto
140 (0 3) H = 0
    (0 3) C = 0
  Origs: 130:auto
  Dests: 150:auto
150 (0 8) DIM Q(P9), S(10, 2), S$(10), A$(P9), G$(P9), I(P), H$(P9)
  Origs: 140:auto
  Dests: 160:auto
160 (0 3) L$ = "BWRGOYPT"
  Origs: 150:auto
  Dests: 170:auto
170 (0 2) PRINT
  Origs: 160:auto
  Dests: 180:auto
180 (0 2) PRINT
  Origs: 170:auto
  Dests: 190:auto
190 (0 2) PRINT "COLOR     LETTER"
  Origs: 180:auto
  Dests: 200:auto
200 (0 2) PRINT "=====     ======"
  Origs: 190:auto
  Dests: 210:auto
210 F(X:210) (1 3) FOR X = 1 TO C9
  Origs: 200:auto
  Dests: 220:fornext, 240:fornext
220 F(X:210) (1 2) READ X$
  Origs: 210:fornext
  Dests: 230:auto
230 F(X:210) (0 6) PRINT X$; TAB(13); MID$(L$, X, 1)
  Origs: 220:auto
  Dests: 240:auto
240 F(X:210) (0 1) NEXT X
  Origs: 210:fornext, 230:auto
  Dests: 250:auto
250 (0 2) PRINT
  Origs: 240:auto
  Dests: 260:auto
260 F(R:260) (1 3) FOR R = 1 TO R9
    WARNING: FORNEXT length exceeds limit 40
  Origs: 250:auto
  Dests: 270:fornext, 1150:fornext
270 F(R:260) (0 2) PRINT
  Origs: 260:fornext
  Dests: 280:auto
280 F(R:260) (0 4) PRINT "ROUND NUMBER"; R; "----"
  Origs: 270:auto
  Dests: 290:auto
290 F(R:260) (0 2) PRINT
  Origs: 280:auto
  Dests: 300:auto
300 F(R:260) (0 2) PRINT "GUESS MY COMBINATION."
    F(R:260) (0 2) PRINT
  Origs: 290:auto
  Dests: 320:auto
310 (0 1) REM     GET A COMBINATION
  Origs: 
  Dests: 
320 F(R:260) (0 4) A = INT(P * RND(1) + 1)
  Origs: 300:auto
  Dests: 330:auto
330 F(R:260) (0 2) GOSUB 3000
  Origs: 320:auto
  Dests: 340:auto, 3030:gosub
340 F(R:260,X:340) (1 3) FOR X = 1 TO A
  Origs: 330:auto
  Dests: 350:fornext, 360:fornext
350 F(R:260,X:340) (0 2) GOSUB 3500
  Origs: 340:fornext
  Dests: 360:auto, 3522:gosub
360 F(R:260,X:340) (0 1) NEXT X
  Origs: 340:fornext, 350:auto
  Dests: 370:auto
370 F(R:260,M:370) (1 3) FOR M = 1 TO 10
  Origs: 360:auto
  Dests: 380:fornext, 610:fornext
380 F(R:260,M:370) (0 4) PRINT "MOVE # "; M; " GUESS ";
    F(R:260,M:370) (1 2) INPUT X$
  Origs: 370:fornext, 410:goto, 470:goto, 2080:goto
  Dests: 390:auto
390 F(R:260,M:370) (1 4) IF X$ = "BOARD" THEN 2000
    WARNING: Transfer in/out of FOR/NEXT 2025
  Origs: 380:auto
  Dests: 400:auto, 2025:ifthen
400 F(R:260,M:370) (1 4) IF X$ = "QUIT" THEN 2500
    WARNING: Transfer in/out of FOR/NEXT 2530
  Origs: 390:auto
  Dests: 410:auto, 2530:ifthen
410 F(R:260,M:370) (1 6) IF LEN(X$) <> P9 THEN PRINT "BAD NUMBER OF POSITIONS."
    F(R:260,M:370) (0 3) GOTO 380
  Origs: 400:auto
  Dests: 380:goto, 430:auto
420 (0 1) REM     UNPACK X$ INTO G$(1-P9)
  Origs: 
  Dests: 
430 F(R:260,M:370,X:430) (1 3) FOR X = 1 TO P9
  Origs: 410:auto
  Dests: 440:fornext, 490:fornext
440 F(R:260,M:370,X:430,Y:440) (1 3) FOR Y = 1 TO C9
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 430:fornext
  Dests: 450:fornext, 460:fornext
450 F(R:260,M:370,X:430,Y:440) (1 6) IF MID$(X$, X, 1) = MID$(L$, Y, 1) THEN 480
    WARNING: Transfer in/out of FOR/NEXT 480
  Origs: 440:fornext
  Dests: 460:auto, 480:ifthen
460 F(R:260,M:370,X:430,Y:440) (0 1) NEXT Y
  Origs: 440:fornext, 450:auto
  Dests: 470:auto
470 F(R:260,M:370,X:430) (0 5) PRINT "'"; MID$(X$, X, 1); "' IS UNRECOGNIZED."
    F(R:260,M:370,X:430) (0 3) GOTO 380
    WARNING: Transfer in/out of FOR/NEXT 380
  Origs: 460:auto
  Dests: 380:goto
480 F(R:260,M:370,X:430) (0 4) G$(X) = MID$(X$, X, 1)
  Origs: 450:ifthen
  Dests: 490:auto
490 F(R:260,M:370,X:430) (0 1) NEXT X
  Origs: 430:fornext, 480:auto
  Dests: 510:auto
500 (0 1) REM     NOW WE CONVERT Q(1-P9) INTO A$(1-P9) [ACTUAL GUESS]
  Origs: 
  Dests: 
510 F(R:260,M:370) (0 2) GOSUB 4000
  Origs: 490:auto
  Dests: 530:auto, 4030:gosub
520 (0 1) REM     AND GET NUMBER OF BLACKS AND WHITES
  Origs: 
  Dests: 
530 F(R:260,M:370) (0 2) GOSUB 4500
  Origs: 510:auto
  Dests: 540:auto, 4540:gosub
540 F(R:260,M:370) (1 4) IF B = P9 THEN 630
    WARNING: Transfer in/out of FOR/NEXT 630
  Origs: 530:auto
  Dests: 560:auto, 630:ifthen
550 (0 1) REM     TELL HUMAN RESULTS
  Origs: 
  Dests: 
560 F(R:260,M:370) (0 6) PRINT "YOU HAVE "; B; " BLACKS AND "; W; " WHITES."
  Origs: 540:auto
  Dests: 580:auto
570 (0 1) REM     SAVE ALL THIS STUFF FOR BOARD PRINTOUT LATER
  Origs: 
  Dests: 
580 F(R:260,M:370) (0 3) S$(M) = X$
  Origs: 560:auto
  Dests: 590:auto
590 F(R:260,M:370) (0 3) S(M, 1) = B
  Origs: 580:auto
  Dests: 600:auto
600 F(R:260,M:370) (0 3) S(M, 2) = W
  Origs: 590:auto
  Dests: 610:auto
610 F(R:260,M:370) (0 1) NEXT M
  Origs: 370:fornext, 600:auto
  Dests: 620:auto
620 F(R:260) (0 2) PRINT "YOU RAN OUT OF MOVES!  THAT'S ALL YOU GET!"
    F(R:260) (0 2) GOTO 640
  Origs: 610:auto
  Dests: 640:goto
622 F(R:260) (0 2) GOSUB 4000
  Origs: 
  Dests: 623:auto, 4030:gosub
623 F(R:260) (0 2) PRINT "THE ACTUAL COMBINATION WAS: ";
  Origs: 622:auto
  Dests: 624:auto
624 F(R:260,X:624) (1 3) FOR X = 1 TO P9
  Origs: 623:auto
  Dests: 625:fornext, 626:fornext
625 F(R:260,X:624) (0 2) PRINT A$(X);
  Origs: 624:fornext
  Dests: 626:auto
626 F(R:260,X:624) (0 1) NEXT X
  Origs: 624:fornext, 625:auto
  Dests: 627:auto
627 F(R:260) (0 2) PRINT
  Origs: 626:auto
  Dests: 630:auto
630 F(R:260) (0 4) PRINT "YOU GUESSED IT IN "; M; " MOVES!"
  Origs: 540:ifthen, 627:auto
  Dests: 640:auto
640 F(R:260) (0 4) H = H + M
  Origs: 620:goto, 630:auto
  Dests: 650:auto
650 F(R:260) (0 2) GOSUB 5000
  Origs: 640:auto
  Dests: 690:auto, 5030:gosub
660 (0 1) REM
  Origs: 
  Dests: 
670 (0 1) REM     NOW COMPUTER GUESSES
  Origs: 
  Dests: 
680 (0 1) REM
  Origs: 
  Dests: 
690 F(R:260,X:690) (1 3) FOR X = 1 TO P
  Origs: 650:auto, 870:goto
  Dests: 700:fornext, 710:fornext
700 F(R:260,X:690) (0 3) I(X) = 1
  Origs: 690:fornext
  Dests: 710:auto
710 F(R:260,X:690) (0 1) NEXT X
  Origs: 690:fornext, 700:auto
  Dests: 720:auto
720 F(R:260) (0 2) PRINT "NOW I GUESS.  THINK OF A COMBINATION."
  Origs: 710:auto
  Dests: 730:auto
730 F(R:260) (1 2) INPUT "HIT RETURN WHEN READY:"; X$
  Origs: 720:auto
  Dests: 740:auto
740 F(R:260,M:740) (1 3) FOR M = 1 TO 10
  Origs: 730:auto
  Dests: 750:fornext, 1080:fornext
750 F(R:260,M:740) (0 2) GOSUB 3000
  Origs: 740:fornext
  Dests: 770:auto, 3030:gosub
760 (0 1) REM     FIND A GUESS
  Origs: 
  Dests: 
770 F(R:260,M:740) (0 4) G = INT(P * RND(1) + 1)
  Origs: 750:auto
  Dests: 780:auto
780 F(R:260,M:740) (1 4) IF I(G) = 1 THEN 890
  Origs: 770:auto
  Dests: 790:auto, 900:ifthen
790 F(R:260,M:740,X:790) (1 3) FOR X = G TO P
  Origs: 780:auto
  Dests: 800:fornext, 810:fornext
800 F(R:260,M:740,X:790) (1 4) IF I(X) = 1 THEN 880
    WARNING: Transfer in/out of FOR/NEXT 880
  Origs: 790:fornext
  Dests: 810:auto, 880:ifthen
810 F(R:260,M:740,X:790) (0 1) NEXT X
  Origs: 790:fornext, 800:auto
  Dests: 820:auto
820 F(R:260,M:740,X:820) (1 3) FOR X = 1 TO G
  Origs: 810:auto
  Dests: 830:fornext, 840:fornext
830 F(R:260,M:740,X:820) (1 4) IF I(X) = 1 THEN 880
    WARNING: Transfer in/out of FOR/NEXT 880
  Origs: 820:fornext
  Dests: 840:auto, 880:ifthen
840 F(R:260,M:740,X:820) (0 1) NEXT X
  Origs: 820:fornext, 830:auto
  Dests: 850:auto
850 F(R:260,M:740) (0 2) PRINT "YOU HAVE GIVEN ME INCONSISTENT INFORMATION."
  Origs: 840:auto
  Dests: 860:auto
860 F(R:260,M:740) (0 2) PRINT "TRY AGAIN, AND THIS TIME PLEASE BE MORE CAREFUL."
  Origs: 850:auto
  Dests: 870:auto
870 F(R:260,M:740) (0 3) GOTO 660
    WARNING: Transfer in/out of FOR/NEXT 690
  Origs: 860:auto
  Dests: 690:goto
880 F(R:260,M:740) (0 3) G = X
  Origs: 800:ifthen, 830:ifthen
  Dests: 900:auto
890 (0 1) REM     NOW WE CONVERT GUESS #G INTO G$
  Origs: 
  Dests: 
900 F(R:260,M:740,X:900) (1 3) FOR X = 1 TO G
  Origs: 780:ifthen, 880:auto
  Dests: 910:fornext, 920:fornext
910 F(R:260,M:740,X:900) (0 2) GOSUB 3500
  Origs: 900:fornext
  Dests: 920:auto, 3522:gosub
920 F(R:260,M:740,X:900) (0 1) NEXT X
  Origs: 900:fornext, 910:auto
  Dests: 930:auto
930 F(R:260,M:740) (0 2) GOSUB 6000
  Origs: 920:auto
  Dests: 940:auto, 6030:gosub
940 F(R:260,M:740) (0 2) PRINT "MY GUESS IS: ";
  Origs: 930:auto
  Dests: 950:auto
950 F(R:260,M:740,X:950) (1 3) FOR X = 1 TO P9
  Origs: 940:auto
  Dests: 960:fornext, 970:fornext
960 F(R:260,M:740,X:950) (0 2) PRINT H$(X);
  Origs: 950:fornext
  Dests: 970:auto
970 F(R:260,M:740,X:950) (0 1) NEXT X
  Origs: 950:fornext, 960:auto
  Dests: 980:auto
980 F(R:260,M:740) (2 3) INPUT "  BLACKS, WHITES "; B1, W1
  Origs: 970:auto
  Dests: 990:auto
990 F(R:260,M:740) (1 4) IF B1 = P9 THEN 1120
    WARNING: Transfer in/out of FOR/NEXT 1120
  Origs: 980:auto
  Dests: 1000:auto, 1120:ifthen
1000 F(R:260,M:740) (0 2) GOSUB 3000
  Origs: 990:auto
  Dests: 1010:auto, 3030:gosub
1010 F(R:260,M:740,X:1010) (1 3) FOR X = 1 TO P
  Origs: 1000:auto
  Dests: 1020:fornext, 1070:fornext
1020 F(R:260,M:740,X:1010) (0 2) GOSUB 3500
  Origs: 1010:fornext
  Dests: 1030:auto, 3522:gosub
1030 F(R:260,M:740,X:1010) (1 4) IF I(X) = 0 THEN 1070
  Origs: 1020:auto
  Dests: 1035:auto, 1070:ifthen
1035 F(R:260,M:740,X:1010) (0 2) GOSUB 6500
  Origs: 1030:auto
  Dests: 1040:auto, 6530:gosub
1040 F(R:260,M:740,X:1010) (0 2) GOSUB 4000
  Origs: 1035:auto
  Dests: 1050:auto, 4030:gosub
1050 F(R:260,M:740,X:1010) (0 2) GOSUB 4500
  Origs: 1040:auto
  Dests: 1060:auto, 4540:gosub
1060 F(R:260,M:740,X:1010) (1 9) IF B1 <> B OR W1 <> W THEN I(X) = 0
  Origs: 1050:auto
  Dests: 1070:auto
1070 F(R:260,M:740,X:1010) (0 1) NEXT X
  Origs: 1010:fornext, 1030:ifthen, 1060:auto
  Dests: 1080:auto
1080 F(R:260,M:740) (0 1) NEXT M
  Origs: 740:fornext, 1070:auto
  Dests: 1090:auto
1090 F(R:260) (0 2) PRINT "I USED UP ALL MY MOVES!"
  Origs: 1080:auto
  Dests: 1100:auto
1100 F(R:260) (0 2) PRINT "I GUESS MY CPU IS JUST HAVING AN OFF DAY."
  Origs: 1090:auto
  Dests: 1110:auto
1110 F(R:260) (0 2) GOTO 1130
  Origs: 1100:auto
  Dests: 1130:goto
1120 F(R:260) (0 4) PRINT "I GOT IT IN "; M; " MOVES!"
  Origs: 990:ifthen
  Dests: 1130:auto
1130 F(R:260) (0 4) C = C + M
  Origs: 1110:goto, 1120:auto
  Dests: 1140:auto
1140 F(R:260) (0 2) GOSUB 5000
  Origs: 1130:auto
  Dests: 1150:auto, 5030:gosub
1150 F(R:260) (0 1) NEXT R
  Origs: 260:fornext, 1140:auto
  Dests: 1160:auto
1160 (0 2) PRINT "GAME OVER"
  Origs: 1150:auto
  Dests: 1170:auto
1170 (0 2) PRINT "FINAL SCORE:"
  Origs: 1160:auto
  Dests: 1180:auto
1180 (0 2) GOSUB 5040
  Origs: 1170:auto
  Dests: 1190:auto, 5040:gosub
1190 (0 1) STOP
  Origs: 1180:auto
  Dests: :stop
2000 (0 1) REM
  Origs: 
  Dests: 
2010 (0 1) REM     BOARD PRINTOUT ROUTINE
  Origs: 
  Dests: 
2020 (0 1) REM
  Origs: 
  Dests: 
2025 (0 2) PRINT
  Origs: 390:ifthen
  Dests: 2030:auto
2030 (0 2) PRINT "BOARD"
  Origs: 2025:auto
  Dests: 2040:auto
2040 (0 2) PRINT "MOVE     GUESS          BLACK     WHITE"
  Origs: 2030:auto
  Dests: 2050:auto
2050 F(Z:2050) (1 4) FOR Z = 1 TO M - 1
  Origs: 2040:auto
  Dests: 2060:fornext, 2070:fornext
2060 F(Z:2050) (0 11) PRINT Z; TAB(9); S$(Z); TAB(25); S(Z, 1); TAB(35); S(Z, 2)
  Origs: 2050:fornext
  Dests: 2070:auto
2070 F(Z:2050) (0 1) NEXT Z
  Origs: 2050:fornext, 2060:auto
  Dests: 2075:auto
2075 (0 2) PRINT
  Origs: 2070:auto
  Dests: 2080:auto
2080 (0 3) GOTO 380
     WARNING: Transfer in/out of FOR/NEXT 380
  Origs: 2075:auto
  Dests: 380:goto
2500 (0 1) REM
  Origs: 
  Dests: 
2510 (0 1) REM     QUIT ROUTINE
  Origs: 
  Dests: 
2520 (0 1) REM
  Origs: 
  Dests: 
2530 (0 2) PRINT "QUITTER!  MY COMBINATION WAS: ";
  Origs: 400:ifthen
  Dests: 2535:auto
2535 (0 2) GOSUB 4000
  Origs: 2530:auto
  Dests: 2540:auto, 4030:gosub
2540 F(X:2540) (1 3) FOR X = 1 TO P9
  Origs: 2535:auto
  Dests: 2550:fornext, 2560:fornext
2550 F(X:2540) (0 2) PRINT A$(X);
  Origs: 2540:fornext
  Dests: 2560:auto
2560 F(X:2540) (0 1) NEXT X
  Origs: 2540:fornext, 2550:auto
  Dests: 2565:auto
2565 (0 2) PRINT
  Origs: 2560:auto
  Dests: 2570:auto
2570 (0 2) PRINT "GOOD BYE"
  Origs: 2565:auto
  Dests: 2580:auto
2580 (0 1) STOP
  Origs: 2570:auto
  Dests: :stop
3000 (0 1) REM
  Origs: 
  Dests: 
3010 (0 1) REM     INITIALIZE Q(1-P9) TO ZEROS
  Origs: 
  Dests: 
3020 (0 1) REM
  Origs: 
  Dests: 
3030 G(3030) F(S:3030) (1 3) FOR S = 1 TO P9
  Origs: 330:gosub, 750:gosub, 1000:gosub
  Dests: 3040:fornext, 3050:fornext
3040 G(3030) F(S:3030) (0 3) Q(S) = 0
  Origs: 3030:fornext
  Dests: 3050:auto
3050 G(3030) F(S:3030) (0 1) NEXT S
  Origs: 3030:fornext, 3040:auto
  Dests: 3060:auto
3060 G(3030) (0 1) RETURN
  Origs: 3050:auto
  Dests: 
3500 (0 1) REM
  Origs: 
  Dests: 
3510 (0 1) REM     INCREMENT Q(1-P9)
  Origs: 
  Dests: 
3520 (0 1) REM
  Origs: 
  Dests: 
3522 G(3522) (1 4) IF Q(1) > 0 THEN 3530
  Origs: 350:gosub, 910:gosub, 1020:gosub
  Dests: 3526:auto, 3530:ifthen
3524 (0 1) REM  IF ZERO, THIS IS OUR FIRST INCREMENT: MAKE ALL ONES
  Origs: 
  Dests: 
3526 G(3522) F(S:3526) (1 3) FOR S = 1 TO P9
  Origs: 3522:auto
  Dests: 3527:fornext, 3528:fornext
3527 G(3522) F(S:3526) (0 3) Q(S) = 1
  Origs: 3526:fornext
  Dests: 3528:auto
3528 G(3522) F(S:3526) (0 1) NEXT S
  Origs: 3526:fornext, 3527:auto
  Dests: 3529:auto
3529 G(3522) (0 1) RETURN
  Origs: 3528:auto
  Dests: 
3530 G(3522) (0 3) Q = 1
  Origs: 3522:ifthen
  Dests: 3540:auto
3540 G(3522) (0 4) Q(Q) = Q(Q) + 1
  Origs: 3530:auto, 3580:goto
  Dests: 3550:auto
3550 G(3522) (1 4) IF Q(Q) <= C9 THEN RETURN
  Origs: 3540:auto
  Dests: 3560:auto
3560 G(3522) (0 3) Q(Q) = 1
  Origs: 3550:auto
  Dests: 3570:auto
3570 G(3522) (0 4) Q = Q + 1
  Origs: 3560:auto
  Dests: 3580:auto
3580 G(3522) (0 3) GOTO 3540
  Origs: 3570:auto
  Dests: 3540:goto
4000 (0 1) REM
  Origs: 
  Dests: 
4010 (0 1) REM     CONVERT Q(1-P9) TO A$(1-P9)
  Origs: 
  Dests: 
4020 (0 1) REM
  Origs: 
  Dests: 
4030 G(4030) F(S:4030) (1 3) FOR S = 1 TO P9
  Origs: 510:gosub, 622:gosub, 1040:gosub, 2535:gosub
  Dests: 4040:fornext, 4050:fornext
4040 G(4030) F(S:4030) (0 4) A$(S) = MID$(L$, Q(S), 1)
  Origs: 4030:fornext
  Dests: 4050:auto
4050 G(4030) F(S:4030) (0 1) NEXT S
  Origs: 4030:fornext, 4040:auto
  Dests: 4060:auto
4060 G(4030) (0 1) RETURN
  Origs: 4050:auto
  Dests: 
4500 (0 1) REM
  Origs: 
  Dests: 
4510 (0 1) REM     GET NUMBER OF BLACKS (B) AND WHITES (W)
  Origs: 
  Dests: 
4520 (0 1) REM     MASHES G$ AND A$ IN THE PROCESS
  Origs: 
  Dests: 
4530 (0 1) REM
  Origs: 
  Dests: 
4540 G(4540) (0 3) B = 0
     G(4540) (0 3) W = 0
     G(4540) (0 3) F = 0
  Origs: 530:gosub, 1050:gosub
  Dests: 4550:auto
4550 G(4540) F(S:4550) (1 3) FOR S = 1 TO P9
  Origs: 4540:auto
  Dests: 4560:fornext, 4660:fornext
4560 G(4540) F(S:4550) (1 4) IF G$(S) <> A$(S) THEN 4620
  Origs: 4550:fornext
  Dests: 4570:auto, 4620:ifthen
4570 G(4540) F(S:4550) (0 4) B = B + 1
  Origs: 4560:auto
  Dests: 4580:auto
4580 G(4540) F(S:4550) (0 4) G$(S) = CHR$(F)
  Origs: 4570:auto
  Dests: 4590:auto
4590 G(4540) F(S:4550) (0 4) A$(S) = CHR$(F + 1)
  Origs: 4580:auto
  Dests: 4600:auto
4600 G(4540) F(S:4550) (0 4) F = F + 2
  Origs: 4590:auto
  Dests: 4610:auto
4610 G(4540) F(S:4550) (0 2) GOTO 4660
  Origs: 4600:auto
  Dests: 4660:goto
4620 G(4540) F(S:4550,T:4620) (1 3) FOR T = 1 TO P9
  Origs: 4560:ifthen
  Dests: 4630:fornext, 4650:fornext
4630 G(4540) F(S:4550,T:4620) (1 4) IF G$(S) <> A$(T) THEN 4650
  Origs: 4620:fornext
  Dests: 4640:auto, 4650:ifthen
4640 G(4540) F(S:4550,T:4620) (1 4) IF G$(T) = A$(T) THEN 4650
  Origs: 4630:auto
  Dests: 4645:auto, 4650:ifthen
4645 G(4540) F(S:4550,T:4620) (0 4) W = W + 1
     G(4540) F(S:4550,T:4620) (0 4) A$(T) = CHR$(F)
     G(4540) F(S:4550,T:4620) (0 4) G$(S) = CHR$(F + 1)
     G(4540) F(S:4550,T:4620) (0 4) F = F + 2
     G(4540) F(S:4550,T:4620) (0 2) GOTO 4660
     WARNING: Transfer in/out of FOR/NEXT 4660
  Origs: 4640:auto
  Dests: 4660:goto
4650 G(4540) F(S:4550,T:4620) (0 1) NEXT T
  Origs: 4620:fornext, 4630:ifthen, 4640:ifthen
  Dests: 4660:auto
4660 G(4540) F(S:4550) (0 1) NEXT S
  Origs: 4550:fornext, 4610:goto, 4645:goto, 4650:auto
  Dests: 4670:auto
4670 G(4540) (0 1) RETURN
  Origs: 4660:auto
  Dests: 
5000 (0 1) REM
  Origs: 
  Dests: 
5010 (0 1) REM     PRINT SCORE
  Origs: 
  Dests: 
5020 (0 1) REM
  Origs: 
  Dests: 
5030 G(5030) (0 2) PRINT "SCORE:"
  Origs: 650:gosub, 1140:gosub
  Dests: 5040:auto
5040 G(5030,5040) (0 3) PRINT "     COMPUTER "; C
     WARNING: Inconsistent GOSUB origins
     WARNING: Multiple GOSUB entry points
  Origs: 1180:gosub, 5030:auto
  Dests: 5050:auto
5050 G(5030,5040) (0 3) PRINT "     HUMAN    "; H
     WARNING: Multiple GOSUB entry points
  Origs: 5040:auto
  Dests: 5060:auto
5060 G(5030,5040) (0 2) PRINT
     WARNING: Multiple GOSUB entry points
  Origs: 5050:auto
  Dests: 5070:auto
5070 G(5030,5040) (0 1) RETURN
     WARNING: Multiple GOSUB entry points
  Origs: 5060:auto
  Dests: 
5500 (0 1) REM
  Origs: 
  Dests: 
5510 (0 1) REM     CONVERT Q(1-P9) INTO G$(1-P9)
  Origs: 
  Dests: 
5520 (0 1) REM
  Origs: 
  Dests: 
5530 F(S:5530) (1 3) FOR S = 1 TO P9
  Origs: 
  Dests: 5540:fornext, 5550:fornext
5540 F(S:5530) (0 4) G$(S) = MID$(L$, Q(S), 1)
  Origs: 5530:fornext
  Dests: 5550:auto
5550 F(S:5530) (0 1) NEXT S
  Origs: 5530:fornext, 5540:auto
  Dests: 5560:auto
5560 (0 1) RETURN
  Origs: 5550:auto
  Dests: 
6000 (0 1) REM
  Origs: 
  Dests: 
6010 (0 1) REM     CONVERT Q(1-P9) TO H$(1-P9)
  Origs: 
  Dests: 
6020 (0 1) REM
  Origs: 
  Dests: 
6030 G(6030) F(S:6030) (1 3) FOR S = 1 TO P9
  Origs: 930:gosub
  Dests: 6040:fornext, 6050:fornext
6040 G(6030) F(S:6030) (0 4) H$(S) = MID$(L$, Q(S), 1)
  Origs: 6030:fornext
  Dests: 6050:auto
6050 G(6030) F(S:6030) (0 1) NEXT S
  Origs: 6030:fornext, 6040:auto
  Dests: 6060:auto
6060 G(6030) (0 1) RETURN
  Origs: 6050:auto
  Dests: 
6500 (0 1) REM
  Origs: 
  Dests: 
6510 (0 1) REM     COPY H$ INTO G$
  Origs: 
  Dests: 
6520 (0 1) REM
  Origs: 
  Dests: 
6530 G(6530) F(S:6530) (1 3) FOR S = 1 TO P9
  Origs: 1035:gosub
  Dests: 6540:fornext, 6550:fornext
6540 G(6530) F(S:6530) (0 3) G$(S) = H$(S)
  Origs: 6530:fornext
  Dests: 6550:auto
6550 G(6530) F(S:6530) (0 1) NEXT S
  Origs: 6530:fornext, 6540:auto
  Dests: 6560:auto
6560 G(6530) (0 1) RETURN
  Origs: 6550:auto
  Dests: 
8000 (0 1) REM     PROGRAM DATA FOR COLOR NAMES
  Origs: 
  Dests: 
8010 (0 2) DATA "BLACK", "WHITE", "RED", "GREEN", "ORANGE", "YELLOW", "PURPLE", "TAN"
  Origs: 
  Dests: 
9998 (0 1) REM   ...WE'RE SORRY BUT IT'S TIME TO GO...
  Origs: 
  Dests: 
9999 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

622: GOSUB 4000
623: PRINT "THE ACTUAL COMBINATION WAS: ";
624: FOR X = 1 TO P9
625: PRINT A$(X);
626: NEXT X
627: PRINT
5530: FOR S = 1 TO P9
5540: G$(S) = MID$(L$, Q(S), 1)
5550: NEXT S
5560: RETURN
9999: END

