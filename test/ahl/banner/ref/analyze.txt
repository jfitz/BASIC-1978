Statistics:

Number of lines: 94
Number of valid statements: 104
Number of comments: 2
Number of executable statements: 62

Complexity:

Comment density: 0.019
Comprehension effort: 255
McCabe complexity: 34
Halstead complexity:
 length: 909
 volume: 4856.182
 difficulty: 29.863
 effort: 145019.688
 language: 5.445
 intelligence: 162.616
 time: 134.277

10 (1 2) INPUT "HORIZONTAL"; X
  Origs: :start
  Dests: 20:auto
20 (1 2) INPUT "VERTICAL"; Y
  Origs: 10:auto
  Dests: 21:auto
21 (1 2) INPUT "CENTERED"; L$
  Origs: 20:auto
  Dests: 22:auto
22 (0 3) G1 = 0
   (1 6) IF L$ > "P" THEN G1 = 1
  Origs: 21:auto
  Dests: 23:auto
23 (1 2) INPUT "CHARACTER (TYPE 'ALL' IF YOU WANT CHARACTER BEING PRINTED)"; M$
  Origs: 22:auto
  Dests: 29:auto
29 (0 2) PRINT "STATEMENT";
  Origs: 23:auto
  Dests: 30:auto
30 (1 2) INPUT A$
  Origs: 29:auto
  Dests: 35:auto
35 (1 2) INPUT "SET PAGE"; O$
  Origs: 30:auto
  Dests: 40:auto
40 (0 4) A = ASC(LEFT$(A$, 1))
  Origs: 35:auto
  Dests: 70:auto
50 (0 1) REM
  Origs: 
  Dests: 
60 (0 1) REM
  Origs: 
  Dests: 
70 F(T:70) (1 4) FOR T = 1 TO LEN(A$)
   WARNING: FORNEXT length exceeds limit 40
  Origs: 40:auto
  Dests: 80:fornext, 800:fornext
80 F(T:70) (0 4) P$ = MID$(A$, T, 1)
  Origs: 70:fornext
  Dests: 90:auto
90 F(T:70,O:90) (1 3) FOR O = 1 TO 50
   WARNING: FORNEXT length exceeds limit 40
  Origs: 80:auto
  Dests: 95:fornext, 120:fornext
95 F(T:70,O:90) (8 9) READ S$, S(1), S(2), S(3), S(4), S(5), S(6), S(7)
  Origs: 90:fornext
  Dests: 96:auto
96 F(T:70,O:90) (1 4) IF P$ = " " THEN 812
  Origs: 95:auto
  Dests: 100:auto, 812:ifthen
100 F(T:70,O:90) (1 4) IF P$ = S$ THEN 200
  Origs: 96:auto
  Dests: 120:auto, 200:ifthen
120 F(T:70,O:90) (0 1) NEXT O
  Origs: 90:fornext, 100:auto
  Dests: 200:auto
200 F(T:70,O:90) (0 1) RESTORE
  Origs: 100:ifthen, 120:auto
  Dests: 201:auto
201 F(T:70,O:90) (0 3) X$ = M$
  Origs: 200:auto
  Dests: 202:auto
202 F(T:70,O:90) (1 6) IF M$ = "ALL" THEN X$ = S$
  Origs: 201:auto
  Dests: 205:auto
205 F(T:70,O:90,U:205) (1 3) FOR U = 1 TO 7
  Origs: 202:auto
  Dests: 210:fornext, 700:fornext
210 F(T:70,O:90,U:205,K:210) (1 5) FOR K = 8 TO 0 STEP -1
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 205:fornext
  Dests: 230:fornext, 280:fornext
230 F(T:70,O:90,U:205,K:210) (1 5) IF 2 ^ K < S(U) THEN 270
  Origs: 210:fornext
  Dests: 240:auto, 270:ifthen
240 F(T:70,O:90,U:205,K:210) (0 3) J(9 - K) = 0
  Origs: 230:auto
  Dests: 250:auto
250 F(T:70,O:90,U:205,K:210) (0 2) GOTO 280
  Origs: 240:auto
  Dests: 280:goto
270 F(T:70,O:90,U:205,K:210) (0 3) J(9 - K) = 1
    F(T:70,O:90,U:205,K:210) (0 6) S(U) = S(U) - 2 ^ K
  Origs: 230:ifthen
  Dests: 272:auto
272 F(T:70,O:90,U:205,K:210) (1 4) IF S(U) = 1 THEN 815
  Origs: 270:auto
  Dests: 280:auto, 815:ifthen
280 F(T:70,O:90,U:205,K:210) (0 1) NEXT K
  Origs: 210:fornext, 250:goto, 272:auto
  Dests: 445:auto
445 F(T:70,O:90,U:205,K:210,T1:445) (1 3) FOR T1 = 1 TO X
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 280:auto, 815:goto
  Dests: 447:fornext, 630:fornext
447 F(T:70,O:90,U:205,K:210,T1:445) (0 3) PRINT TAB((63 - 4.5 * Y) * G1 / (LEN(X$)) + 1);
  Origs: 445:fornext
  Dests: 450:auto
450 F(T:70,O:90,U:205,K:210,T1:445,B:450) (1 3) FOR B = 1 TO F(U)
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 447:auto
  Dests: 460:fornext, 600:fornext
460 F(T:70,O:90,U:205,K:210,T1:445,B:450) (1 4) IF J(B) = 0 THEN 500
  Origs: 450:fornext
  Dests: 465:auto, 500:ifthen
465 F(T:70,O:90,U:205,K:210,T1:445,B:450,I:465) (1 3) FOR I = 1 TO Y
    F(T:70,O:90,U:205,K:210,T1:445,B:450,I:465) (0 2) PRINT X$;
    F(T:70,O:90,U:205,K:210,T1:445,B:450,I:465) (0 1) NEXT I
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 460:auto
  Dests: 470:auto
470 F(T:70,O:90,U:205,K:210,T1:445,B:450) (0 2) GOTO 600
  Origs: 465:auto
  Dests: 600:goto
500 F(T:70,O:90,U:205,K:210,T1:445,B:450,I:500) (1 3) FOR I = 1 TO Y
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 460:ifthen
  Dests: 510:fornext, 530:fornext
510 F(T:70,O:90,U:205,K:210,T1:445,B:450,I:500,I1:510) (1 4) FOR I1 = 1 TO LEN(X$)
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 500:fornext
  Dests: 520:fornext
520 F(T:70,O:90,U:205,K:210,T1:445,B:450,I:500,I1:510) (0 2) PRINT " ";
    F(T:70,O:90,U:205,K:210,T1:445,B:450,I:500,I1:510) (0 1) NEXT I1
  Origs: 510:fornext
  Dests: 530:auto
530 F(T:70,O:90,U:205,K:210,T1:445,B:450,I:500) (0 1) NEXT I
  Origs: 500:fornext, 520:auto
  Dests: 600:auto
600 F(T:70,O:90,U:205,K:210,T1:445,B:450) (0 1) NEXT B
  Origs: 450:fornext, 470:goto, 530:auto
  Dests: 620:auto
620 F(T:70,O:90,U:205,K:210,T1:445) (0 2) PRINT
  Origs: 600:auto
  Dests: 630:auto
630 F(T:70,O:90,U:205,K:210,T1:445) (0 1) NEXT T1
  Origs: 445:fornext, 620:auto
  Dests: 700:auto
700 F(T:70,O:90,U:205,K:210) (0 1) NEXT U
  Origs: 205:fornext, 630:auto
  Dests: 750:auto
750 F(T:70,O:90,K:210,H:750) (1 4) FOR H = 1 TO 2 * X
    F(T:70,O:90,K:210,H:750) (0 2) PRINT
    F(T:70,O:90,K:210,H:750) (0 1) NEXT H
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 700:auto
  Dests: 800:auto
800 F(T:70,O:90,K:210) (0 1) NEXT T
  Origs: 70:fornext, 750:auto, 813:goto
  Dests: 806:auto
806 F(O:90,K:210,H:806) (1 3) FOR H = 1 TO 75
    F(O:90,K:210,H:806) (0 2) PRINT
    F(O:90,K:210,H:806) (0 1) NEXT H
  Origs: 800:auto
  Dests: 810:auto
810 F(O:90,K:210) (0 1) STOP
    WARNING: Terminating statement in FOR/NEXT
  Origs: 806:auto
  Dests: :stop
812 F(T:70,O:90,H:812) (1 4) FOR H = 1 TO 7 * X
    F(T:70,O:90,H:812) (0 2) PRINT
    F(T:70,O:90,H:812) (0 1) NEXT H
  Origs: 96:ifthen
  Dests: 813:auto
813 F(T:70,O:90) (0 3) GOTO 800
  Origs: 812:auto
  Dests: 800:goto
815 F(T:70,O:90,U:205,K:210) (0 4) F(U) = 9 - K
    F(T:70,O:90,U:205,K:210) (0 3) GOTO 445
  Origs: 272:ifthen
  Dests: 445:goto
899 (0 2) DATA " ", 0, 0, 0, 0, 0, 0, 0
  Origs: 
  Dests: 
900 (0 2) DATA "A", 505, 37, 35, 34, 35, 37, 505
  Origs: 
  Dests: 
901 (0 2) DATA "G", 125, 131, 258, 258, 290, 163, 101
  Origs: 
  Dests: 
902 (0 2) DATA "E", 512, 274, 274, 274, 274, 258, 258
  Origs: 
  Dests: 
903 (0 2) DATA "T", 2, 2, 2, 512, 2, 2, 2
  Origs: 
  Dests: 
904 (0 2) DATA "W", 256, 257, 129, 65, 129, 257, 256
  Origs: 
  Dests: 
905 (0 2) DATA "L", 512, 257, 257, 257, 257, 257, 257
  Origs: 
  Dests: 
906 (0 2) DATA "S", 69, 139, 274, 274, 274, 163, 69
  Origs: 
  Dests: 
907 (0 2) DATA "O", 125, 131, 258, 258, 258, 131, 125
  Origs: 
  Dests: 
908 (0 2) DATA "N", 512, 7, 9, 17, 33, 193, 512
  Origs: 
  Dests: 
909 (0 2) DATA "F", 512, 18, 18, 18, 18, 2, 2
  Origs: 
  Dests: 
910 (0 2) DATA "K", 512, 17, 17, 41, 69, 131, 258
  Origs: 
  Dests: 
911 (0 2) DATA "B", 512, 274, 274, 274, 274, 274, 239
  Origs: 
  Dests: 
912 (0 2) DATA "D", 512, 258, 258, 258, 258, 131, 125
  Origs: 
  Dests: 
913 (0 2) DATA "H", 512, 17, 17, 17, 17, 17, 512
  Origs: 
  Dests: 
914 (0 2) DATA "M", 512, 7, 13, 25, 13, 7, 512
  Origs: 
  Dests: 
915 (0 2) DATA "?", 5, 3, 2, 354, 18, 11, 5
  Origs: 
  Dests: 
916 (0 2) DATA "U", 128, 129, 257, 257, 257, 129, 128
  Origs: 
  Dests: 
917 (0 2) DATA "R", 512, 18, 18, 50, 82, 146, 271
  Origs: 
  Dests: 
918 (0 2) DATA "P", 512, 18, 18, 18, 18, 18, 15
  Origs: 
  Dests: 
919 (0 2) DATA "Q", 125, 131, 258, 258, 322, 131, 381
  Origs: 
  Dests: 
920 (0 2) DATA "Y", 8, 9, 17, 481, 17, 9, 8
  Origs: 
  Dests: 
921 (0 2) DATA "V", 64, 65, 129, 257, 129, 65, 64
  Origs: 
  Dests: 
922 (0 2) DATA "X", 388, 69, 41, 17, 41, 69, 388
  Origs: 
  Dests: 
923 (0 2) DATA "Z", 386, 322, 290, 274, 266, 262, 260
  Origs: 
  Dests: 
924 (0 2) DATA "I", 258, 258, 258, 512, 258, 258, 258
  Origs: 
  Dests: 
925 (0 2) DATA "C", 125, 131, 258, 258, 258, 131, 69
  Origs: 
  Dests: 
926 (0 2) DATA "J", 65, 129, 257, 257, 257, 129, 128
  Origs: 
  Dests: 
927 (0 2) DATA "1", 0, 0, 261, 259, 512, 257, 257
  Origs: 
  Dests: 
928 (0 2) DATA "2", 261, 387, 322, 290, 274, 267, 261
  Origs: 
  Dests: 
929 (0 2) DATA "*", 69, 41, 17, 512, 17, 41, 69
  Origs: 
  Dests: 
930 (0 2) DATA "3", 66, 130, 258, 274, 266, 150, 100
  Origs: 
  Dests: 
931 (0 2) DATA "4", 33, 49, 41, 37, 35, 512, 33
  Origs: 
  Dests: 
932 (0 2) DATA "5", 160, 274, 274, 274, 274, 274, 226
  Origs: 
  Dests: 
933 (0 2) DATA "6", 194, 291, 293, 297, 305, 289, 193
  Origs: 
  Dests: 
934 (0 2) DATA "7", 258, 130, 66, 34, 18, 10, 8
  Origs: 
  Dests: 
935 (0 2) DATA "8", 69, 171, 274, 274, 274, 171, 69
  Origs: 
  Dests: 
936 (0 2) DATA "9", 263, 138, 74, 42, 26, 10, 7
  Origs: 
  Dests: 
937 (0 2) DATA "=", 41, 41, 41, 41, 41, 41, 41
  Origs: 
  Dests: 
938 (0 2) DATA "!", 1, 1, 1, 384, 1, 1, 1
  Origs: 
  Dests: 
939 (0 2) DATA "0", 57, 69, 131, 258, 131, 69, 57
  Origs: 
  Dests: 
940 (0 2) DATA ".", 1, 1, 129, 449, 129, 1, 1
  Origs: 
  Dests: 
1000 (0 1) STOP
  Origs: 
  Dests: :stop
1002 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

1000: STOP
1002: END

