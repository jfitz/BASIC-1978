Statistics:

Number of lines: 281
Number of valid statements: 293
Number of comments: 2
Number of executable statements: 272

Complexity:

Comment density: 0.007
Comprehension effort: 892
McCabe complexity: 84
Halstead complexity:
 length: 1858
 volume: 10236.444
 difficulty: 55.912
 effort: 572341.691
 language: 3.274
 intelligence: 183.081
 time: 529.946

(0 3) 50 PRINT CHR$(26)
(0 1)    REM WIDTH 80
  Origs: 
  Dests: 100:auto
(0 4) 100 PRINT TAB(33); "QUBIC"
(0 2)     PRINT
  Origs: 50:auto
  Dests: 110:auto
(0 4) 110 PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 100:auto
  Dests: 120:auto
(0 2) 120 PRINT
(0 2)     PRINT
(0 2)     PRINT
  Origs: 110:auto
  Dests: 210:auto
(0 2) 210 PRINT "DO YOU WANT INSTRUCTIONS";
  Origs: 120:auto
  Dests: 220:auto
(1 2) 220 INPUT C$
  Origs: 210:auto, 260:goto
  Dests: 230:auto
(1 5) 230 IF LEFT$(C$, 1) = "N" THEN 315
  Origs: 220:auto
  Dests: 240:auto, 315:ifthen
(1 5) 240 IF LEFT$(C$, 1) = "Y" THEN 265
  Origs: 230:auto
  Dests: 250:auto, 265:ifthen
(0 2) 250 PRINT "INCORRECT ANSWER.  PLEASE TYPE 'YES' OR 'NO'";
  Origs: 240:auto
  Dests: 260:auto
(0 3) 260 GOTO 220
  Origs: 250:auto
  Dests: 220:goto
(0 2) 265 PRINT
  Origs: 240:ifthen
  Dests: 270:auto
(0 2) 270 PRINT "THE GAME IS TIC-TAC-TOE IN A 4 X 4 X 4 CUBE."
  Origs: 265:auto
  Dests: 280:auto
(0 2) 280 PRINT "EACH MOVE IS INDICATED BY A 3 DIGIT NUMBER, WITH EACH"
  Origs: 270:auto
  Dests: 290:auto
(0 2) 290 PRINT "DIGIT BETWEEN 1 AND 4 INCLUSIVE.  THE DIGITS INDICATE THE"
  Origs: 280:auto
  Dests: 300:auto
(0 2) 300 PRINT "LEVEL, ROW, AND COLUMN, RESPECTIVELY, OF THE OCCUPIED"
  Origs: 290:auto
  Dests: 305:auto
(0 2) 305 PRINT "PLACE.  "
  Origs: 300:auto
  Dests: 306:auto
(0 2) 306 PRINT
  Origs: 305:auto
  Dests: 307:auto
(0 2) 307 PRINT "TO PRINT THE PLAYING BOARD, TYPE 0 (ZERO) AS YOUR MOVE."
  Origs: 306:auto
  Dests: 308:auto
(0 2) 308 PRINT "THE PROGRAM WILL PRINT THE BOARD WITH YOUR MOVES INDI-"
  Origs: 307:auto
  Dests: 309:auto
(0 2) 309 PRINT "CATED WITH A (Y), THE MACHINE'S MOVES WITH AN (M), AND"
  Origs: 308:auto
  Dests: 310:auto
(0 2) 310 PRINT "UNUSED SQUARES WITH A ( ).  OUTPUT IS ON PAPER."
  Origs: 309:auto
  Dests: 311:auto
(0 2) 311 PRINT
  Origs: 310:auto
  Dests: 312:auto
(0 2) 312 PRINT "TO STOP THE PROGRAM RUN, TYPE 1 AS YOUR MOVE."
  Origs: 311:auto
  Dests: 313:auto
(0 2) 313 PRINT
(0 2)     PRINT
  Origs: 312:auto
  Dests: 315:auto
(0 5) 315 DIM X(64), L(76), M(76, 4), Y(16)
  Origs: 230:ifthen, 313:auto
  Dests: 320:auto
(1 3) 320 FOR I = 1 TO 16
  Origs: 315:auto
  Dests: 330:fornext, 340:fornext
(1 2) 330 READ Y(I)
  Origs: 320:fornext
  Dests: 340:auto
(0 1) 340 NEXT I
  Origs: 320:fornext, 330:auto
  Dests: 350:auto
(1 3) 350 FOR I = 1 TO 76
  Origs: 340:auto
  Dests: 360:fornext, 390:fornext
(1 3) 360 FOR J = 1 TO 4
  Origs: 350:fornext
  Dests: 370:fornext, 380:fornext
(1 2) 370 READ M(I, J)
  Origs: 360:fornext
  Dests: 380:auto
(0 1) 380 NEXT J
  Origs: 360:fornext, 370:auto
  Dests: 390:auto
(0 1) 390 NEXT I
  Origs: 350:fornext, 380:auto
  Dests: 400:auto
(1 3) 400 FOR I = 1 TO 64
  Origs: 390:auto, 1520:ifthen
  Dests: 410:fornext, 420:fornext
(0 3) 410 LET X(I) = 0
  Origs: 400:fornext
  Dests: 420:auto
(0 1) 420 NEXT I
  Origs: 400:fornext, 410:auto
  Dests: 430:auto
(0 3) 430 LET Z = 1
  Origs: 420:auto
  Dests: 440:auto
(0 2) 440 PRINT "DO YOU WANT TO MOVE FIRST";
  Origs: 430:auto
  Dests: 450:auto
(1 2) 450 INPUT S$
  Origs: 440:auto, 490:goto
  Dests: 460:auto
(1 5) 460 IF LEFT$(S$, 1) = "N" THEN 630
  Origs: 450:auto
  Dests: 470:auto, 630:ifthen
(1 5) 470 IF LEFT$(S$, 1) = "Y" THEN 500
  Origs: 460:auto
  Dests: 480:auto, 500:ifthen
(0 2) 480 PRINT "INCORRECT ANSWER.  PLEASE TYPE 'YES' OR 'NO'.";
  Origs: 470:auto
  Dests: 490:auto
(0 3) 490 GOTO 450
  Origs: 480:auto
  Dests: 450:goto
(0 2) 500 PRINT " "
  Origs: 470:ifthen, 524:goto, 610:goto, 1000:goto, 1290:goto, 1790:goto, 2320:goto, 2490:goto
  Dests: 510:auto
(0 2) 510 PRINT "YOUR MOVE";
  Origs: 500:auto
  Dests: 520:auto
(1 2) 520 INPUT J1
  Origs: 510:auto, 2760:goto
  Dests: 521:auto
(1 4) 521 IF J1 = 1 THEN 2770
  Origs: 520:auto
  Dests: 522:auto, 2770:ifthen
(1 4) 522 IF J1 <> 0 THEN 525
  Origs: 521:auto
  Dests: 523:auto, 525:ifthen
(0 2) 523 GOSUB 2550
  Origs: 522:auto
  Dests: 524:auto, 2550:gosub
(0 3) 524 GOTO 500
  Origs: 523:auto
  Dests: 500:goto
(1 4) 525 IF J1 < 111 THEN 2750
  Origs: 522:ifthen
  Dests: 526:auto, 2750:ifthen
(1 4) 526 IF J1 > 444 THEN 2750
  Origs: 525:auto
  Dests: 530:auto, 2750:ifthen
(0 2) 530 GOSUB 2500
  Origs: 526:auto
  Dests: 540:auto, 2500:gosub
(0 4) 540 LET K1 = INT(J1 / 100)
  Origs: 530:auto
  Dests: 550:auto
(0 6) 550 LET J2 = (J1 - K1 * 100)
  Origs: 540:auto
  Dests: 560:auto
(0 4) 560 LET K2 = INT(J2 / 10)
  Origs: 550:auto
  Dests: 570:auto
(0 9) 570 LET K3 = J1 - K1 * 100 - K2 * 10
  Origs: 560:auto
  Dests: 580:auto
(0 9) 580 LET M = 16 * K1 + 4 * K2 + K3 - 20
  Origs: 570:auto
  Dests: 590:auto
(1 4) 590 IF X(M) = 0 THEN 620
  Origs: 580:auto
  Dests: 600:auto, 620:ifthen
(0 2) 600 PRINT "THAT SQUARE IS USED, TRY AGAIN."
  Origs: 590:auto
  Dests: 610:auto
(0 3) 610 GOTO 500
  Origs: 600:auto
  Dests: 500:goto
(0 3) 620 LET X(M) = 1
  Origs: 590:ifthen
  Dests: 630:auto
(0 2) 630 GOSUB 1640
  Origs: 460:ifthen, 620:auto
  Dests: 640:auto, 1640:gosub
(0 3) 640 J = 1
  Origs: 630:auto
  Dests: 650:auto
(0 3) 650 I = 1
  Origs: 640:auto, 700:ifthen
  Dests: 660:auto
(1 4) 660 IF J = 1 THEN 720
  Origs: 650:auto, 690:ifthen
  Dests: 670:auto, 720:ifthen
(1 4) 670 IF J = 2 THEN 790
  Origs: 660:auto
  Dests: 680:auto, 790:ifthen
(1 4) 680 IF J = 3 THEN 930
  Origs: 670:auto
  Dests: 690:auto, 930:ifthen
(0 4) 690 I = I + 1
(1 5)     IF I <= 76 THEN 660
  Origs: 680:auto, 720:ifthen, 790:ifthen, 930:ifthen
  Dests: 660:ifthen, 700:auto
(0 4) 700 J = J + 1
(1 5)     IF J <= 3 THEN 650
  Origs: 690:auto
  Dests: 650:ifthen, 710:auto
(0 2) 710 GOTO 1300
  Origs: 700:auto
  Dests: 1300:goto
(1 5) 720 IF L(I) <> 4 THEN 690
  Origs: 660:ifthen
  Dests: 690:ifthen, 730:auto
(0 2) 730 PRINT "YOU WIN AS FOLLOWS";
  Origs: 720:auto
  Dests: 740:auto
(1 3) 740 FOR J = 1 TO 4
  Origs: 730:auto
  Dests: 750:fornext, 770:fornext
(0 3) 750 LET M = M(I, J)
  Origs: 740:fornext
  Dests: 760:auto
(0 2) 760 GOSUB 1570
  Origs: 750:auto
  Dests: 770:auto, 1570:gosub
(0 1) 770 NEXT J
  Origs: 740:fornext, 760:auto
  Dests: 780:auto
(0 2) 780 GOTO 1490
  Origs: 770:auto
  Dests: 1490:goto
(1 5) 790 IF L(I) <> 15 THEN 690
  Origs: 670:ifthen
  Dests: 690:ifthen, 800:auto
(1 3) 800 FOR J = 1 TO 4
  Origs: 790:auto
  Dests: 810:fornext, 860:fornext
(0 3) 810 LET M = M(I, J)
  Origs: 800:fornext
  Dests: 820:auto
(1 4) 820 IF X(M) <> 0 THEN 860
  Origs: 810:auto
  Dests: 830:auto, 860:ifthen
(0 3) 830 LET X(M) = 5
  Origs: 820:auto
  Dests: 840:auto
(0 2) 840 PRINT "MACHINE MOVES TO";
  Origs: 830:auto
  Dests: 850:auto
(0 2) 850 GOSUB 1570
  Origs: 840:auto
  Dests: 860:auto, 1570:gosub
(0 1) 860 NEXT J
  Origs: 800:fornext, 820:ifthen, 850:auto
  Dests: 870:auto
(0 2) 870 PRINT ", AND WINS AS FOLLOWS"
  Origs: 860:auto
  Dests: 880:auto
(1 3) 880 FOR J = 1 TO 4
  Origs: 870:auto
  Dests: 890:fornext, 910:fornext
(0 3) 890 LET M = M(I, J)
  Origs: 880:fornext
  Dests: 900:auto
(0 2) 900 GOSUB 1570
  Origs: 890:auto
  Dests: 910:auto, 1570:gosub
(0 1) 910 NEXT J
  Origs: 880:fornext, 900:auto
  Dests: 920:auto
(0 2) 920 GOTO 1490
  Origs: 910:auto
  Dests: 1490:goto
(1 5) 930 IF L(I) <> 3 THEN 690
  Origs: 680:ifthen
  Dests: 690:ifthen, 940:auto
(0 2) 940 PRINT "NICE TRY. MACHINE MOVES TO";
  Origs: 930:auto
  Dests: 950:auto
(1 3) 950 FOR J = 1 TO 4
  Origs: 940:auto
  Dests: 960:fornext, 1010:fornext
(0 3) 960 LET M = M(I, J)
  Origs: 950:fornext
  Dests: 970:auto
(1 4) 970 IF X(M) <> 0 THEN 1010
  Origs: 960:auto
  Dests: 980:auto, 1010:ifthen
(0 3) 980 LET X(M) = 5
  Origs: 970:auto
  Dests: 990:auto
(0 2) 990 GOSUB 1570
  Origs: 980:auto
  Dests: 1000:auto, 1570:gosub
(0 3) 1000 GOTO 500
  Origs: 990:auto
  Dests: 500:goto
(0 1) 1010 NEXT J
  Origs: 950:fornext, 970:ifthen
  Dests: 1020:auto
(0 2) 1020 GOTO 1300
  Origs: 1010:auto
  Dests: 1300:goto
(0 3) 1030 I = 1
  Origs: 1480:goto
  Dests: 1040:auto
(0 6) 1040 LET L(I) = X(M(I, 1)) + X(M(I, 2)) + X(M(I, 3)) + X(M(I, 4))
  Origs: 1030:auto, 1130:ifthen
  Dests: 1050:auto
(0 3) 1050 LET L = L(I)
  Origs: 1040:auto
  Dests: 1060:auto
(1 4) 1060 IF L < 2 THEN 1130
  Origs: 1050:auto
  Dests: 1070:auto, 1130:ifthen
(1 4) 1070 IF L >= 3 THEN 1130
  Origs: 1060:auto
  Dests: 1080:auto, 1130:ifthen
(1 4) 1080 IF L > 2 THEN 2230
  Origs: 1070:auto
  Dests: 1090:auto, 2230:ifthen
(1 3) 1090 FOR J = 1 TO 4
  Origs: 1080:auto
  Dests: 1100:fornext, 1120:fornext
(1 4) 1100 IF X(M(I, J)) <> 0 THEN 1120
  Origs: 1090:fornext
  Dests: 1110:auto, 1120:ifthen
(0 4) 1110 LET X(M(I, J)) = 1 / 8
  Origs: 1100:auto
  Dests: 1120:auto
(0 1) 1120 NEXT J
  Origs: 1090:fornext, 1100:ifthen, 1110:auto
  Dests: 1130:auto
(0 4) 1130 I = I + 1
(1 5)      IF I <= 76 THEN 1040
  Origs: 1060:ifthen, 1070:ifthen, 1120:auto
  Dests: 1040:ifthen, 1140:auto
(0 2) 1140 GOSUB 1640
  Origs: 1130:auto
  Dests: 1150:auto, 1640:gosub
(0 3) 1150 I = 1
  Origs: 1140:auto
  Dests: 1160:auto
(1 6) 1160 IF L(I) = 1 / 2 THEN 2360
  Origs: 1150:auto, 1180:ifthen
  Dests: 1170:auto, 2360:ifthen
(1 8) 1170 IF L(I) = 1 + 3 / 8 THEN 2360
  Origs: 1160:auto
  Dests: 1180:auto, 2360:ifthen
(0 4) 1180 I = I + 1
(1 5)      IF I <= 76 THEN 1160
  Origs: 1170:auto
  Dests: 1160:ifthen, 1190:auto
(0 2) 1190 GOTO 1830
  Origs: 1180:auto
  Dests: 1830:goto
(0 3) 1200 LET Z = 1
  Origs: 1960:goto
  Dests: 1210:auto
(1 4) 1210 IF X(Y(Z)) = 0 THEN 1250
  Origs: 1200:auto, 1230:ifthen
  Dests: 1220:auto, 1250:ifthen
(0 4) 1220 LET Z = Z + 1
  Origs: 1210:auto
  Dests: 1230:auto
(1 5) 1230 IF Z <> 17 THEN 1210
  Origs: 1220:auto
  Dests: 1210:ifthen, 1240:auto
(0 2) 1240 GOTO 1720
  Origs: 1230:auto
  Dests: 1720:goto
(0 3) 1250 LET M = Y(Z)
  Origs: 1210:ifthen
  Dests: 1260:auto
(0 3) 1260 LET X(M) = 5
  Origs: 1250:auto
  Dests: 1270:auto
(0 2) 1270 PRINT "MACHINE MOVES TO";
  Origs: 1260:auto
  Dests: 1280:auto
(0 2) 1280 GOSUB 1570
  Origs: 1270:auto
  Dests: 1290:auto, 1570:gosub
(0 3) 1290 GOTO 500
  Origs: 1280:auto
  Dests: 500:goto
(0 3) 1300 LET X = X
  Origs: 710:goto, 1020:goto
  Dests: 1310:auto
(0 3) 1310 I = 1
  Origs: 1300:auto
  Dests: 1320:auto
(0 6) 1320 LET L(I) = X(M(I, 1)) + X(M(I, 2)) + X(M(I, 3)) + X(M(I, 4))
  Origs: 1310:auto, 1410:ifthen
  Dests: 1330:auto
(0 3) 1330 LET L = L(I)
  Origs: 1320:auto
  Dests: 1340:auto
(1 4) 1340 IF L < 10 THEN 1410
  Origs: 1330:auto
  Dests: 1350:auto, 1410:ifthen
(1 4) 1350 IF L >= 11 THEN 1410
  Origs: 1340:auto
  Dests: 1360:auto, 1410:ifthen
(1 4) 1360 IF L > 10 THEN 2230
  Origs: 1350:auto
  Dests: 1370:auto, 2230:ifthen
(1 3) 1370 FOR J = 1 TO 4
  Origs: 1360:auto
  Dests: 1380:fornext, 1400:fornext
(1 4) 1380 IF X(M(I, J)) <> 0 THEN 1400
  Origs: 1370:fornext
  Dests: 1390:auto, 1400:ifthen
(0 4) 1390 LET X(M(I, J)) = 1 / 8
  Origs: 1380:auto
  Dests: 1400:auto
(0 1) 1400 NEXT J
  Origs: 1370:fornext, 1380:ifthen, 1390:auto
  Dests: 1410:auto
(0 4) 1410 I = I + 1
(1 5)      IF I <= 76 THEN 1320
  Origs: 1340:ifthen, 1350:ifthen, 1400:auto
  Dests: 1320:ifthen, 1420:auto
(0 2) 1420 GOSUB 1640
  Origs: 1410:auto
  Dests: 1430:auto, 1640:gosub
(0 3) 1430 I = 1
  Origs: 1420:auto
  Dests: 1440:auto
(1 4) 1440 IF L(I) = .5 THEN 2360
  Origs: 1430:auto, 1460:ifthen
  Dests: 1450:auto, 2360:ifthen
(1 8) 1450 IF L(I) = 5 + 3 / 8 THEN 2360
  Origs: 1440:auto
  Dests: 1460:auto, 2360:ifthen
(0 4) 1460 I = I + 1
(1 5)      IF I <= 76 THEN 1440
  Origs: 1450:auto
  Dests: 1440:ifthen, 1470:auto
(0 2) 1470 GOSUB 2500
  Origs: 1460:auto
  Dests: 1480:auto, 2500:gosub
(0 3) 1480 GOTO 1030
  Origs: 1470:auto
  Dests: 1030:goto
(0 2) 1490 PRINT " "
  Origs: 780:goto, 920:goto, 1820:goto, 2350:goto
  Dests: 1500:auto
(0 2) 1500 PRINT "DO YOU WANT TO TRY ANOTHER GAME";
  Origs: 1490:auto
  Dests: 1510:auto
(1 2) 1510 INPUT X$
  Origs: 1500:auto, 1550:goto
  Dests: 1520:auto
(1 6) 1520 IF LEFT$(X$, 1) = "Y" THEN 400
  Origs: 1510:auto
  Dests: 400:ifthen, 1530:auto
(1 5) 1530 IF LEFT$(X$, 1) = "N" THEN 1560
  Origs: 1520:auto
  Dests: 1540:auto, 1560:ifthen
(0 2) 1540 PRINT "INCORRECT ANSWER. PLEASE TYPE 'YES' OR 'NO'";
  Origs: 1530:auto
  Dests: 1550:auto
(0 3) 1550 GOTO 1510
  Origs: 1540:auto
  Dests: 1510:goto
(0 1) 1560 STOP
  Origs: 1530:ifthen
  Dests: 
(0 5) 1570 LET K1 = INT((M - 1) / 16) + 1
  Origs: 760:gosub, 850:gosub, 900:gosub, 990:gosub, 1280:gosub, 1770:gosub, 2310:gosub, 2480:gosub
  Dests: 1580:auto
(0 8) 1580 LET J2 = M - 16 * (K1 - 1)
  Origs: 1570:auto
  Dests: 1590:auto
(0 5) 1590 LET K2 = INT((J2 - 1) / 4) + 1
  Origs: 1580:auto
  Dests: 1600:auto
(0 11) 1600 LET K3 = M - (K1 - 1) * 16 - (K2 - 1) * 4
  Origs: 1590:auto
  Dests: 1610:auto
(0 8) 1610 LET M = K1 * 100 + K2 * 10 + K3
  Origs: 1600:auto
  Dests: 1620:auto
(0 2) 1620 PRINT M;
  Origs: 1610:auto
  Dests: 1630:auto
(0 1) 1630 RETURN
  Origs: 1620:auto
  Dests: 
(1 3) 1640 FOR S = 1 TO 76
  Origs: 630:gosub, 1140:gosub, 1420:gosub
  Dests: 1650:fornext, 1700:fornext
(0 3) 1650 LET J1 = M(S, 1)
  Origs: 1640:fornext
  Dests: 1660:auto
(0 3) 1660 LET J2 = M(S, 2)
  Origs: 1650:auto
  Dests: 1670:auto
(0 3) 1670 LET J3 = M(S, 3)
  Origs: 1660:auto
  Dests: 1680:auto
(0 3) 1680 LET J4 = M(S, 4)
  Origs: 1670:auto
  Dests: 1690:auto
(0 6) 1690 LET L(S) = X(J1) + X(J2) + X(J3) + X(J4)
  Origs: 1680:auto
  Dests: 1700:auto
(0 1) 1700 NEXT S
  Origs: 1640:fornext, 1690:auto
  Dests: 1710:auto
(0 1) 1710 RETURN
  Origs: 1700:auto
  Dests: 
(1 3) 1720 FOR I = 1 TO 64
  Origs: 1240:goto
  Dests: 1730:fornext, 1800:fornext
(1 4) 1730 IF X(I) <> 0 THEN 1800
  Origs: 1720:fornext
  Dests: 1740:auto, 1800:ifthen
(0 3) 1740 LET X(I) = 5
  Origs: 1730:auto
  Dests: 1750:auto
(0 3) 1750 LET M = I
  Origs: 1740:auto
  Dests: 1760:auto
(0 2) 1760 PRINT "MACHINE LIKES";
  Origs: 1750:auto
  Dests: 1770:auto
(0 3) 1770 GOSUB 1570
  Origs: 1760:auto
  Dests: 1570:gosub, 1780:auto
(0 2) 1780 PRINT " "
  Origs: 1770:auto
  Dests: 1790:auto
(0 3) 1790 GOTO 500
  Origs: 1780:auto
  Dests: 500:goto
(0 1) 1800 NEXT I
  Origs: 1720:fornext, 1730:ifthen
  Dests: 1810:auto
(0 2) 1810 PRINT "THE GAME IS A DRAW."
  Origs: 1800:auto
  Dests: 1820:auto
(0 3) 1820 GOTO 1490
  Origs: 1810:auto
  Dests: 1490:goto
(1 3) 1830 FOR K = 1 TO 18
  Origs: 1190:goto
  Dests: 1840:fornext, 1940:fornext
(0 3) 1840 LET P = 0
  Origs: 1830:fornext
  Dests: 1850:auto
(1 6) 1850 FOR I = 4 * K - 3 TO 4 * K
  Origs: 1840:auto
  Dests: 1860:fornext, 1890:fornext
(1 3) 1860 FOR J = 1 TO 4
  Origs: 1850:fornext
  Dests: 1870:fornext, 1880:fornext
(0 4) 1870 LET P = P + X(M(I, J))
  Origs: 1860:fornext
  Dests: 1880:auto
(0 1) 1880 NEXT J
  Origs: 1860:fornext, 1870:auto
  Dests: 1890:auto
(0 1) 1890 NEXT I
  Origs: 1850:fornext, 1880:auto
  Dests: 1900:auto
(1 4) 1900 IF P < 4 THEN 1940
  Origs: 1890:auto
  Dests: 1910:auto, 1940:ifthen
(1 4) 1910 IF P < 5 THEN 1970
  Origs: 1900:auto
  Dests: 1920:auto, 1970:ifthen
(1 4) 1920 IF P < 9 THEN 1940
  Origs: 1910:auto
  Dests: 1930:auto, 1940:ifthen
(1 4) 1930 IF P < 10 THEN 1970
  Origs: 1920:auto
  Dests: 1940:auto, 1970:ifthen
(0 1) 1940 NEXT K
  Origs: 1830:fornext, 1900:ifthen, 1920:ifthen, 1930:auto
  Dests: 1950:auto
(0 2) 1950 GOSUB 2500
  Origs: 1940:auto
  Dests: 1960:auto, 2500:gosub
(0 3) 1960 GOTO 1200
  Origs: 1950:auto
  Dests: 1200:goto
(0 4) 1970 LET S = 1 / 8
  Origs: 1910:ifthen, 1930:ifthen
  Dests: 1980:auto
(1 6) 1980 FOR I = 4 * K - 3 TO 4 * K
  Origs: 1970:auto, 2020:goto
  Dests: 1990:fornext, 2000:fornext
(0 2) 1990 GOTO 2370
  Origs: 1980:fornext
  Dests: 2370:goto
(0 1) 2000 NEXT I
  Origs: 1980:fornext, 2440:goto
  Dests: 2010:auto
(0 3) 2010 LET S = 0
  Origs: 2000:auto
  Dests: 2020:auto
(0 3) 2020 GOTO 1980
  Origs: 2010:auto
  Dests: 1980:goto
(0 2) 2030 DATA 1, 49, 52, 4, 13, 61, 64, 16, 22, 39, 23, 38, 26, 42, 27, 43
  Origs: 
  Dests: 2040:auto
(0 2) 2040 DATA 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  Origs: 2030:auto
  Dests: 2050:auto
(0 2) 2050 DATA 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38
  Origs: 2040:auto
  Dests: 2060:auto
(0 2) 2060 DATA 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
  Origs: 2050:auto
  Dests: 2070:auto
(0 2) 2070 DATA 57, 58, 59, 60, 61, 62, 63, 64
  Origs: 2060:auto
  Dests: 2080:auto
(0 2) 2080 DATA 1, 17, 33, 49, 5, 21, 37, 53, 9, 25, 41, 57, 13, 29, 45, 61
  Origs: 2070:auto
  Dests: 2090:auto
(0 2) 2090 DATA 2, 18, 34, 50, 6, 22, 38, 54, 10, 26, 42, 58, 14, 30, 46, 62
  Origs: 2080:auto
  Dests: 2100:auto
(0 2) 2100 DATA 3, 19, 35, 51, 7, 23, 39, 55, 11, 27, 43, 59, 15, 31, 47, 63
  Origs: 2090:auto
  Dests: 2110:auto
(0 2) 2110 DATA 4, 20, 36, 52, 8, 24, 40, 56, 12, 28, 44, 60, 16, 32, 48, 64
  Origs: 2100:auto
  Dests: 2120:auto
(0 2) 2120 DATA 1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61
  Origs: 2110:auto
  Dests: 2130:auto
(0 2) 2130 DATA 2, 6, 10, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54, 58, 62
  Origs: 2120:auto
  Dests: 2140:auto
(0 2) 2140 DATA 3, 7, 11, 15, 19, 23, 27, 31, 35, 39, 43, 47, 51, 55, 59, 63
  Origs: 2130:auto
  Dests: 2150:auto
(0 2) 2150 DATA 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64
  Origs: 2140:auto
  Dests: 2160:auto
(0 2) 2160 DATA 1, 6, 11, 16, 17, 22, 27, 32, 33, 38, 43, 48, 49, 54, 59, 64
  Origs: 2150:auto
  Dests: 2170:auto
(0 2) 2170 DATA 13, 10, 7, 4, 29, 26, 23, 20, 45, 42, 39, 36, 61, 58, 55, 52
  Origs: 2160:auto
  Dests: 2180:auto
(0 2) 2180 DATA 1, 21, 41, 61, 2, 22, 42, 62, 3, 23, 43, 63, 4, 24, 44, 64
  Origs: 2170:auto
  Dests: 2190:auto
(0 2) 2190 DATA 49, 37, 25, 13, 50, 38, 26, 14, 51, 39, 27, 15, 52, 40, 28, 16
  Origs: 2180:auto
  Dests: 2200:auto
(0 2) 2200 DATA 1, 18, 35, 52, 5, 22, 39, 56, 9, 26, 43, 60, 13, 30, 47, 64
  Origs: 2190:auto
  Dests: 2210:auto
(0 2) 2210 DATA 49, 34, 19, 4, 53, 38, 23, 8, 57, 42, 27, 12, 61, 46, 31, 16
  Origs: 2200:auto
  Dests: 2220:auto
(0 2) 2220 DATA 1, 22, 43, 64, 16, 27, 38, 49, 4, 23, 42, 61, 13, 26, 39, 52
  Origs: 2210:auto
  Dests: 2230:auto
(1 3) 2230 FOR J = 1 TO 4
  Origs: 1080:ifthen, 1360:ifthen, 2220:auto
  Dests: 2240:fornext, 2330:fornext
(1 6) 2240 IF X(M(I, J)) <> 1 / 8 THEN 2330
  Origs: 2230:fornext
  Dests: 2250:auto, 2330:ifthen
(0 3) 2250 LET X(M(I, J)) = 5
  Origs: 2240:auto
  Dests: 2260:auto
(1 4) 2260 IF L(I) < 5 THEN 2290
  Origs: 2250:auto
  Dests: 2270:auto, 2290:ifthen
(0 2) 2270 PRINT "LET'S SEE YOU GET OUT OF THIS:  MACHINE MOVES TO";
  Origs: 2260:auto
  Dests: 2280:auto
(0 2) 2280 GOTO 2300
  Origs: 2270:auto
  Dests: 2300:goto
(0 2) 2290 PRINT "YOU FOX.  JUST IN THE NICK OF TIME, MACHINE MOVES TO";
  Origs: 2260:ifthen
  Dests: 2300:auto
(0 3) 2300 LET M = M(I, J)
  Origs: 2280:goto, 2290:auto
  Dests: 2310:auto
(0 3) 2310 GOSUB 1570
  Origs: 2300:auto
  Dests: 1570:gosub, 2320:auto
(0 3) 2320 GOTO 500
  Origs: 2310:auto
  Dests: 500:goto
(0 1) 2330 NEXT J
  Origs: 2230:fornext, 2240:ifthen
  Dests: 2340:auto
(0 2) 2340 PRINT "MACHINE CONCEDES THIS GAME."
  Origs: 2330:auto
  Dests: 2350:auto
(0 3) 2350 GOTO 1490
  Origs: 2340:auto
  Dests: 1490:goto
(0 4) 2360 LET S = 1 / 8
  Origs: 1160:ifthen, 1170:ifthen, 1440:ifthen, 1450:ifthen
  Dests: 2370:auto
(1 8) 2370 IF I - INT(I / 4) * 4 > 1 THEN 2400
  Origs: 1990:goto, 2360:auto
  Dests: 2380:auto, 2400:ifthen
(0 3) 2380 LET A = 1
  Origs: 2370:auto
  Dests: 2390:auto
(0 2) 2390 GOTO 2410
  Origs: 2380:auto
  Dests: 2410:goto
(0 3) 2400 LET A = 2
  Origs: 2370:ifthen
  Dests: 2410:auto
(1 8) 2410 FOR J = A TO 5 - A STEP 5 - 2 * A
  Origs: 2390:goto, 2400:auto
  Dests: 2420:fornext, 2430:fornext
(1 4) 2420 IF X(M(I, J)) = S THEN 2450
  Origs: 2410:fornext
  Dests: 2430:auto, 2450:ifthen
(0 1) 2430 NEXT J
  Origs: 2410:fornext, 2420:auto
  Dests: 2440:auto
(0 3) 2440 GOTO 2000
  Origs: 2430:auto
  Dests: 2000:goto
(0 3) 2450 LET X(M(I, J)) = 5
  Origs: 2420:ifthen
  Dests: 2460:auto
(0 3) 2460 LET M = M(I, J)
  Origs: 2450:auto
  Dests: 2470:auto
(0 2) 2470 PRINT "MACHINE TAKES";
  Origs: 2460:auto
  Dests: 2480:auto
(0 3) 2480 GOSUB 1570
  Origs: 2470:auto
  Dests: 1570:gosub, 2490:auto
(0 3) 2490 GOTO 500
  Origs: 2480:auto
  Dests: 500:goto
(1 3) 2500 FOR I = 1 TO 64
  Origs: 530:gosub, 1470:gosub, 1950:gosub
  Dests: 2510:fornext, 2530:fornext
(1 6) 2510 IF X(I) <> 1 / 8 THEN 2530
  Origs: 2500:fornext
  Dests: 2520:auto, 2530:ifthen
(0 3) 2520 LET X(I) = 0
  Origs: 2510:auto
  Dests: 2530:auto
(0 1) 2530 NEXT I
  Origs: 2500:fornext, 2510:ifthen, 2520:auto
  Dests: 2540:auto
(0 1) 2540 RETURN
  Origs: 2530:auto
  Dests: 
(1 3) 2550 FOR XX = 1 TO 9
(0 2)      PRINT
(0 1)      NEXT
(1 3)      FOR I = 1 TO 4
  Origs: 523:gosub
  Dests: 2560:fornext, 2730:fornext
(1 3) 2560 FOR J = 1 TO 4
  Origs: 2550:fornext
  Dests: 2562:fornext, 2700:fornext
(1 3) 2562 FOR I1 = 1 TO J
  Origs: 2560:fornext
  Dests: 2564:fornext, 2566:fornext
(0 2) 2564 PRINT "   ";
  Origs: 2562:fornext
  Dests: 2566:auto
(0 1) 2566 NEXT I1
  Origs: 2562:fornext, 2564:auto
  Dests: 2570:auto
(1 3) 2570 FOR K = 1 TO 4
  Origs: 2566:auto
  Dests: 2600:fornext, 2670:fornext
(0 9) 2600 LET Q = 16 * I + 4 * J + K - 20
  Origs: 2570:fornext
  Dests: 2610:auto
(1 4) 2610 IF X(Q) <> 0 THEN 2630
  Origs: 2600:auto
  Dests: 2620:auto, 2630:ifthen
(0 2) 2620 PRINT "( )      ";
  Origs: 2610:auto
  Dests: 2630:auto
(1 4) 2630 IF X(Q) <> 5 THEN 2650
  Origs: 2610:ifthen, 2620:auto
  Dests: 2640:auto, 2650:ifthen
(0 2) 2640 PRINT "(M)      ";
  Origs: 2630:auto
  Dests: 2650:auto
(1 4) 2650 IF X(Q) <> 1 THEN 2660
  Origs: 2630:ifthen, 2640:auto
  Dests: 2655:auto, 2660:ifthen
(0 2) 2655 PRINT "(Y)      ";
  Origs: 2650:auto
  Dests: 2660:auto
(1 6) 2660 IF X(Q) <> 1 / 8 THEN 2670
  Origs: 2650:ifthen, 2655:auto
  Dests: 2665:auto, 2670:ifthen
(0 2) 2665 PRINT "( )      ";
  Origs: 2660:auto
  Dests: 2670:auto
(0 1) 2670 NEXT K
  Origs: 2570:fornext, 2660:ifthen, 2665:auto
  Dests: 2680:auto
(0 2) 2680 PRINT
  Origs: 2670:auto
  Dests: 2690:auto
(0 2) 2690 PRINT
  Origs: 2680:auto
  Dests: 2700:auto
(0 1) 2700 NEXT J
  Origs: 2560:fornext, 2690:auto
  Dests: 2710:auto
(0 2) 2710 PRINT
  Origs: 2700:auto
  Dests: 2720:auto
(0 2) 2720 PRINT
  Origs: 2710:auto
  Dests: 2730:auto
(0 1) 2730 NEXT I
  Origs: 2550:fornext, 2720:auto
  Dests: 2735:auto
(0 1) 2735 REM PRINT CHR$(12)
  Origs: 2730:auto
  Dests: 2740:auto
(0 1) 2740 RETURN
  Origs: 2735:auto
  Dests: 
(0 2) 2750 PRINT "INCORRECT MOVE, RETYPE IT--";
  Origs: 525:ifthen, 526:ifthen
  Dests: 2760:auto
(0 3) 2760 GOTO 520
  Origs: 2750:auto
  Dests: 520:goto
(0 1) 2770 END
  Origs: 521:ifthen
  Dests: 

Unreachable code:

All executable lines are reachable.

