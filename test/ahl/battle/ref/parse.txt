5 PRINT TAB(33);"BATTLE"
 NumericConstant:33
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextConstant:"BATTLE"
 CarriageControl:NL
7 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericConstant:15
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextConstant:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
10 REM -- BATTLE WRITTEN BY RAY WESTERGARD  10/70
 Remark:-- BATTLE WRITTEN BY RAY WESTERGARD  10/70
20 REM COPYRIGHT 1971 BY THE REGENTS OF THE UNIV. OF CALIF.
 Remark:COPYRIGHT 1971 BY THE REGENTS OF THE UNIV. OF CALIF.
30 REM PRODUCED AT THE LAWRENCE HALL OF SCIENCE, BERKELEY
 Remark:PRODUCED AT THE LAWRENCE HALL OF SCIENCE, BERKELEY
40 DIM F(6,6),H(6,6),A(4),B(4),C(6),L(3)
 NumericConstant:6
 NumericConstant:6
 Declaration:F(,) -> _(,)
 NumericConstant:6
 NumericConstant:6
 Declaration:H(,) -> _(,)
 NumericConstant:4
 Declaration:A() -> _()
 NumericConstant:4
 Declaration:B() -> _()
 NumericConstant:6
 Declaration:C() -> _()
 NumericConstant:3
 Declaration:L() -> _()
50 FOR X=1 TO 6
 control: Variable:X -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:6"]
51 FOR Y=1 TO 6
 control: Variable:Y -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:6"]
52 F(X,Y)=0
 Variable:X -> _
 Variable:Y -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
53 NEXT Y
 Variable:Y -> _
54 NEXT X
 Variable:X -> _
60 FOR I=1 TO 3
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:3"]
70 N=4-I
 Variable:N -> _
 NumericConstant:4
 Variable:I -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
80 FOR J=1 TO 2
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:2"]
90 A=INT(6*RND(1)+1)
 Variable:A -> _
 NumericConstant:6
 NumericConstant:1
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
100 B=INT(6*RND(1)+1)
 Variable:B -> _
 NumericConstant:6
 NumericConstant:1
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
110 D=INT(4*RND(1)+1)
 Variable:D -> _
 NumericConstant:4
 NumericConstant:1
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
120 IF F(A,B)>0 THEN 90
 Variable:A -> _
 Variable:B -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:90
130 M=0
 Variable:M -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
140 ON D GOTO 150,340,550,740
 Variable:D -> _
 LineNumber:150
 LineNumber:340
 LineNumber:550
 LineNumber:740
150 B(1)=B
 NumericConstant:1
 Variable:B(_) -> _
 Variable:B -> _
 AssignmentOperator:= _ -> _
160 B(2)=7:B(3)=7
 NumericConstant:2
 Variable:B(_) -> _
 NumericConstant:7
 AssignmentOperator:= =_ -> _
 NumericConstant:3
 Variable:B(_) -> _
 NumericConstant:7
 AssignmentOperator:= =_ -> _
170 FOR K=1 TO N
 WARNING: FOR/NEXT nesting exceeds limit 3
 control: Variable:K -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N -> _"]
180 IF M>1 THEN 240
 Variable:M -> _
 NumericConstant:1
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:240
190 IF B(K)=6 THEN 230
 Variable:K -> _
 Variable:B(_) -> _
 NumericConstant:6
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:230
200 IF F(A,B(K)+1)>0 THEN 230
 Variable:A -> _
 Variable:K -> _
 Variable:B(_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:230
210 B(K+1)=B(K)+1
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:B(_) -> _
 Variable:K -> _
 Variable:B(_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
220 GOTO 280
 LineNumber:280
230 M=2
 Variable:M -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
240 IF B(1)<B(2) AND B(1)<B(3) THEN Z=B(1)
 NumericConstant:1
 Variable:B(_) -> _
 NumericConstant:2
 Variable:B(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 NumericConstant:1
 Variable:B(_) -> _
 NumericConstant:3
 Variable:B(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z -> _
 NumericConstant:1
 Variable:B(_) -> _
 AssignmentOperator:= _ -> _
242 IF B(2)<B(1) AND B(2)<B(3) THEN Z=B(2)
 NumericConstant:2
 Variable:B(_) -> _
 NumericConstant:1
 Variable:B(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 NumericConstant:2
 Variable:B(_) -> _
 NumericConstant:3
 Variable:B(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z -> _
 NumericConstant:2
 Variable:B(_) -> _
 AssignmentOperator:= _ -> _
244 IF B(3)<B(1) AND B(3)<B(2) THEN Z=B(3)
 NumericConstant:3
 Variable:B(_) -> _
 NumericConstant:1
 Variable:B(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 NumericConstant:3
 Variable:B(_) -> _
 NumericConstant:2
 Variable:B(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z -> _
 NumericConstant:3
 Variable:B(_) -> _
 AssignmentOperator:= _ -> _
250 IF Z=1 THEN 90
 Variable:Z -> _
 NumericConstant:1
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:90
260 IF F(A,Z-1)>0 THEN 90
 Variable:A -> _
 Variable:Z -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:90
270 B(K+1)=Z-1
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:B(_) -> _
 Variable:Z -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
280 NEXT K
 Variable:K -> _
290 F(A,B)=9-2*I-J
 Variable:A -> _
 Variable:B -> _
 Variable:F(_,_) -> _
 NumericConstant:9
 NumericConstant:2
 Variable:I -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:J -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
300 FOR K=1 TO N
 control: Variable:K -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N -> _"]
310 F(A,B(K+1))=F(A,B)
 Variable:A -> _
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:B(_) -> _
 Variable:F(_,_) -> _
 Variable:A -> _
 Variable:B -> _
 Variable:F(_,_) -> _
 AssignmentOperator:= _ -> _
320 NEXT K
 Variable:K -> _
330 GOTO 990
 LineNumber:990
340 A(1)=A
 NumericConstant:1
 Variable:A(_) -> _
 Variable:A -> _
 AssignmentOperator:= _ -> _
350 B(1)=B
 NumericConstant:1
 Variable:B(_) -> _
 Variable:B -> _
 AssignmentOperator:= _ -> _
360 A(2)=0:A(3)=0:B(2)=0:B(3)=0
 NumericConstant:2
 Variable:A(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
 NumericConstant:3
 Variable:A(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
 NumericConstant:2
 Variable:B(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
 NumericConstant:3
 Variable:B(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
370 FOR K=1 TO N
 WARNING: FOR/NEXT nesting exceeds limit 3
 control: Variable:K -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N -> _"]
380 IF M>1 THEN 460
 Variable:M -> _
 NumericConstant:1
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:460
390 IF A(K)=1 OR B(K)=1 THEN 450
 Variable:K -> _
 Variable:A(_) -> _
 NumericConstant:1
 BinaryOperatorEqual:=(_,_) -> ?
 Variable:K -> _
 Variable:B(_) -> _
 NumericConstant:1
 BinaryOperatorEqual:=(_,_) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 LineNumber:450
400 IF F(A(K)-1,B(K)-1)>0 THEN 450
 Variable:K -> _
 Variable:A(_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:K -> _
 Variable:B(_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:450
410 IF F(A(K)-1,B(K))>0 AND F(A(K)-1,B(K))=F(A(K),B(K)-1) THEN 450
 Variable:K -> _
 Variable:A(_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:K -> _
 Variable:B(_) -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 Variable:K -> _
 Variable:A(_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:K -> _
 Variable:B(_) -> _
 Variable:F(_,_) -> _
 Variable:K -> _
 Variable:A(_) -> _
 Variable:K -> _
 Variable:B(_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:F(_,_) -> _
 BinaryOperatorEqual:=(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 LineNumber:450
420 A(K+1)=A(K)-1
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:A(_) -> _
 Variable:K -> _
 Variable:A(_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
430 B(K+1)=B(K)-1
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:B(_) -> _
 Variable:K -> _
 Variable:B(_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
440 GOTO 530
 LineNumber:530
450 M=2
 Variable:M -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
460 IF A(1)>A(2) AND A(1)>A(3) THEN Z1=A(1)
 NumericConstant:1
 Variable:A(_) -> _
 NumericConstant:2
 Variable:A(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 NumericConstant:1
 Variable:A(_) -> _
 NumericConstant:3
 Variable:A(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z1 -> _
 NumericConstant:1
 Variable:A(_) -> _
 AssignmentOperator:= _ -> _
462 IF A(2)>A(1) AND A(2)>A(3) THEN Z1=A(2)
 NumericConstant:2
 Variable:A(_) -> _
 NumericConstant:1
 Variable:A(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 NumericConstant:2
 Variable:A(_) -> _
 NumericConstant:3
 Variable:A(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z1 -> _
 NumericConstant:2
 Variable:A(_) -> _
 AssignmentOperator:= _ -> _
464 IF A(3)>A(1) AND A(3)>A(2) THEN Z1=A(3)
 NumericConstant:3
 Variable:A(_) -> _
 NumericConstant:1
 Variable:A(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 NumericConstant:3
 Variable:A(_) -> _
 NumericConstant:2
 Variable:A(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z1 -> _
 NumericConstant:3
 Variable:A(_) -> _
 AssignmentOperator:= _ -> _
470 IF B(1)>B(2) AND B(1)>B(3) THEN Z2=B(1)
 NumericConstant:1
 Variable:B(_) -> _
 NumericConstant:2
 Variable:B(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 NumericConstant:1
 Variable:B(_) -> _
 NumericConstant:3
 Variable:B(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z2 -> _
 NumericConstant:1
 Variable:B(_) -> _
 AssignmentOperator:= _ -> _
474 IF B(2)>B(1) AND B(2)>B(3) THEN Z2=B(2)
 NumericConstant:2
 Variable:B(_) -> _
 NumericConstant:1
 Variable:B(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 NumericConstant:2
 Variable:B(_) -> _
 NumericConstant:3
 Variable:B(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z2 -> _
 NumericConstant:2
 Variable:B(_) -> _
 AssignmentOperator:= _ -> _
476 IF B(3)>B(1) AND B(3)>B(2) THEN Z2=B(3)
 NumericConstant:3
 Variable:B(_) -> _
 NumericConstant:1
 Variable:B(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 NumericConstant:3
 Variable:B(_) -> _
 NumericConstant:2
 Variable:B(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z2 -> _
 NumericConstant:3
 Variable:B(_) -> _
 AssignmentOperator:= _ -> _
480 IF Z1=6 OR Z2=6 THEN 90
 Variable:Z1 -> _
 NumericConstant:6
 BinaryOperatorEqual:=(_,_) -> ?
 Variable:Z2 -> _
 NumericConstant:6
 BinaryOperatorEqual:=(_,_) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 LineNumber:90
490 IF F(Z1+1,Z2+1)>0 THEN 90
 Variable:Z1 -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:Z2 -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:90
500 IF F(Z1,Z2+1)>0 AND F(Z1,Z2+1)=F(Z1+1,Z2) THEN 90
 Variable:Z1 -> _
 Variable:Z2 -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 Variable:Z1 -> _
 Variable:Z2 -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:F(_,_) -> _
 Variable:Z1 -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:Z2 -> _
 Variable:F(_,_) -> _
 BinaryOperatorEqual:=(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 LineNumber:90
510 A(K+1)=Z1+1
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:A(_) -> _
 Variable:Z1 -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
520 B(K+1)=Z2+1
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:B(_) -> _
 Variable:Z2 -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
530 NEXT K
 Variable:K -> _
540 GOTO 950
 LineNumber:950
550 A(1)=A
 NumericConstant:1
 Variable:A(_) -> _
 Variable:A -> _
 AssignmentOperator:= _ -> _
560 A(2)=7:A(3)=7
 NumericConstant:2
 Variable:A(_) -> _
 NumericConstant:7
 AssignmentOperator:= =_ -> _
 NumericConstant:3
 Variable:A(_) -> _
 NumericConstant:7
 AssignmentOperator:= =_ -> _
570 FOR K=1 TO N
 WARNING: FOR/NEXT nesting exceeds limit 3
 control: Variable:K -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N -> _"]
580 IF M>1 THEN 640
 Variable:M -> _
 NumericConstant:1
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:640
590 IF A(K)=6 THEN 630
 Variable:K -> _
 Variable:A(_) -> _
 NumericConstant:6
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:630
600 IF F(A(K)+1,B)>0 THEN 630
 Variable:K -> _
 Variable:A(_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:B -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:630
610 A(K+1)=A(K)+1
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:A(_) -> _
 Variable:K -> _
 Variable:A(_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
620 GOTO 680
 LineNumber:680
630 M=2
 Variable:M -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
640 IF A(1)<A(2) AND A(1)<A(3) THEN Z=A(1)
 NumericConstant:1
 Variable:A(_) -> _
 NumericConstant:2
 Variable:A(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 NumericConstant:1
 Variable:A(_) -> _
 NumericConstant:3
 Variable:A(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z -> _
 NumericConstant:1
 Variable:A(_) -> _
 AssignmentOperator:= _ -> _
642 IF A(2)<A(1) AND A(2)<A(3) THEN Z=A(2)
 NumericConstant:2
 Variable:A(_) -> _
 NumericConstant:1
 Variable:A(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 NumericConstant:2
 Variable:A(_) -> _
 NumericConstant:3
 Variable:A(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z -> _
 NumericConstant:2
 Variable:A(_) -> _
 AssignmentOperator:= _ -> _
644 IF A(3)<A(1) AND A(3)<A(2) THEN Z=A(3)
 NumericConstant:3
 Variable:A(_) -> _
 NumericConstant:1
 Variable:A(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 NumericConstant:3
 Variable:A(_) -> _
 NumericConstant:2
 Variable:A(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z -> _
 NumericConstant:3
 Variable:A(_) -> _
 AssignmentOperator:= _ -> _
650 IF Z=1 THEN 90
 Variable:Z -> _
 NumericConstant:1
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:90
660 IF F(Z-1,B)>0 THEN 90
 Variable:Z -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:B -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:90
670 A(K+1)=Z-1
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:A(_) -> _
 Variable:Z -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
680 NEXT K
 Variable:K -> _
690 F(A,B)=9-2*I-J
 Variable:A -> _
 Variable:B -> _
 Variable:F(_,_) -> _
 NumericConstant:9
 NumericConstant:2
 Variable:I -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:J -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
700 FOR K=1 TO N
 control: Variable:K -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N -> _"]
710 F(A(K+1),B)=F(A,B)
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:A(_) -> _
 Variable:B -> _
 Variable:F(_,_) -> _
 Variable:A -> _
 Variable:B -> _
 Variable:F(_,_) -> _
 AssignmentOperator:= _ -> _
720 NEXT K
 Variable:K -> _
730 GOTO 990
 LineNumber:990
740 A(1)=A
 NumericConstant:1
 Variable:A(_) -> _
 Variable:A -> _
 AssignmentOperator:= _ -> _
750 B(1)=B
 NumericConstant:1
 Variable:B(_) -> _
 Variable:B -> _
 AssignmentOperator:= _ -> _
760 A(2)=7:A(3)=7
 NumericConstant:2
 Variable:A(_) -> _
 NumericConstant:7
 AssignmentOperator:= =_ -> _
 NumericConstant:3
 Variable:A(_) -> _
 NumericConstant:7
 AssignmentOperator:= =_ -> _
770 B(2)=0:B(3)=0
 NumericConstant:2
 Variable:B(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
 NumericConstant:3
 Variable:B(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
780 FOR K=1 TO N
 WARNING: FOR/NEXT nesting exceeds limit 3
 control: Variable:K -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N -> _"]
790 IF M>1 THEN 870
 Variable:M -> _
 NumericConstant:1
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:870
800 IF A(K)=6 OR B(K)=1 THEN 860
 Variable:K -> _
 Variable:A(_) -> _
 NumericConstant:6
 BinaryOperatorEqual:=(_,_) -> ?
 Variable:K -> _
 Variable:B(_) -> _
 NumericConstant:1
 BinaryOperatorEqual:=(_,_) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 LineNumber:860
810 IF F(A(K)+1,B(K)-1)>0 THEN 860
 Variable:K -> _
 Variable:A(_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:K -> _
 Variable:B(_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:860
820 IF F(A(K)+1,B(K))>0 AND F(A(K)+1,B(K))=F(A(K),B(K)-1) THEN 860
 Variable:K -> _
 Variable:A(_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:K -> _
 Variable:B(_) -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 Variable:K -> _
 Variable:A(_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:K -> _
 Variable:B(_) -> _
 Variable:F(_,_) -> _
 Variable:K -> _
 Variable:A(_) -> _
 Variable:K -> _
 Variable:B(_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:F(_,_) -> _
 BinaryOperatorEqual:=(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 LineNumber:860
830 A(K+1)=A(K)+1
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:A(_) -> _
 Variable:K -> _
 Variable:A(_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
840 B(K+1)=B(K)-1
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:B(_) -> _
 Variable:K -> _
 Variable:B(_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
850 GOTO 940
 LineNumber:940
860 M=2
 Variable:M -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
870 IF A(1)<A(2) AND A(1)<A(3) THEN Z1=A(1)
 NumericConstant:1
 Variable:A(_) -> _
 NumericConstant:2
 Variable:A(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 NumericConstant:1
 Variable:A(_) -> _
 NumericConstant:3
 Variable:A(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z1 -> _
 NumericConstant:1
 Variable:A(_) -> _
 AssignmentOperator:= _ -> _
872 IF A(2)<A(1) AND A(2)<A(3) THEN Z1=A(2)
 NumericConstant:2
 Variable:A(_) -> _
 NumericConstant:1
 Variable:A(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 NumericConstant:2
 Variable:A(_) -> _
 NumericConstant:3
 Variable:A(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z1 -> _
 NumericConstant:2
 Variable:A(_) -> _
 AssignmentOperator:= _ -> _
874 IF A(3)<A(1) AND A(3)<A(2) THEN Z1=A(3)
 NumericConstant:3
 Variable:A(_) -> _
 NumericConstant:1
 Variable:A(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 NumericConstant:3
 Variable:A(_) -> _
 NumericConstant:2
 Variable:A(_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z1 -> _
 NumericConstant:3
 Variable:A(_) -> _
 AssignmentOperator:= _ -> _
880 IF B(1)>B(2) AND B(1)>B(3) THEN Z2=B(1)
 NumericConstant:1
 Variable:B(_) -> _
 NumericConstant:2
 Variable:B(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 NumericConstant:1
 Variable:B(_) -> _
 NumericConstant:3
 Variable:B(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z2 -> _
 NumericConstant:1
 Variable:B(_) -> _
 AssignmentOperator:= _ -> _
882 IF B(2)>B(1) AND B(2)>B(3) THEN Z2=B(2)
 NumericConstant:2
 Variable:B(_) -> _
 NumericConstant:1
 Variable:B(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 NumericConstant:2
 Variable:B(_) -> _
 NumericConstant:3
 Variable:B(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z2 -> _
 NumericConstant:2
 Variable:B(_) -> _
 AssignmentOperator:= _ -> _
884 IF B(3)>B(1) AND B(3)>B(2) THEN Z2=B(3)
 NumericConstant:3
 Variable:B(_) -> _
 NumericConstant:1
 Variable:B(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 NumericConstant:3
 Variable:B(_) -> _
 NumericConstant:2
 Variable:B(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z2 -> _
 NumericConstant:3
 Variable:B(_) -> _
 AssignmentOperator:= _ -> _
890 IF Z1=1 OR Z2=6 THEN 90
 Variable:Z1 -> _
 NumericConstant:1
 BinaryOperatorEqual:=(_,_) -> ?
 Variable:Z2 -> _
 NumericConstant:6
 BinaryOperatorEqual:=(_,_) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 LineNumber:90
900 IF F(Z1-1,Z2+1)>0 THEN 90
 Variable:Z1 -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:Z2 -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:90
910 IF F(Z1,Z2+1)>0 AND F(Z1,Z2+1)=F(Z1-1,Z2) THEN 90
 Variable:Z1 -> _
 Variable:Z2 -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 Variable:Z1 -> _
 Variable:Z2 -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:F(_,_) -> _
 Variable:Z1 -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:Z2 -> _
 Variable:F(_,_) -> _
 BinaryOperatorEqual:=(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 LineNumber:90
920 A(K+1)=Z1-1
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:A(_) -> _
 Variable:Z1 -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
930 B(K+1)=Z2+1
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:B(_) -> _
 Variable:Z2 -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
940 NEXT K
 Variable:K -> _
950 F(A,B)=9-2*I-J
 Variable:A -> _
 Variable:B -> _
 Variable:F(_,_) -> _
 NumericConstant:9
 NumericConstant:2
 Variable:I -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:J -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
960 FOR K=1 TO N
 control: Variable:K -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N -> _"]
970 F(A(K+1),B(K+1))=F(A,B)
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:A(_) -> _
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:B(_) -> _
 Variable:F(_,_) -> _
 Variable:A -> _
 Variable:B -> _
 Variable:F(_,_) -> _
 AssignmentOperator:= _ -> _
980 NEXT K
 Variable:K -> _
990 NEXT J
 Variable:J -> _
1000 NEXT I
 Variable:I -> _
1010 PRINT
 CarriageControl:NL
1020 PRINT "THE FOLLOWING CODE OF THE BAD GUYS' FLEET DISPOSITION"
 TextConstant:"THE FOLLOWING CODE OF THE BAD GUYS' FLEET DISPOSITION"
 CarriageControl:NL
1030 PRINT "HAS BEEN CAPTURED BUT NOT DECODED:"
 TextConstant:"HAS BEEN CAPTURED BUT NOT DECODED:"
 CarriageControl:NL
1040 PRINT
 CarriageControl:NL
1050 FOR I=1 TO 6
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:6"]
1051 FOR J=1 TO 6
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:6"]
1052 H(I,J)=F(J,I)
 Variable:I -> _
 Variable:J -> _
 Variable:H(_,_) -> _
 Variable:J -> _
 Variable:I -> _
 Variable:F(_,_) -> _
 AssignmentOperator:= _ -> _
1053 NEXT J
 Variable:J -> _
1054 NEXT I
 Variable:I -> _
1060 FOR I=1 TO 6
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:6"]
1061 FOR J=1 TO 6
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:6"]
1062 PRINT H(I,J);
 Variable:I -> _
 Variable:J -> _
 Variable:H(_,_) -> _
 CarriageControl:;
1063 NEXT J
 Variable:J -> _
1064 PRINT
 CarriageControl:NL
1065 NEXT I
 Variable:I -> _
1070 PRINT
 CarriageControl:NL
1080 PRINT "DE-CODE IT AND USE IT IF YOU CAN"
 TextConstant:"DE-CODE IT AND USE IT IF YOU CAN"
 CarriageControl:NL
1090 PRINT "BUT KEEP THE DE-CODING METHOD A SECRET."
 TextConstant:"BUT KEEP THE DE-CODING METHOD A SECRET."
 CarriageControl:NL
1100 PRINT
 CarriageControl:NL
1110 FOR I=1 TO 6
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:6"]
1111 FOR J=1 TO 6
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:6"]
1112 H(I,J)=0
 Variable:I -> _
 Variable:J -> _
 Variable:H(_,_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
1113 NEXT J
 Variable:J -> _
1114 NEXT I
 Variable:I -> _
1120 FOR I=1 TO 3
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:3"]
1121 L(I)=0
 Variable:I -> _
 Variable:L(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
1122 NEXT I
 Variable:I -> _
1130 C(1)=2:C(2)=2
 NumericConstant:1
 Variable:C(_) -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
 NumericConstant:2
 Variable:C(_) -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
1140 C(3)=1:C(4)=1
 NumericConstant:3
 Variable:C(_) -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
 NumericConstant:4
 Variable:C(_) -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
1150 C(5)=0:C(6)=0
 NumericConstant:5
 Variable:C(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
 NumericConstant:6
 Variable:C(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
1160 S=0:H=0
 Variable:S -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
 Variable:H -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
1170 PRINT "START GAME"
 TextConstant:"START GAME"
 CarriageControl:NL
1180 INPUT X,Y
 Variable:X -> _
 Variable:Y -> _
1190 IF X<1 OR X>6 OR INT(X)<>ABS(X) THEN 1210
 Variable:X -> _
 NumericConstant:1
 BinaryOperatorLess:<(_,_) -> ?
 Variable:X -> _
 NumericConstant:6
 BinaryOperatorGreater:>(_,_) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 Variable:X -> _
 FunctionInt:INT(_) -> _
 Variable:X -> _
 FunctionAbs:ABS(_) -> _
 BinaryOperatorNotEqual:<>(_,_) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 LineNumber:1210
1200 IF Y>0 AND Y<7 AND INT(Y)=ABS(Y) THEN 1230
 Variable:Y -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 Variable:Y -> _
 NumericConstant:7
 BinaryOperatorLess:<(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Y -> _
 FunctionInt:INT(_) -> _
 Variable:Y -> _
 FunctionAbs:ABS(_) -> _
 BinaryOperatorEqual:=(_,_) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 LineNumber:1230
1210 PRINT "INVALID INPUT.  TRY AGAIN."
 TextConstant:"INVALID INPUT.  TRY AGAIN."
 CarriageControl:NL
1220 GOTO 1180
 LineNumber:1180
1230 R=7-Y
 Variable:R -> _
 NumericConstant:7
 Variable:Y -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
1240 C=X
 Variable:C -> _
 Variable:X -> _
 AssignmentOperator:= _ -> _
1250 IF F(R,C)>0 THEN 1290
 Variable:R -> _
 Variable:C -> _
 Variable:F(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1290
1260 S=S+1
 Variable:S -> _
 Variable:S -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
1270 PRINT "SPLASH!  TRY AGAIN."
 TextConstant:"SPLASH!  TRY AGAIN."
 CarriageControl:NL
1280 GOTO 1180
 LineNumber:1180
1290 IF C(F(R,C))<4 THEN 1340
 Variable:R -> _
 Variable:C -> _
 Variable:F(_,_) -> _
 Variable:C(_) -> _
 NumericConstant:4
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1340
1300 PRINT "THERE USED TO BE A SHIP AT THAT POINT, BUT YOU SUNK IT."
 TextConstant:"THERE USED TO BE A SHIP AT THAT POINT, BUT YOU SUNK IT."
 CarriageControl:NL
1310 PRINT "SPLASH!  TRY AGAIN."
 TextConstant:"SPLASH!  TRY AGAIN."
 CarriageControl:NL
1320 S=S+1
 Variable:S -> _
 Variable:S -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
1330 GOTO 1180
 LineNumber:1180
1340 IF H(R,C)>0 THEN 1420
 Variable:R -> _
 Variable:C -> _
 Variable:H(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1420
1350 H=H+1
 Variable:H -> _
 Variable:H -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
1360 H(R,C)=F(R,C)
 Variable:R -> _
 Variable:C -> _
 Variable:H(_,_) -> _
 Variable:R -> _
 Variable:C -> _
 Variable:F(_,_) -> _
 AssignmentOperator:= _ -> _
1370 PRINT "A DIRECT HIT ON SHIP NUMBER";F(R,C)
 TextConstant:"A DIRECT HIT ON SHIP NUMBER"
 CarriageControl:;
 Variable:R -> _
 Variable:C -> _
 Variable:F(_,_) -> _
 CarriageControl:NL
1380 C(F(R,C))=C(F(R,C))+1
 Variable:R -> _
 Variable:C -> _
 Variable:F(_,_) -> _
 Variable:C(_) -> _
 Variable:R -> _
 Variable:C -> _
 Variable:F(_,_) -> _
 Variable:C(_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
1390 IF C(F(R,C))>=4 THEN 1470
 Variable:R -> _
 Variable:C -> _
 Variable:F(_,_) -> _
 Variable:C(_) -> _
 NumericConstant:4
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 LineNumber:1470
1400 PRINT "TRY AGAIN."
 TextConstant:"TRY AGAIN."
 CarriageControl:NL
1410 GOTO 1180
 LineNumber:1180
1420 PRINT "YOU ALREADY PUT A HOLE IN SHIP NUMBER";F(R,C);
 TextConstant:"YOU ALREADY PUT A HOLE IN SHIP NUMBER"
 CarriageControl:;
 Variable:R -> _
 Variable:C -> _
 Variable:F(_,_) -> _
 CarriageControl:;
1430 PRINT "AT THAT POINT."
 TextConstant:"AT THAT POINT."
 CarriageControl:NL
1440 PRINT "SPLASH!  TRY AGAIN."
 TextConstant:"SPLASH!  TRY AGAIN."
 CarriageControl:NL
1450 S=S+1
 Variable:S -> _
 Variable:S -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
1460 GOTO 1180
 LineNumber:1180
1470 L((INT(F(R,C)-1)/2)+1)=L((INT(F(R,C)-1)/2)+1)+1
 Variable:R -> _
 Variable:C -> _
 Variable:F(_,_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 FunctionInt:INT(_) -> _
 NumericConstant:2
 BinaryOperatorDivide:/(_,_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:L(_) -> _
 Variable:R -> _
 Variable:C -> _
 Variable:F(_,_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 FunctionInt:INT(_) -> _
 NumericConstant:2
 BinaryOperatorDivide:/(_,_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:L(_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
1480 PRINT "AND YOU SUNK IT.  HURRAH FOR THE GOOD GUYS."
 TextConstant:"AND YOU SUNK IT.  HURRAH FOR THE GOOD GUYS."
 CarriageControl:NL
1490 PRINT "SO FAR, THE BAD GUYS HAVE LOST"
 TextConstant:"SO FAR, THE BAD GUYS HAVE LOST"
 CarriageControl:NL
1500 PRINT L(1);"DESTROYER(S),";L(2);"CRUISER(S), AND";
 NumericConstant:1
 Variable:L(_) -> _
 CarriageControl:;
 TextConstant:"DESTROYER(S),"
 CarriageControl:;
 NumericConstant:2
 Variable:L(_) -> _
 CarriageControl:;
 TextConstant:"CRUISER(S), AND"
 CarriageControl:;
1510 PRINT L(3);"AIRCRAFT CARRIER(S)."
 NumericConstant:3
 Variable:L(_) -> _
 CarriageControl:;
 TextConstant:"AIRCRAFT CARRIER(S)."
 CarriageControl:NL
1520 PRINT "YOUR CURRENT SPLASH/HIT RATIO IS";S/H
 TextConstant:"YOUR CURRENT SPLASH/HIT RATIO IS"
 CarriageControl:;
 Variable:S -> _
 Variable:H -> _
 BinaryOperatorDivide:/(_,_) -> _
 CarriageControl:NL
1530 IF (L(1)+L(2)+L(3))<6 THEN 1180
 NumericConstant:1
 Variable:L(_) -> _
 NumericConstant:2
 Variable:L(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 NumericConstant:3
 Variable:L(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 NumericConstant:6
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1180
1540 PRINT
 CarriageControl:NL
1550 PRINT "YOU HAVE TOTALLY WIPED OUT THE BAD GUYS' FLEET"
 TextConstant:"YOU HAVE TOTALLY WIPED OUT THE BAD GUYS' FLEET"
 CarriageControl:NL
1560 PRINT "WITH A FINAL SPLASH/HIT RATIO OF";S/H
 TextConstant:"WITH A FINAL SPLASH/HIT RATIO OF"
 CarriageControl:;
 Variable:S -> _
 Variable:H -> _
 BinaryOperatorDivide:/(_,_) -> _
 CarriageControl:NL
1570 IF S/H>0 THEN 1590
 Variable:S -> _
 Variable:H -> _
 BinaryOperatorDivide:/(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1590
1580 PRINT "CONGRATULATIONS -- A DIRECT HIT EVERY TIME."
 TextConstant:"CONGRATULATIONS -- A DIRECT HIT EVERY TIME."
 CarriageControl:NL
1590 PRINT
 CarriageControl:NL
1600 PRINT "****************************"
 TextConstant:"****************************"
 CarriageControl:NL
1610 PRINT
 CarriageControl:NL
1620 GOTO 50
 LineNumber:50
1630 END
 

