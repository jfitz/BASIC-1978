Statistics:

Number of lines: 196
Number of valid statements: 204
Number of comments: 3
Number of executable statements: 204

Complexity:

Comment density: 0.015
Comprehension effort: 788
McCabe complexity: 76
Halstead complexity:
 length: 1728
 volume: 8450.523
 difficulty: 94.459
 effort: 798225.576
 language: 0.947
 intelligence: 89.463
 time: 739.098

5 (0 4) PRINT TAB(33); "BATTLE"
  Origs: :start
  Dests: 7:auto
7 (0 4) PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 5:auto
  Dests: 40:auto
10 (0 1) REM -- BATTLE WRITTEN BY RAY WESTERGARD  10/70
  Origs: 
  Dests: 
20 (0 1) REM COPYRIGHT 1971 BY THE REGENTS OF THE UNIV. OF CALIF.
  Origs: 
  Dests: 
30 (0 1) REM PRODUCED AT THE LAWRENCE HALL OF SCIENCE, BERKELEY
  Origs: 
  Dests: 
40 (0 7) DIM F(6, 6), H(6, 6), A(4), B(4), C(6), L(3)
  Origs: 7:auto
  Dests: 50:auto
50 F(X:50) (1 3) FOR X = 1 TO 6
  Origs: 40:auto, 1620:goto
  Dests: 51:fornext, 54:fornext
51 F(X:50,Y:51) (1 3) FOR Y = 1 TO 6
  Origs: 50:fornext
  Dests: 52:fornext, 53:fornext
52 F(X:50,Y:51) (0 3) F(X, Y) = 0
  Origs: 51:fornext
  Dests: 53:auto
53 F(X:50,Y:51) (0 1) NEXT Y
  Origs: 51:fornext, 52:auto
  Dests: 54:auto
54 F(X:50) (0 1) NEXT X
  Origs: 50:fornext, 53:auto
  Dests: 60:auto
60 F(I:60) (1 3) FOR I = 1 TO 3
  Origs: 54:auto
  Dests: 70:fornext, 1000:fornext
70 F(I:60) (0 4) N = 4 - I
  Origs: 60:fornext
  Dests: 80:auto
80 F(I:60,J:80) (1 3) FOR J = 1 TO 2
  Origs: 70:auto
  Dests: 90:fornext, 990:fornext
90 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) A = INT(6 * RND(1) + 1)
  Origs: 80:fornext, 120:ifthen, 250:ifthen, 260:ifthen, 480:ifthen, 490:ifthen, 500:ifthen, 650:ifthen, 660:ifthen, 890:ifthen, 900:ifthen, 910:ifthen
  Dests: 100:auto
100 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) B = INT(6 * RND(1) + 1)
  Origs: 90:auto
  Dests: 110:auto
110 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) D = INT(4 * RND(1) + 1)
  Origs: 100:auto
  Dests: 120:auto
120 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 5) IF F(A, B) > 0 THEN 90
  Origs: 110:auto
  Dests: 90:ifthen, 130:auto
130 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) M = 0
  Origs: 120:auto
  Dests: 140:auto
140 F(I:60,J:80,K:170,K:370,K:570,K:780) (4 6) ON D GOTO 150, 340, 550, 740
  Origs: 130:auto
  Dests: 150:auto, 150:goto, 340:goto, 550:goto, 740:goto
150 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) B(1) = B
  Origs: 140:auto, 140:goto
  Dests: 160:auto
160 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) B(2) = 7
    F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) B(3) = 7
  Origs: 150:auto
  Dests: 170:auto
170 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 3) FOR K = 1 TO N
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 160:auto
  Dests: 180:fornext, 280:fornext
180 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 4) IF M > 1 THEN 240
  Origs: 170:fornext
  Dests: 190:auto, 240:ifthen
190 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 4) IF B(K) = 6 THEN 230
  Origs: 180:auto
  Dests: 200:auto, 230:ifthen
200 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 4) IF F(A, B(K) + 1) > 0 THEN 230
  Origs: 190:auto
  Dests: 210:auto, 230:ifthen
210 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) B(K + 1) = B(K) + 1
  Origs: 200:auto
  Dests: 220:auto
220 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 2) GOTO 280
  Origs: 210:auto
  Dests: 280:goto
230 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) M = 2
  Origs: 190:ifthen, 200:ifthen
  Dests: 240:auto
240 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF B(1) < B(2) AND B(1) < B(3) THEN Z = B(1)
  Origs: 180:ifthen, 230:auto
  Dests: 242:auto
242 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF B(2) < B(1) AND B(2) < B(3) THEN Z = B(2)
  Origs: 240:auto
  Dests: 244:auto
244 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF B(3) < B(1) AND B(3) < B(2) THEN Z = B(3)
  Origs: 242:auto
  Dests: 250:auto
250 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 5) IF Z = 1 THEN 90
  Origs: 244:auto
  Dests: 90:ifthen, 260:auto
260 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 5) IF F(A, Z - 1) > 0 THEN 90
  Origs: 250:auto
  Dests: 90:ifthen, 270:auto
270 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) B(K + 1) = Z - 1
  Origs: 260:auto
  Dests: 280:auto
280 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 1) NEXT K
  Origs: 170:fornext, 220:goto, 270:auto
  Dests: 290:auto
290 F(I:60,J:80) (0 7) F(A, B) = 9 - 2 * I - J
  Origs: 280:auto
  Dests: 300:auto
300 F(I:60,J:80,K:300) (1 3) FOR K = 1 TO N
  Origs: 290:auto
  Dests: 310:fornext, 320:fornext
310 F(I:60,J:80,K:300) (0 3) F(A, B(K + 1)) = F(A, B)
  Origs: 300:fornext
  Dests: 320:auto
320 F(I:60,J:80,K:300) (0 1) NEXT K
  Origs: 300:fornext, 310:auto
  Dests: 330:auto
330 F(I:60,J:80) (0 2) GOTO 990
  Origs: 320:auto
  Dests: 990:goto
340 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) A(1) = A
  Origs: 140:goto
  Dests: 350:auto
350 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) B(1) = B
  Origs: 340:auto
  Dests: 360:auto
360 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) A(2) = 0
    F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) A(3) = 0
    F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) B(2) = 0
    F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) B(3) = 0
  Origs: 350:auto
  Dests: 370:auto
370 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 3) FOR K = 1 TO N
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 360:auto
  Dests: 380:fornext, 530:fornext
380 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 4) IF M > 1 THEN 460
  Origs: 370:fornext
  Dests: 390:auto, 460:ifthen
390 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 7) IF A(K) = 1 OR B(K) = 1 THEN 450
  Origs: 380:auto
  Dests: 400:auto, 450:ifthen
400 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 4) IF F(A(K) - 1, B(K) - 1) > 0 THEN 450
  Origs: 390:auto
  Dests: 410:auto, 450:ifthen
410 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 7) IF F(A(K) - 1, B(K)) > 0 AND F(A(K) - 1, B(K)) = F(A(K), B(K) - 1) THEN 450
  Origs: 400:auto
  Dests: 420:auto, 450:ifthen
420 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) A(K + 1) = A(K) - 1
  Origs: 410:auto
  Dests: 430:auto
430 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) B(K + 1) = B(K) - 1
  Origs: 420:auto
  Dests: 440:auto
440 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 2) GOTO 530
  Origs: 430:auto
  Dests: 530:goto
450 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) M = 2
  Origs: 390:ifthen, 400:ifthen, 410:ifthen
  Dests: 460:auto
460 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF A(1) > A(2) AND A(1) > A(3) THEN Z1 = A(1)
  Origs: 380:ifthen, 450:auto
  Dests: 462:auto
462 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF A(2) > A(1) AND A(2) > A(3) THEN Z1 = A(2)
  Origs: 460:auto
  Dests: 464:auto
464 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF A(3) > A(1) AND A(3) > A(2) THEN Z1 = A(3)
  Origs: 462:auto
  Dests: 470:auto
470 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF B(1) > B(2) AND B(1) > B(3) THEN Z2 = B(1)
  Origs: 464:auto
  Dests: 474:auto
474 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF B(2) > B(1) AND B(2) > B(3) THEN Z2 = B(2)
  Origs: 470:auto
  Dests: 476:auto
476 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF B(3) > B(1) AND B(3) > B(2) THEN Z2 = B(3)
  Origs: 474:auto
  Dests: 480:auto
480 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 8) IF Z1 = 6 OR Z2 = 6 THEN 90
  Origs: 476:auto
  Dests: 90:ifthen, 490:auto
490 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 5) IF F(Z1 + 1, Z2 + 1) > 0 THEN 90
  Origs: 480:auto
  Dests: 90:ifthen, 500:auto
500 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 8) IF F(Z1, Z2 + 1) > 0 AND F(Z1, Z2 + 1) = F(Z1 + 1, Z2) THEN 90
  Origs: 490:auto
  Dests: 90:ifthen, 510:auto
510 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) A(K + 1) = Z1 + 1
  Origs: 500:auto
  Dests: 520:auto
520 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) B(K + 1) = Z2 + 1
  Origs: 510:auto
  Dests: 530:auto
530 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 1) NEXT K
  Origs: 370:fornext, 440:goto, 520:auto
  Dests: 540:auto
540 F(I:60,J:80) (0 2) GOTO 950
  Origs: 530:auto
  Dests: 950:goto
550 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) A(1) = A
  Origs: 140:goto
  Dests: 560:auto
560 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) A(2) = 7
    F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) A(3) = 7
  Origs: 550:auto
  Dests: 570:auto
570 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 3) FOR K = 1 TO N
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 560:auto
  Dests: 580:fornext, 680:fornext
580 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 4) IF M > 1 THEN 640
  Origs: 570:fornext
  Dests: 590:auto, 640:ifthen
590 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 4) IF A(K) = 6 THEN 630
  Origs: 580:auto
  Dests: 600:auto, 630:ifthen
600 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 4) IF F(A(K) + 1, B) > 0 THEN 630
  Origs: 590:auto
  Dests: 610:auto, 630:ifthen
610 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) A(K + 1) = A(K) + 1
  Origs: 600:auto
  Dests: 620:auto
620 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 2) GOTO 680
  Origs: 610:auto
  Dests: 680:goto
630 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) M = 2
  Origs: 590:ifthen, 600:ifthen
  Dests: 640:auto
640 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF A(1) < A(2) AND A(1) < A(3) THEN Z = A(1)
  Origs: 580:ifthen, 630:auto
  Dests: 642:auto
642 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF A(2) < A(1) AND A(2) < A(3) THEN Z = A(2)
  Origs: 640:auto
  Dests: 644:auto
644 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF A(3) < A(1) AND A(3) < A(2) THEN Z = A(3)
  Origs: 642:auto
  Dests: 650:auto
650 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 5) IF Z = 1 THEN 90
  Origs: 644:auto
  Dests: 90:ifthen, 660:auto
660 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 5) IF F(Z - 1, B) > 0 THEN 90
  Origs: 650:auto
  Dests: 90:ifthen, 670:auto
670 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) A(K + 1) = Z - 1
  Origs: 660:auto
  Dests: 680:auto
680 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 1) NEXT K
  Origs: 570:fornext, 620:goto, 670:auto
  Dests: 690:auto
690 F(I:60,J:80) (0 7) F(A, B) = 9 - 2 * I - J
  Origs: 680:auto
  Dests: 700:auto
700 F(I:60,J:80,K:700) (1 3) FOR K = 1 TO N
  Origs: 690:auto
  Dests: 710:fornext, 720:fornext
710 F(I:60,J:80,K:700) (0 3) F(A(K + 1), B) = F(A, B)
  Origs: 700:fornext
  Dests: 720:auto
720 F(I:60,J:80,K:700) (0 1) NEXT K
  Origs: 700:fornext, 710:auto
  Dests: 730:auto
730 F(I:60,J:80) (0 2) GOTO 990
  Origs: 720:auto
  Dests: 990:goto
740 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) A(1) = A
  Origs: 140:goto
  Dests: 750:auto
750 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) B(1) = B
  Origs: 740:auto
  Dests: 760:auto
760 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) A(2) = 7
    F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) A(3) = 7
  Origs: 750:auto
  Dests: 770:auto
770 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) B(2) = 0
    F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) B(3) = 0
  Origs: 760:auto
  Dests: 780:auto
780 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 3) FOR K = 1 TO N
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 770:auto
  Dests: 790:fornext, 940:fornext
790 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 4) IF M > 1 THEN 870
  Origs: 780:fornext
  Dests: 800:auto, 870:ifthen
800 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 7) IF A(K) = 6 OR B(K) = 1 THEN 860
  Origs: 790:auto
  Dests: 810:auto, 860:ifthen
810 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 4) IF F(A(K) + 1, B(K) - 1) > 0 THEN 860
  Origs: 800:auto
  Dests: 820:auto, 860:ifthen
820 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 7) IF F(A(K) + 1, B(K)) > 0 AND F(A(K) + 1, B(K)) = F(A(K), B(K) - 1) THEN 860
  Origs: 810:auto
  Dests: 830:auto, 860:ifthen
830 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) A(K + 1) = A(K) + 1
  Origs: 820:auto
  Dests: 840:auto
840 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) B(K + 1) = B(K) - 1
  Origs: 830:auto
  Dests: 850:auto
850 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 2) GOTO 940
  Origs: 840:auto
  Dests: 940:goto
860 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 3) M = 2
  Origs: 800:ifthen, 810:ifthen, 820:ifthen
  Dests: 870:auto
870 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF A(1) < A(2) AND A(1) < A(3) THEN Z1 = A(1)
  Origs: 790:ifthen, 860:auto
  Dests: 872:auto
872 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF A(2) < A(1) AND A(2) < A(3) THEN Z1 = A(2)
  Origs: 870:auto
  Dests: 874:auto
874 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF A(3) < A(1) AND A(3) < A(2) THEN Z1 = A(3)
  Origs: 872:auto
  Dests: 880:auto
880 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF B(1) > B(2) AND B(1) > B(3) THEN Z2 = B(1)
  Origs: 874:auto
  Dests: 882:auto
882 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF B(2) > B(1) AND B(2) > B(3) THEN Z2 = B(2)
  Origs: 880:auto
  Dests: 884:auto
884 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 9) IF B(3) > B(1) AND B(3) > B(2) THEN Z2 = B(3)
  Origs: 882:auto
  Dests: 890:auto
890 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 8) IF Z1 = 1 OR Z2 = 6 THEN 90
  Origs: 884:auto
  Dests: 90:ifthen, 900:auto
900 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 5) IF F(Z1 - 1, Z2 + 1) > 0 THEN 90
  Origs: 890:auto
  Dests: 90:ifthen, 910:auto
910 F(I:60,J:80,K:170,K:370,K:570,K:780) (1 8) IF F(Z1, Z2 + 1) > 0 AND F(Z1, Z2 + 1) = F(Z1 - 1, Z2) THEN 90
  Origs: 900:auto
  Dests: 90:ifthen, 920:auto
920 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) A(K + 1) = Z1 - 1
  Origs: 910:auto
  Dests: 930:auto
930 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 4) B(K + 1) = Z2 + 1
  Origs: 920:auto
  Dests: 940:auto
940 F(I:60,J:80,K:170,K:370,K:570,K:780) (0 1) NEXT K
  Origs: 780:fornext, 850:goto, 930:auto
  Dests: 950:auto
950 F(I:60,J:80) (0 7) F(A, B) = 9 - 2 * I - J
  Origs: 540:goto, 940:auto
  Dests: 960:auto
960 F(I:60,J:80,K:960) (1 3) FOR K = 1 TO N
  Origs: 950:auto
  Dests: 970:fornext, 980:fornext
970 F(I:60,J:80,K:960) (0 3) F(A(K + 1), B(K + 1)) = F(A, B)
  Origs: 960:fornext
  Dests: 980:auto
980 F(I:60,J:80,K:960) (0 1) NEXT K
  Origs: 960:fornext, 970:auto
  Dests: 990:auto
990 F(I:60,J:80) (0 1) NEXT J
  Origs: 80:fornext, 330:goto, 730:goto, 980:auto
  Dests: 1000:auto
1000 F(I:60) (0 1) NEXT I
  Origs: 60:fornext, 990:auto
  Dests: 1010:auto
1010 (0 2) PRINT
  Origs: 1000:auto
  Dests: 1020:auto
1020 (0 2) PRINT "THE FOLLOWING CODE OF THE BAD GUYS' FLEET DISPOSITION"
  Origs: 1010:auto
  Dests: 1030:auto
1030 (0 2) PRINT "HAS BEEN CAPTURED BUT NOT DECODED:"
  Origs: 1020:auto
  Dests: 1040:auto
1040 (0 2) PRINT
  Origs: 1030:auto
  Dests: 1050:auto
1050 F(I:1050) (1 3) FOR I = 1 TO 6
  Origs: 1040:auto
  Dests: 1051:fornext, 1054:fornext
1051 F(I:1050,J:1051) (1 3) FOR J = 1 TO 6
  Origs: 1050:fornext
  Dests: 1052:fornext, 1053:fornext
1052 F(I:1050,J:1051) (0 3) H(I, J) = F(J, I)
  Origs: 1051:fornext
  Dests: 1053:auto
1053 F(I:1050,J:1051) (0 1) NEXT J
  Origs: 1051:fornext, 1052:auto
  Dests: 1054:auto
1054 F(I:1050) (0 1) NEXT I
  Origs: 1050:fornext, 1053:auto
  Dests: 1060:auto
1060 F(I:1060) (1 3) FOR I = 1 TO 6
  Origs: 1054:auto
  Dests: 1061:fornext, 1065:fornext
1061 F(I:1060,J:1061) (1 3) FOR J = 1 TO 6
  Origs: 1060:fornext
  Dests: 1062:fornext, 1063:fornext
1062 F(I:1060,J:1061) (0 2) PRINT H(I, J);
  Origs: 1061:fornext
  Dests: 1063:auto
1063 F(I:1060,J:1061) (0 1) NEXT J
  Origs: 1061:fornext, 1062:auto
  Dests: 1064:auto
1064 F(I:1060) (0 2) PRINT
  Origs: 1063:auto
  Dests: 1065:auto
1065 F(I:1060) (0 1) NEXT I
  Origs: 1060:fornext, 1064:auto
  Dests: 1070:auto
1070 (0 2) PRINT
  Origs: 1065:auto
  Dests: 1080:auto
1080 (0 2) PRINT "DE-CODE IT AND USE IT IF YOU CAN"
  Origs: 1070:auto
  Dests: 1090:auto
1090 (0 2) PRINT "BUT KEEP THE DE-CODING METHOD A SECRET."
  Origs: 1080:auto
  Dests: 1100:auto
1100 (0 2) PRINT
  Origs: 1090:auto
  Dests: 1110:auto
1110 F(I:1110) (1 3) FOR I = 1 TO 6
  Origs: 1100:auto
  Dests: 1111:fornext, 1114:fornext
1111 F(I:1110,J:1111) (1 3) FOR J = 1 TO 6
  Origs: 1110:fornext
  Dests: 1112:fornext, 1113:fornext
1112 F(I:1110,J:1111) (0 3) H(I, J) = 0
  Origs: 1111:fornext
  Dests: 1113:auto
1113 F(I:1110,J:1111) (0 1) NEXT J
  Origs: 1111:fornext, 1112:auto
  Dests: 1114:auto
1114 F(I:1110) (0 1) NEXT I
  Origs: 1110:fornext, 1113:auto
  Dests: 1120:auto
1120 F(I:1120) (1 3) FOR I = 1 TO 3
  Origs: 1114:auto
  Dests: 1121:fornext, 1122:fornext
1121 F(I:1120) (0 3) L(I) = 0
  Origs: 1120:fornext
  Dests: 1122:auto
1122 F(I:1120) (0 1) NEXT I
  Origs: 1120:fornext, 1121:auto
  Dests: 1130:auto
1130 (0 3) C(1) = 2
     (0 3) C(2) = 2
  Origs: 1122:auto
  Dests: 1140:auto
1140 (0 3) C(3) = 1
     (0 3) C(4) = 1
  Origs: 1130:auto
  Dests: 1150:auto
1150 (0 3) C(5) = 0
     (0 3) C(6) = 0
  Origs: 1140:auto
  Dests: 1160:auto
1160 (0 3) S = 0
     (0 3) H = 0
  Origs: 1150:auto
  Dests: 1170:auto
1170 (0 2) PRINT "START GAME"
  Origs: 1160:auto
  Dests: 1180:auto
1180 (2 3) INPUT X, Y
  Origs: 1170:auto, 1220:goto, 1280:goto, 1330:goto, 1410:goto, 1460:goto, 1530:ifthen
  Dests: 1190:auto
1190 (1 12) IF X < 1 OR X > 6 OR INT(X) <> ABS(X) THEN 1210
  Origs: 1180:auto
  Dests: 1200:auto, 1210:ifthen
1200 (1 12) IF Y > 0 AND Y < 7 AND INT(Y) = ABS(Y) THEN 1230
  Origs: 1190:auto
  Dests: 1210:auto, 1230:ifthen
1210 (0 2) PRINT "INVALID INPUT.  TRY AGAIN."
  Origs: 1190:ifthen, 1200:auto
  Dests: 1220:auto
1220 (0 3) GOTO 1180
  Origs: 1210:auto
  Dests: 1180:goto
1230 (0 4) R = 7 - Y
  Origs: 1200:ifthen
  Dests: 1240:auto
1240 (0 3) C = X
  Origs: 1230:auto
  Dests: 1250:auto
1250 (1 4) IF F(R, C) > 0 THEN 1290
  Origs: 1240:auto
  Dests: 1260:auto, 1290:ifthen
1260 (0 4) S = S + 1
  Origs: 1250:auto
  Dests: 1270:auto
1270 (0 2) PRINT "SPLASH!  TRY AGAIN."
  Origs: 1260:auto
  Dests: 1280:auto
1280 (0 3) GOTO 1180
  Origs: 1270:auto
  Dests: 1180:goto
1290 (1 4) IF C(F(R, C)) < 4 THEN 1340
  Origs: 1250:ifthen
  Dests: 1300:auto, 1340:ifthen
1300 (0 2) PRINT "THERE USED TO BE A SHIP AT THAT POINT, BUT YOU SUNK IT."
  Origs: 1290:auto
  Dests: 1310:auto
1310 (0 2) PRINT "SPLASH!  TRY AGAIN."
  Origs: 1300:auto
  Dests: 1320:auto
1320 (0 4) S = S + 1
  Origs: 1310:auto
  Dests: 1330:auto
1330 (0 3) GOTO 1180
  Origs: 1320:auto
  Dests: 1180:goto
1340 (1 4) IF H(R, C) > 0 THEN 1420
  Origs: 1290:ifthen
  Dests: 1350:auto, 1420:ifthen
1350 (0 4) H = H + 1
  Origs: 1340:auto
  Dests: 1360:auto
1360 (0 3) H(R, C) = F(R, C)
  Origs: 1350:auto
  Dests: 1370:auto
1370 (0 3) PRINT "A DIRECT HIT ON SHIP NUMBER"; F(R, C)
  Origs: 1360:auto
  Dests: 1380:auto
1380 (0 4) C(F(R, C)) = C(F(R, C)) + 1
  Origs: 1370:auto
  Dests: 1390:auto
1390 (1 4) IF C(F(R, C)) >= 4 THEN 1470
  Origs: 1380:auto
  Dests: 1400:auto, 1470:ifthen
1400 (0 2) PRINT "TRY AGAIN."
  Origs: 1390:auto
  Dests: 1410:auto
1410 (0 3) GOTO 1180
  Origs: 1400:auto
  Dests: 1180:goto
1420 (0 3) PRINT "YOU ALREADY PUT A HOLE IN SHIP NUMBER"; F(R, C);
  Origs: 1340:ifthen
  Dests: 1430:auto
1430 (0 2) PRINT "AT THAT POINT."
  Origs: 1420:auto
  Dests: 1440:auto
1440 (0 2) PRINT "SPLASH!  TRY AGAIN."
  Origs: 1430:auto
  Dests: 1450:auto
1450 (0 4) S = S + 1
  Origs: 1440:auto
  Dests: 1460:auto
1460 (0 3) GOTO 1180
  Origs: 1450:auto
  Dests: 1180:goto
1470 (0 4) L((INT(F(R, C) - 1) / 2) + 1) = L((INT(F(R, C) - 1) / 2) + 1) + 1
  Origs: 1390:ifthen
  Dests: 1480:auto
1480 (0 2) PRINT "AND YOU SUNK IT.  HURRAH FOR THE GOOD GUYS."
  Origs: 1470:auto
  Dests: 1490:auto
1490 (0 2) PRINT "SO FAR, THE BAD GUYS HAVE LOST"
  Origs: 1480:auto
  Dests: 1500:auto
1500 (0 5) PRINT L(1); "DESTROYER(S),"; L(2); "CRUISER(S), AND";
  Origs: 1490:auto
  Dests: 1510:auto
1510 (0 3) PRINT L(3); "AIRCRAFT CARRIER(S)."
  Origs: 1500:auto
  Dests: 1520:auto
1520 (0 4) PRINT "YOUR CURRENT SPLASH/HIT RATIO IS"; S / H
  Origs: 1510:auto
  Dests: 1530:auto
1530 (1 7) IF (L(1) + L(2) + L(3)) < 6 THEN 1180
  Origs: 1520:auto
  Dests: 1180:ifthen, 1540:auto
1540 (0 2) PRINT
  Origs: 1530:auto
  Dests: 1550:auto
1550 (0 2) PRINT "YOU HAVE TOTALLY WIPED OUT THE BAD GUYS' FLEET"
  Origs: 1540:auto
  Dests: 1560:auto
1560 (0 4) PRINT "WITH A FINAL SPLASH/HIT RATIO OF"; S / H
  Origs: 1550:auto
  Dests: 1570:auto
1570 (1 5) IF S / H > 0 THEN 1590
  Origs: 1560:auto
  Dests: 1580:auto, 1590:ifthen
1580 (0 2) PRINT "CONGRATULATIONS -- A DIRECT HIT EVERY TIME."
  Origs: 1570:auto
  Dests: 1590:auto
1590 (0 2) PRINT
  Origs: 1570:ifthen, 1580:auto
  Dests: 1600:auto
1600 (0 2) PRINT "****************************"
  Origs: 1590:auto
  Dests: 1610:auto
1610 (0 2) PRINT
  Origs: 1600:auto
  Dests: 1620:auto
1620 (0 3) GOTO 50
  Origs: 1610:auto
  Dests: 50:goto
1630 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

1630: END

