Statistics:

Number of lines: 165
Number of valid statements: 166
Number of comments: 3
Number of executable statements: 164

Complexity:

Comment density: 0.018
Comprehension effort: 526
McCabe complexity: 43
Halstead complexity:
 length: 711
 volume: 3745.447
 difficulty: 24.494
 effort: 91741.423
 language: 6.243
 intelligence: 152.912
 time: 84.946

10 (0 4) PRINT TAB(33); "SLALOM"
  Origs: :start
  Dests: 20:auto
20 (0 4) PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 10:auto
  Dests: 30:auto
30 (0 2) PRINT
   (0 2) PRINT
   (0 2) PRINT
  Origs: 20:auto
  Dests: 310:auto
310 (0 2) PRINT "HOW MANY GATES DOES THIS COURSE HAVE (1 TO 25)";
  Origs: 30:auto, 400:goto
  Dests: 320:auto
320 (1 2) INPUT V
  Origs: 310:auto
  Dests: 330:auto
330 (1 4) IF V > 25 THEN 360
  Origs: 320:auto
  Dests: 340:auto, 360:ifthen
340 (1 4) IF V < 1 THEN 390
  Origs: 330:auto
  Dests: 350:auto, 390:ifthen
350 (0 2) GOTO 1440
  Origs: 340:auto
  Dests: 1440:goto
360 (0 2) PRINT "25 IS THE LIMIT."
  Origs: 330:ifthen
  Dests: 370:auto
370 (0 3) LET V = 25
  Origs: 360:auto
  Dests: 380:auto
380 (0 2) GOTO 1440
  Origs: 370:auto
  Dests: 1440:goto
390 (0 2) PRINT "TRY AGAIN,"
  Origs: 340:ifthen
  Dests: 400:auto
400 (0 3) GOTO 310
  Origs: 390:auto
  Dests: 310:goto
410 (0 2) PRINT "RATE YOURSELF AS A SKIER, (1=WORST, 3=BEST)";
  Origs: 470:goto, 1520:ifthen
  Dests: 420:auto
420 (1 2) INPUT A
  Origs: 410:auto
  Dests: 430:auto
430 (1 4) IF A < 1 THEN 460
  Origs: 420:auto
  Dests: 440:auto, 460:ifthen
440 (1 4) IF A > 3 THEN 460
  Origs: 430:auto
  Dests: 450:auto, 460:ifthen
450 (0 2) GOTO 480
  Origs: 440:auto
  Dests: 480:goto
460 (0 2) PRINT "THE BOUNDS ARE 1-3"
  Origs: 430:ifthen, 440:ifthen
  Dests: 470:auto
470 (0 3) GOTO 410
  Origs: 460:auto
  Dests: 410:goto
480 G(990) (0 2) PRINT "THE STARTER COUNTS DOWN...5...4...3...2...1...GO!";
  Origs: 450:goto, 780:ifthen
  Dests: 500:auto
490 (0 1) REM
  Origs: 
  Dests: 
500 G(990) (0 3) LET T = 0
  Origs: 480:auto
  Dests: 510:auto
510 G(990) (0 4) LET S = INT(RND(1) * (18 - 9) + 9)
  Origs: 500:auto
  Dests: 520:auto
520 G(990) (0 2) PRINT
  Origs: 510:auto
  Dests: 525:auto
525 G(990) (0 2) PRINT "YOU'RE OFF!"
  Origs: 520:auto
  Dests: 530:auto
530 G(990) F(O:530) (1 3) FOR O = 1 TO V
  Origs: 525:auto
  Dests: 540:fornext, 670:fornext
540 G(990) F(O:530) (1 2) READ Q
  Origs: 530:fornext
  Dests: 550:auto
550 G(990) F(O:530) (0 2) PRINT
  Origs: 540:auto, 1410:goto
  Dests: 555:auto
555 G(990) F(O:530) (0 5) PRINT "HERE COMES GATE #"; STR$(O); ":"
  Origs: 550:auto
  Dests: 560:auto
560 G(990) F(O:530) (0 3) PRINT S; "M.P.H."
  Origs: 555:auto
  Dests: 570:auto
570 G(990) F(O:530) (0 3) LET S1 = S
  Origs: 560:auto
  Dests: 580:auto
580 G(990) F(O:530) (0 2) PRINT "OPTION";
  Origs: 570:auto, 980:goto, 1430:goto
  Dests: 590:auto
590 G(990) F(O:530) (1 2) INPUT O1
  Origs: 580:auto
  Dests: 600:auto
600 G(990) F(O:530) (1 4) IF O1 = 0 THEN 970
  Origs: 590:auto
  Dests: 610:auto, 970:ifthen
610 G(990) F(O:530) (1 4) IF O1 > 8 THEN 1420
  Origs: 600:auto
  Dests: 620:auto, 1420:ifthen
620 G(990) F(O:530) (1 4) IF O1 < 1 THEN 1420
  Origs: 610:auto
  Dests: 630:auto, 1420:ifthen
630 G(990) F(O:530) (0 2) GOSUB 990
  Origs: 620:auto
  Dests: 640:auto, 990:gosub
640 G(990) F(O:530) (1 4) IF S < 7 THEN 1390
  Origs: 630:auto
  Dests: 650:auto, 1390:ifthen
650 G(990) F(O:530) (0 7) LET T = T + (Q - S + 1)
  Origs: 640:auto
  Dests: 660:auto
660 G(990) F(O:530) (1 4) IF S > Q THEN 1630
  Origs: 650:auto
  Dests: 670:auto, 1630:ifthen
670 G(990) F(O:530) (0 1) NEXT O
  Origs: 530:fornext, 660:auto, 1640:goto
  Dests: 680:auto
680 G(990) (0 2) PRINT
    G(990) (0 6) PRINT "YOU TOOK"; (T + RND(1)); "SECONDS."
  Origs: 670:auto
  Dests: 690:auto
690 G(990) (0 3) LET M = T
  Origs: 680:auto
  Dests: 700:auto
700 G(990) (0 4) LET M = M / V
  Origs: 690:auto
  Dests: 710:auto
710 G(990) (1 8) IF M < 1.5 - (A * 0.1) THEN 1650
  Origs: 700:auto
  Dests: 720:auto, 1650:ifthen
720 G(990) (1 8) IF M < 2.9 - (A * 0.1) THEN 1680
  Origs: 710:auto
  Dests: 730:auto, 1680:ifthen
730 G(990) (1 8) IF M < 4.4 - (A * 0.01) THEN 1710
  Origs: 720:auto
  Dests: 740:auto, 1710:ifthen
740 G(990) (0 2) PRINT
    G(990) (0 2) PRINT "DO YOU WANT TO RACE AGAIN";
  Origs: 730:auto, 800:goto, 1280:goto, 1360:goto, 1730:goto
  Dests: 750:auto
750 G(990) (1 2) INPUT B$
  Origs: 740:auto
  Dests: 770:auto
760 (0 1) REM
  Origs: 
  Dests: 
770 G(990) (1 4) IF B$ = "NO" THEN 1740
  Origs: 750:auto
  Dests: 780:auto, 1740:ifthen
780 G(990) (1 5) IF B$ = "YES" THEN 480
    WARNING: Branch to line before GOSUB start
  Origs: 770:auto
  Dests: 480:ifthen, 790:auto
790 G(990) (0 2) PRINT "PLEASE TYPE 'YES' OR 'NO'"
  Origs: 780:auto
  Dests: 800:auto
800 G(990) (0 3) GOTO 740
    WARNING: Branch to line before GOSUB start
  Origs: 790:auto
  Dests: 740:goto
810 (0 1) STOP
  Origs: 
  Dests: :stop
820 (0 2) PRINT
  Origs: 1500:ifthen
  Dests: 825:auto
825 (0 2) PRINT "*** SLALOM: THIS IS THE 1976 WINTER OLYMPIC GIANT SLALOM.  YOU ARE"
  Origs: 820:auto
  Dests: 830:auto
830 (0 2) PRINT "            THE AMERICAN TEAM'S ONLY HOPE OF A GOLD MEDAL."
  Origs: 825:auto
  Dests: 840:auto
840 (0 2) PRINT
  Origs: 830:auto
  Dests: 845:auto
845 (0 2) PRINT "     0 -- TYPE THIS IS YOU WANT TO SEE HOW LONG YOU'VE TAKEN."
  Origs: 840:auto
  Dests: 850:auto
850 (0 2) PRINT "     1 -- TYPE THIS IF YOU WANT TO SPEED UP A LOT."
  Origs: 845:auto
  Dests: 860:auto
860 (0 2) PRINT "     2 -- TYPE THIS IF YOU WANT TO SPEED UP A LITTLE."
  Origs: 850:auto
  Dests: 870:auto
870 (0 2) PRINT "     3 -- TYPE THIS IF YOU WANT TO SPEED UP A TEENSY."
  Origs: 860:auto
  Dests: 880:auto
880 (0 2) PRINT "     4 -- TYPE THIS IF YOU WANT TO KEEP GOING THE SAME SPEED."
  Origs: 870:auto
  Dests: 890:auto
890 (0 2) PRINT "     5 -- TYPE THIS IF YOU WANT TO CHECK A TEENSY."
  Origs: 880:auto
  Dests: 900:auto
900 (0 2) PRINT "     6 -- TYPE THIS IF YOU WANT TO CHECK A LITTLE."
  Origs: 890:auto
  Dests: 910:auto
910 (0 2) PRINT "     7 -- TYPE THIS IF YOU WANT TO CHECK A LOT."
  Origs: 900:auto
  Dests: 920:auto
920 (0 2) PRINT "     8 -- TYPE THIS IF YOU WANT TO CHEAT AND TRY TO SKIP A GATE."
  Origs: 910:auto
  Dests: 930:auto
930 (0 2) PRINT
  Origs: 920:auto
  Dests: 935:auto
935 (0 2) PRINT " THE PLACE TO USE THESE OPTIONS IS WHEN THE COMPUTER ASKS:"
  Origs: 930:auto
  Dests: 940:auto
940 (0 2) PRINT
  Origs: 935:auto
  Dests: 945:auto
945 (0 2) PRINT "OPTION?"
  Origs: 940:auto
  Dests: 950:auto
950 (0 2) PRINT
  Origs: 945:auto
  Dests: 955:auto
955 (0 2) PRINT "                GOOD LUCK!"
  Origs: 950:auto
  Dests: 957:auto
957 (0 2) PRINT
  Origs: 955:auto
  Dests: 960:auto
960 (0 2) GOTO 1470
  Origs: 957:auto
  Dests: 1470:goto
970 G(990) (0 6) PRINT "YOU'VE TAKEN"; (T + RND(1)); "SECONDS."
  Origs: 600:ifthen
  Dests: 980:auto
980 G(990) (0 3) GOTO 580
    WARNING: Branch to line before GOSUB start
  Origs: 970:auto
  Dests: 580:goto
990 G(990) (8 10) ON O1 GOTO 1130, 1010, 1170, 1080, 1190, 1100, 1150, 1210
    WARNING: GOSUB length exceeds limit 40
  Origs: 630:gosub
  Dests: 1000:auto, 1010:goto, 1080:goto, 1100:goto, 1130:goto, 1150:goto, 1170:goto, 1190:goto, 1210:goto
1000 G(990) (0 1) STOP
     WARNING: Terminating statement in GOSUB
  Origs: 990:auto
  Dests: :stop
1010 G(990) (0 5) LET S = S + INT(RND(1) * (5 - 3) + 3)
  Origs: 990:goto
  Dests: 1020:auto
1020 G(990) (0 3) PRINT S; "M.P.H."
  Origs: 1010:auto
  Dests: 1030:auto
1030 G(990) (1 4) IF S > Q THEN 1290
  Origs: 1020:auto, 1090:goto, 1120:goto
  Dests: 1040:auto, 1290:ifthen
1040 G(990) (1 6) IF S > Q - 1 THEN 1060
  Origs: 1030:auto
  Dests: 1050:auto, 1060:ifthen
1050 G(990) (0 1) RETURN
  Origs: 1040:auto
  Dests: 
1060 G(990) (0 2) PRINT "CLOSE ONE!"
  Origs: 1040:ifthen
  Dests: 1070:auto
1070 G(990) (0 1) RETURN
  Origs: 1060:auto
  Dests: 
1080 G(990) (0 3) PRINT S; "M.P.H."
  Origs: 990:goto, 1140:goto
  Dests: 1090:auto
1090 G(990) (0 3) GOTO 1030
  Origs: 1080:auto
  Dests: 1030:goto
1100 G(990) (0 5) LET S = S - INT(RND(1) * (5 - 3) + 3)
  Origs: 990:goto
  Dests: 1110:auto
1110 G(990) (0 3) PRINT S; "M.P.H."
  Origs: 1100:auto, 1160:goto, 1180:goto, 1200:goto
  Dests: 1120:auto
1120 G(990) (0 3) GOTO 1030
  Origs: 1110:auto
  Dests: 1030:goto
1130 G(990) (0 5) LET S = S + INT(RND(1) * (10 - 5) + 5)
  Origs: 990:goto
  Dests: 1140:auto
1140 G(990) (0 3) GOTO 1080
  Origs: 1130:auto
  Dests: 1080:goto
1150 G(990) (0 5) LET S = S - INT(RND(1) * (10 - 5) + 5)
  Origs: 990:goto
  Dests: 1160:auto
1160 G(990) (0 3) GOTO 1110
  Origs: 1150:auto
  Dests: 1110:goto
1170 G(990) (0 5) LET S = S + INT(RND(1) * (4 - 1) + 1)
  Origs: 990:goto
  Dests: 1180:auto
1180 G(990) (0 3) GOTO 1110
  Origs: 1170:auto
  Dests: 1110:goto
1190 G(990) (0 5) LET S = S - INT(RND(1) * (4 - 1) + 1)
  Origs: 990:goto
  Dests: 1200:auto
1200 G(990) (0 3) GOTO 1110
  Origs: 1190:auto
  Dests: 1110:goto
1210 G(990) (0 2) PRINT "***CHEAT"
  Origs: 990:goto
  Dests: 1220:auto
1220 G(990) (1 5) IF RND(1) < 0.7 THEN 1260
  Origs: 1210:auto
  Dests: 1230:auto, 1260:ifthen
1230 G(990) (0 2) PRINT "YOU MADE IT!"
  Origs: 1220:auto
  Dests: 1240:auto
1240 G(990) (0 4) LET T = T + 1.5
  Origs: 1230:auto
  Dests: 1250:auto
1250 G(990) (0 1) RETURN
  Origs: 1240:auto
  Dests: 
1260 G(990) (0 2) PRINT "AN OFFICIAL CAUGHT YOU!"
  Origs: 1220:ifthen
  Dests: 1270:auto
1270 G(990) (0 6) PRINT "YOU TOOK"; (T + RND(1)); "SECONDS."
  Origs: 1260:auto
  Dests: 1280:auto
1280 G(990) (0 3) GOTO 740
     WARNING: Branch to line before GOSUB start
  Origs: 1270:auto
  Dests: 740:goto
1290 G(990) (1 9) IF RND(1) < ((S - Q) * 0.1) + 0.2 THEN 1320
  Origs: 1030:ifthen
  Dests: 1300:auto, 1320:ifthen
1300 G(990) (0 2) PRINT "YOU WENT OVER THE NAXIMUM SPEED AND MADE IT!"
  Origs: 1290:auto
  Dests: 1310:auto
1310 G(990) (0 1) RETURN
  Origs: 1300:auto
  Dests: 
1320 G(990) (0 2) PRINT "YOU WENT OVER THE MAXIMUM SPEED AND ";
  Origs: 1290:ifthen
  Dests: 1330:auto
1330 G(990) (1 5) IF RND(1) < 0.5 THEN 1370
  Origs: 1320:auto
  Dests: 1340:auto, 1370:ifthen
1340 G(990) (0 2) PRINT "WIPED OUT!"
  Origs: 1330:auto
  Dests: 1350:auto
1350 G(990) (0 6) PRINT "YOU TOOK"; (T + RND(1)); "SECONDS"
  Origs: 1340:auto, 1380:goto
  Dests: 1360:auto
1360 G(990) (0 3) GOTO 740
     WARNING: Branch to line before GOSUB start
  Origs: 1350:auto
  Dests: 740:goto
1370 G(990) (0 2) PRINT "SNAGGED A FLAG!"
  Origs: 1330:ifthen
  Dests: 1380:auto
1380 G(990) (0 3) GOTO 1350
  Origs: 1370:auto
  Dests: 1350:goto
1390 G(990) (0 2) PRINT "LET'S BE REALISTIC, OK?  LET'S GO BACK AND TRY AGAIN..."
  Origs: 640:ifthen
  Dests: 1400:auto
1400 G(990) (0 3) LET S = S1
  Origs: 1390:auto
  Dests: 1410:auto
1410 G(990) (0 3) GOTO 550
     WARNING: Branch to line before GOSUB start
  Origs: 1400:auto
  Dests: 550:goto
1420 G(990) (0 2) PRINT "WHAT?"
  Origs: 610:ifthen, 620:ifthen
  Dests: 1430:auto
1430 G(990) (0 3) GOTO 580
     WARNING: Branch to line before GOSUB start
  Origs: 1420:auto
  Dests: 580:goto
1440 (0 2) PRINT
  Origs: 350:goto, 380:goto
  Dests: 1445:auto
1445 (0 8) PRINT "TYPE "; CHR$(34); "INS"; CHR$(34); " FOR INSTRUCTIONS"
  Origs: 1440:auto
  Dests: 1450:auto
1450 (0 8) PRINT "TYPE "; CHR$(34); "MAX"; CHR$(34); " FOR APPROXIMATE MAXIMUM SPEEDS"
  Origs: 1445:auto
  Dests: 1460:auto
1460 (0 8) PRINT "TYPE "; CHR$(34); "RUN"; CHR$(34); " FOR THE BEGINNING OF THE RACE"
  Origs: 1450:auto
  Dests: 1470:auto
1470 (0 2) PRINT "COMMAND--";
  Origs: 960:goto, 1460:auto, 1620:goto
  Dests: 1480:auto
1480 (1 2) INPUT A$
  Origs: 1470:auto, 1540:goto
  Dests: 1500:auto
1490 (0 1) REM
  Origs: 
  Dests: 
1500 (1 5) IF A$ = "INS" THEN 820
  Origs: 1480:auto
  Dests: 820:ifthen, 1510:auto
1510 (1 4) IF A$ = "MAX" THEN 1550
  Origs: 1500:auto
  Dests: 1520:auto, 1550:ifthen
1520 (1 5) IF A$ = "RUN" THEN 410
  Origs: 1510:auto
  Dests: 410:ifthen, 1530:auto
1530 (0 7) PRINT CHR$(34); A$; CHR$(34); " IS AN ILLEGAL COMMAND--RETRY";
  Origs: 1520:auto
  Dests: 1540:auto
1540 (0 3) GOTO 1480
  Origs: 1530:auto
  Dests: 1480:goto
1550 (0 2) PRINT "GATE MAX"
  Origs: 1510:ifthen
  Dests: 1560:auto
1560 (0 2) PRINT " #  M.P.H."
  Origs: 1550:auto
  Dests: 1570:auto
1570 (0 2) PRINT "----------"
  Origs: 1560:auto
  Dests: 1580:auto
1580 F(B:1580) (1 3) FOR B = 1 TO V
  Origs: 1570:auto
  Dests: 1590:fornext, 1610:fornext
1590 F(B:1580) (1 2) READ Q
  Origs: 1580:fornext
  Dests: 1600:auto
1600 F(B:1580) (0 4) PRINT B; "  "; Q
  Origs: 1590:auto
  Dests: 1610:auto
1610 F(B:1580) (0 1) NEXT B
  Origs: 1580:fornext, 1600:auto
  Dests: 1620:auto
1620 (0 3) GOTO 1470
  Origs: 1610:auto
  Dests: 1470:goto
1630 G(990) (0 4) LET T = T + 0.5
  Origs: 660:ifthen
  Dests: 1640:auto
1640 G(990) (0 3) GOTO 670
     WARNING: Branch to line before GOSUB start
  Origs: 1630:auto
  Dests: 670:goto
1650 G(990) (0 2) PRINT "YOU WON A GOLD MEDAL!"
  Origs: 710:ifthen
  Dests: 1660:auto
1660 G(990) (0 4) LET G(1) = G(1) + 1
  Origs: 1650:auto
  Dests: 1670:auto
1670 G(990) (0 2) GOTO 1730
  Origs: 1660:auto
  Dests: 1730:goto
1680 G(990) (0 2) PRINT "YOU WON A SILVER MEDAL"
  Origs: 720:ifthen
  Dests: 1690:auto
1690 G(990) (0 4) LET S(1) = S(1) + 1
  Origs: 1680:auto
  Dests: 1700:auto
1700 G(990) (0 2) GOTO 1730
  Origs: 1690:auto
  Dests: 1730:goto
1710 G(990) (0 2) PRINT "YOU WON A BRONZE MEDAL"
  Origs: 730:ifthen
  Dests: 1720:auto
1720 G(990) (0 4) LET B(1) = B(1) + 1
  Origs: 1710:auto
  Dests: 1730:auto
1730 G(990) (0 3) GOTO 740
     WARNING: Branch to line before GOSUB start
  Origs: 1670:goto, 1700:goto, 1720:auto
  Dests: 740:goto
1740 G(990) (0 2) PRINT "THANKS FOR THE RACE"
  Origs: 770:ifthen
  Dests: 1750:auto
1750 G(990) (1 4) IF G(1) < 1 THEN 1770
  Origs: 1740:auto
  Dests: 1760:auto, 1770:ifthen
1760 G(990) (0 3) PRINT "GOLD MEDALS:"; G(1)
  Origs: 1750:auto
  Dests: 1770:auto
1770 G(990) (1 4) IF S(1) < 1 THEN 1790
  Origs: 1750:ifthen, 1760:auto
  Dests: 1780:auto, 1790:ifthen
1780 G(990) (0 3) PRINT "SILVER MEDALS:"; S(1)
  Origs: 1770:auto
  Dests: 1790:auto
1790 G(990) (1 4) IF B(1) < 1 THEN 1830
  Origs: 1770:ifthen, 1780:auto
  Dests: 1800:auto, 1830:ifthen
1800 G(990) (0 3) PRINT "BRONZE MEDALS:"; B(1)
  Origs: 1790:auto
  Dests: 1830:auto
1810 (0 2) DATA 14, 18, 26, 29, 18, 25, 28, 32, 29, 20, 29, 29, 25, 21, 26, 29, 20, 21, 20
  Origs: 
  Dests: 
1820 (0 2) DATA 18, 26, 25, 33, 31, 22
  Origs: 
  Dests: 
1830 G(990) (0 1) END
     WARNING: Terminating statement in GOSUB
  Origs: 1790:ifthen, 1800:auto
  Dests: :stop

Unreachable code:

810: STOP

