Statistics:

Number of lines: 168
Number of valid statements: 162
Number of comments: 9
Number of executable statements: 154

Complexity:

Comment density: 0.056
Comprehension effort: 460
McCabe complexity: 41
Halstead complexity:
 length: 531
 volume: 2786.170
 difficulty: 21.898
 effort: 61012.113
 language: 5.810
 intelligence: 127.233
 time: 56.493

1 (0 4) PRINT TAB(33); "QUEEN"
  Origs: :start
  Dests: 2:auto
2 (0 4) PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 1:auto
  Dests: 3:auto
3 (0 2) PRINT
  (0 2) PRINT
  (0 2) PRINT
  Origs: 2:auto
  Dests: 10:auto
10 (0 2) DIM S(64)
  Origs: 3:auto
  Dests: 11:auto
11 F(I:11) (1 3) FOR I = 1 TO 64
  Origs: 10:auto
  Dests: 12:fornext, 13:fornext
12 F(I:11) (1 2) READ S(I)
  Origs: 11:fornext
  Dests: 13:auto
13 F(I:11) (0 1) NEXT I
  Origs: 11:fornext, 12:auto
  Dests: 22:auto
14 (0 2) DATA 81, 71, 61, 51, 41, 31, 21, 11
  Origs: 
  Dests: 
15 (0 2) DATA 92, 82, 72, 62, 52, 42, 32, 22
  Origs: 
  Dests: 
16 (0 2) DATA 103, 93, 83, 73, 63, 53, 43, 33
  Origs: 
  Dests: 
17 (0 2) DATA 114, 104, 94, 84, 74, 64, 54, 44
  Origs: 
  Dests: 
18 (0 2) DATA 125, 115, 105, 95, 85, 75, 65, 55
  Origs: 
  Dests: 
19 (0 2) DATA 136, 126, 116, 106, 96, 86, 76, 66
  Origs: 
  Dests: 
20 (0 2) DATA 147, 137, 127, 117, 107, 97, 87, 77
  Origs: 
  Dests: 
21 (0 2) DATA 158, 148, 138, 128, 118, 108, 98, 88
  Origs: 
  Dests: 
22 (1 2) INPUT "DO YOU WANT INSTRUCTIONS"; W$
  Origs: 13:auto, 26:goto
  Dests: 23:auto
23 (1 4) IF W$ = "NO" THEN 30
  Origs: 22:auto
  Dests: 24:auto, 30:ifthen
24 (1 4) IF W$ = "YES" THEN 28
  Origs: 23:auto
  Dests: 25:auto, 28:ifthen
25 (0 2) PRINT "PLEASE ANSWER 'YES' OR 'NO'."
  Origs: 24:auto
  Dests: 26:auto
26 (0 3) GOTO 22
  Origs: 25:auto
  Dests: 22:goto
28 (0 2) GOSUB 5000
  Origs: 24:ifthen
  Dests: 29:auto, 5000:gosub
29 (0 2) GOTO 100
  Origs: 28:auto
  Dests: 100:goto
30 G(2000) (0 2) GOSUB 5160
  Origs: 23:ifthen, 4030:ifthen
  Dests: 100:auto, 5160:gosub
90 (0 1) REM     ERROR CHECKS
  Origs: 
  Dests: 
100 G(2000) (0 2) PRINT "WHERE WOULD YOU LIKE TO START";
  Origs: 29:goto, 30:auto, 180:goto
  Dests: 110:auto
110 G(2000) (1 2) INPUT M1
  Origs: 100:auto
  Dests: 115:auto
115 G(2000) (1 4) IF M1 = 0 THEN 232
  Origs: 110:auto
  Dests: 120:auto, 232:ifthen
120 G(2000) (0 4) T1 = INT(M1 / 10)
  Origs: 115:auto
  Dests: 130:auto
130 G(2000) (0 6) U1 = M1 - 10 * T1
  Origs: 120:auto
  Dests: 140:auto
140 G(2000) (1 4) IF U1 = 1 THEN 200
  Origs: 130:auto
  Dests: 150:auto, 200:ifthen
150 G(2000) (1 4) IF U1 = T1 THEN 200
  Origs: 140:auto
  Dests: 160:auto, 200:ifthen
160 G(2000) (0 2) PRINT "PLEASE READ THE DIRECTIONS AGAIN."
  Origs: 150:auto
  Dests: 170:auto
170 G(2000) (0 2) PRINT "YOU HAVE BEGUN ILLEGALLY."
  Origs: 160:auto
  Dests: 175:auto
175 G(2000) (0 2) PRINT
  Origs: 170:auto
  Dests: 180:auto
180 G(2000) (0 3) GOTO 100
    WARNING: Branch to line before GOSUB start
  Origs: 175:auto
  Dests: 100:goto
200 G(2000) (0 2) GOSUB 2000
  Origs: 140:ifthen, 150:ifthen, 295:goto, 310:goto, 330:goto
  Dests: 210:auto, 2000:gosub
210 G(2000) (0 3) PRINT "COMPUTER MOVES TO SQUARE"; M
  Origs: 200:auto
  Dests: 215:auto
215 G(2000) (1 4) IF M = 158 THEN 3400
  Origs: 210:auto
  Dests: 220:auto, 3400:ifthen
220 G(2000) (0 2) PRINT "WHAT IS YOUR MOVE";
  Origs: 215:auto
  Dests: 230:auto
230 G(2000) (1 2) INPUT M1
  Origs: 220:auto, 3220:goto
  Dests: 231:auto
231 G(2000) (1 4) IF M1 <> 0 THEN 239
  Origs: 230:auto
  Dests: 232:auto, 239:ifthen
232 G(2000) (0 2) PRINT
  Origs: 115:ifthen, 231:auto
  Dests: 233:auto
233 G(2000) (0 2) PRINT "IT LOOKS LIKE I HAVE WON BY FORFEIT."
  Origs: 232:auto
  Dests: 234:auto
234 G(2000) (0 2) PRINT
  Origs: 233:auto
  Dests: 235:auto
235 G(2000) (0 2) GOTO 4000
  Origs: 234:auto
  Dests: 4000:goto
239 G(2000) (1 4) IF M1 <= M THEN 3200
  Origs: 231:ifthen
  Dests: 240:auto, 3200:ifthen
240 G(2000) (0 4) T1 = INT(M1 / 10)
  Origs: 239:auto
  Dests: 250:auto
250 G(2000) (0 6) U1 = M1 - 10 * T1
  Origs: 240:auto
  Dests: 260:auto
260 G(2000) (0 4) P = U1 - U
  Origs: 250:auto
  Dests: 270:auto
270 G(2000) (1 4) IF P <> 0 THEN 300
  Origs: 260:auto
  Dests: 280:auto, 300:ifthen
280 G(2000) (0 4) L = T1 - T
  Origs: 270:auto
  Dests: 290:auto
290 G(2000) (1 4) IF L <= 0 THEN 3200
  Origs: 280:auto
  Dests: 295:auto, 3200:ifthen
295 G(2000) (0 3) GOTO 200
    WARNING: Branch to line before GOSUB start
  Origs: 290:auto
  Dests: 200:goto
300 G(2000) (1 5) IF T1 - T <> P THEN 320
  Origs: 270:ifthen
  Dests: 310:auto, 320:ifthen
310 G(2000) (0 3) GOTO 200
    WARNING: Branch to line before GOSUB start
  Origs: 300:auto
  Dests: 200:goto
320 G(2000) (1 7) IF T1 - T <> 2 * P THEN 3200
  Origs: 300:ifthen
  Dests: 330:auto, 3200:ifthen
330 G(2000) (0 3) GOTO 200
    WARNING: Branch to line before GOSUB start
  Origs: 320:auto
  Dests: 200:goto
1990 (0 1) REM     LOCATE MOVE FOR COMPUTER
  Origs: 
  Dests: 
2000 G(2000) (1 4) IF M1 = 41 THEN 2180
     WARNING: GOSUB length exceeds limit 40
  Origs: 200:gosub
  Dests: 2010:auto, 2180:ifthen
2010 G(2000) (1 4) IF M1 = 44 THEN 2180
  Origs: 2000:auto
  Dests: 2020:auto, 2180:ifthen
2020 G(2000) (1 4) IF M1 = 73 THEN 2180
  Origs: 2010:auto
  Dests: 2030:auto, 2180:ifthen
2030 G(2000) (1 4) IF M1 = 75 THEN 2180
  Origs: 2020:auto
  Dests: 2040:auto, 2180:ifthen
2040 G(2000) (1 4) IF M1 = 126 THEN 2180
  Origs: 2030:auto
  Dests: 2050:auto, 2180:ifthen
2050 G(2000) (1 4) IF M1 = 127 THEN 2180
  Origs: 2040:auto
  Dests: 2060:auto, 2180:ifthen
2060 G(2000) (1 4) IF M1 = 158 THEN 3300
  Origs: 2050:auto
  Dests: 2065:auto, 3300:ifthen
2065 G(2000) (0 3) C = 0
  Origs: 2060:auto
  Dests: 2070:auto
2070 G(2000) F(K:2070) (1 5) FOR K = 7 TO 1 STEP -1
  Origs: 2065:auto
  Dests: 2080:fornext, 2150:fornext
2080 G(2000) F(K:2070) (0 3) U = U1
  Origs: 2070:fornext
  Dests: 2090:auto
2090 G(2000) F(K:2070) (0 4) T = T1 + K
  Origs: 2080:auto
  Dests: 2100:auto
2100 G(2000) F(K:2070) (0 2) GOSUB 3500
  Origs: 2090:auto
  Dests: 2105:auto, 3500:gosub
2105 G(2000) F(K:2070) (1 4) IF C = 1 THEN 2160
  Origs: 2100:auto
  Dests: 2110:auto, 2160:ifthen
2110 G(2000) F(K:2070) (0 4) U = U + K
  Origs: 2105:auto
  Dests: 2120:auto
2120 G(2000) F(K:2070) (0 2) GOSUB 3500
  Origs: 2110:auto
  Dests: 2125:auto, 3500:gosub
2125 G(2000) F(K:2070) (1 4) IF C = 1 THEN 2160
  Origs: 2120:auto
  Dests: 2130:auto, 2160:ifthen
2130 G(2000) F(K:2070) (0 4) T = T + K
  Origs: 2125:auto
  Dests: 2140:auto
2140 G(2000) F(K:2070) (0 2) GOSUB 3500
  Origs: 2130:auto
  Dests: 2145:auto, 3500:gosub
2145 G(2000) F(K:2070) (1 4) IF C = 1 THEN 2160
  Origs: 2140:auto
  Dests: 2150:auto, 2160:ifthen
2150 G(2000) F(K:2070) (0 1) NEXT K
  Origs: 2070:fornext, 2145:auto
  Dests: 2155:auto
2155 G(2000) (0 2) GOTO 2180
  Origs: 2150:auto
  Dests: 2180:goto
2160 G(2000) (0 3) C = 0
  Origs: 2105:ifthen, 2125:ifthen, 2145:ifthen
  Dests: 2170:auto
2170 G(2000) (0 1) RETURN
  Origs: 2160:auto
  Dests: 
2180 G(2000) (0 2) GOSUB 3000
  Origs: 2000:ifthen, 2010:ifthen, 2020:ifthen, 2030:ifthen, 2040:ifthen, 2050:ifthen, 2155:goto
  Dests: 2190:auto, 3000:gosub
2190 G(2000) (0 1) RETURN
  Origs: 2180:auto
  Dests: 
2990 (0 1) REM     RANDOM MOVE
  Origs: 
  Dests: 
3000 G(3000) (0 4) Z = RND(1)
  Origs: 2180:gosub
  Dests: 3010:auto
3010 G(3000) (1 4) IF Z > 0.6 THEN 3110
  Origs: 3000:auto
  Dests: 3020:auto, 3110:ifthen
3020 G(3000) (1 4) IF Z > 0.3 THEN 3070
  Origs: 3010:auto
  Dests: 3030:auto, 3070:ifthen
3030 G(3000) (0 3) U = U1
  Origs: 3020:auto
  Dests: 3040:auto
3040 G(3000) (0 4) T = T1 + 1
  Origs: 3030:auto
  Dests: 3050:auto
3050 G(3000) (0 5) M = 10 * T + U
  Origs: 3040:auto
  Dests: 3060:auto
3060 G(3000) (0 1) RETURN
  Origs: 3050:auto
  Dests: 
3070 G(3000) (0 4) U = U1 + 1
  Origs: 3020:ifthen
  Dests: 3080:auto
3080 G(3000) (0 4) T = T1 + 2
  Origs: 3070:auto
  Dests: 3090:auto
3090 G(3000) (0 5) M = 10 * T + U
  Origs: 3080:auto
  Dests: 3100:auto
3100 G(3000) (0 1) RETURN
  Origs: 3090:auto
  Dests: 
3110 G(3000) (0 4) U = U1 + 1
  Origs: 3010:ifthen
  Dests: 3120:auto
3120 G(3000) (0 4) T = T1 + 1
  Origs: 3110:auto
  Dests: 3130:auto
3130 G(3000) (0 5) M = 10 * T + U
  Origs: 3120:auto
  Dests: 3140:auto
3140 G(3000) (0 1) RETURN
  Origs: 3130:auto
  Dests: 
3190 (0 1) REM     ILLEGAL MOVE MESSAGE
  Origs: 
  Dests: 
3200 G(2000) (0 2) PRINT
  Origs: 239:ifthen, 290:ifthen, 320:ifthen
  Dests: 3210:auto
3210 G(2000) (0 2) PRINT "Y O U   C H E A T . . .  TRY AGAIN";
  Origs: 3200:auto
  Dests: 3220:auto
3220 G(2000) (0 3) GOTO 230
     WARNING: Branch to line before GOSUB start
  Origs: 3210:auto
  Dests: 230:goto
3290 (0 1) REM     PLAYER WINS
  Origs: 
  Dests: 
3300 G(2000) (0 2) PRINT
  Origs: 2060:ifthen
  Dests: 3310:auto
3310 G(2000) (0 2) PRINT "C O N G R A T U L A T I O N S . . ."
  Origs: 3300:auto
  Dests: 3320:auto
3320 G(2000) (0 2) PRINT
  Origs: 3310:auto
  Dests: 3330:auto
3330 G(2000) (0 2) PRINT "YOU HAVE WON--VERY WELL PLAYED."
  Origs: 3320:auto
  Dests: 3340:auto
3340 G(2000) (0 2) PRINT "IT LOOKS LIKE I HAVE MET MY MATCH."
  Origs: 3330:auto
  Dests: 3350:auto
3350 G(2000) (0 2) PRINT "THANKS FOR PLAYING---I CAN'T WIN ALL THE TIME."
  Origs: 3340:auto
  Dests: 3360:auto
3360 G(2000) (0 2) PRINT
  Origs: 3350:auto
  Dests: 3370:auto
3370 G(2000) (0 2) GOTO 4000
  Origs: 3360:auto
  Dests: 4000:goto
3390 (0 1) REM     COMPUTER WINS
  Origs: 
  Dests: 
3400 G(2000) (0 2) PRINT
  Origs: 215:ifthen
  Dests: 3410:auto
3410 G(2000) (0 2) PRINT "NICE TRY, BUT IT LOOKS LIKE I HAVE WON."
  Origs: 3400:auto
  Dests: 3420:auto
3420 G(2000) (0 2) PRINT "THANKS FOR PLAYING."
  Origs: 3410:auto
  Dests: 3430:auto
3430 G(2000) (0 2) PRINT
  Origs: 3420:auto
  Dests: 3440:auto
3440 G(2000) (0 2) GOTO 4000
  Origs: 3430:auto
  Dests: 4000:goto
3490 (0 1) REM     TEST FOR COMPUTER MOVE
  Origs: 
  Dests: 
3500 G(3500) (0 5) M = 10 * T + U
  Origs: 2100:gosub, 2120:gosub, 2140:gosub
  Dests: 3510:auto
3510 G(3500) (1 4) IF M = 158 THEN 3570
  Origs: 3500:auto
  Dests: 3520:auto, 3570:ifthen
3520 G(3500) (1 4) IF M = 127 THEN 3570
  Origs: 3510:auto
  Dests: 3530:auto, 3570:ifthen
3530 G(3500) (1 4) IF M = 126 THEN 3570
  Origs: 3520:auto
  Dests: 3540:auto, 3570:ifthen
3540 G(3500) (1 4) IF M = 75 THEN 3570
  Origs: 3530:auto
  Dests: 3550:auto, 3570:ifthen
3550 G(3500) (1 4) IF M = 73 THEN 3570
  Origs: 3540:auto
  Dests: 3560:auto, 3570:ifthen
3560 G(3500) (0 1) RETURN
  Origs: 3550:auto, 3580:goto
  Dests: 
3570 G(3500) (0 3) C = 1
  Origs: 3510:ifthen, 3520:ifthen, 3530:ifthen, 3540:ifthen, 3550:ifthen
  Dests: 3580:auto
3580 G(3500) (0 3) GOTO 3560
  Origs: 3570:auto
  Dests: 3560:goto
3990 (0 1) REM     ANOTHER GAME???
  Origs: 
  Dests: 
4000 G(2000) (0 2) PRINT "ANYONE ELSE CARE TO TRY";
  Origs: 235:goto, 3370:goto, 3440:goto, 4045:goto
  Dests: 4010:auto
4010 G(2000) (1 2) INPUT Q$
  Origs: 4000:auto
  Dests: 4020:auto
4020 G(2000) (0 2) PRINT
  Origs: 4010:auto
  Dests: 4030:auto
4030 G(2000) (1 5) IF Q$ = "YES" THEN 30
     WARNING: Branch to line before GOSUB start
  Origs: 4020:auto
  Dests: 30:ifthen, 4040:auto
4040 G(2000) (1 4) IF Q$ = "NO" THEN 4050
  Origs: 4030:auto
  Dests: 4042:auto, 4050:ifthen
4042 G(2000) (0 2) PRINT "PLEASE ANSWER 'YES' OR 'NO'."
  Origs: 4040:auto
  Dests: 4045:auto
4045 G(2000) (0 3) GOTO 4000
  Origs: 4042:auto
  Dests: 4000:goto
4050 G(2000) (0 2) PRINT
     G(2000) (0 2) PRINT "OK --- THANKS AGAIN."
  Origs: 4040:ifthen
  Dests: 4060:auto
4060 G(2000) (0 1) STOP
     WARNING: Terminating statement in GOSUB
  Origs: 4050:auto
  Dests: :stop
4990 (0 1) REM     DIRECTIONS
  Origs: 
  Dests: 
5000 G(5000) (0 2) PRINT "WE ARE GOING TO PLAY A GAME BASED ON ONE OF THE CHESS"
  Origs: 28:gosub
  Dests: 5010:auto
5010 G(5000) (0 2) PRINT "MOVES.  OUR QUEEN WILL BE ABLE TO MOVE ONLY TO THE LEFT,"
  Origs: 5000:auto
  Dests: 5020:auto
5020 G(5000) (0 2) PRINT "DOWN, OR DIAGONALLY DOWN AND TO THE LEFT."
  Origs: 5010:auto
  Dests: 5030:auto
5030 G(5000) (0 2) PRINT
  Origs: 5020:auto
  Dests: 5040:auto
5040 G(5000) (0 2) PRINT "THE OBJECT OF THE GAME IS TO PLACE THE QUEEN IN THE LOWER"
  Origs: 5030:auto
  Dests: 5050:auto
5050 G(5000) (0 2) PRINT "LEFT HAND SQUARE BY ALTERNATING MOVES BETWEEN YOU AND THE"
  Origs: 5040:auto
  Dests: 5060:auto
5060 G(5000) (0 2) PRINT "COMPUTER.  THE FIRST ONE TO PLACE THE QUEEN THERE WINS."
  Origs: 5050:auto
  Dests: 5070:auto
5070 G(5000) (0 2) PRINT
  Origs: 5060:auto
  Dests: 5080:auto
5080 G(5000) (0 2) PRINT "YOU GO FIRST AND PLACE THE QUEEN IN ANY ONE OF THE SQUARES"
  Origs: 5070:auto
  Dests: 5090:auto
5090 G(5000) (0 2) PRINT "ON THE TOP ROW OR RIGHT HAND COLUMN."
  Origs: 5080:auto
  Dests: 5100:auto
5100 G(5000) (0 2) PRINT "THAT WILL BE YOUR FIRST MOVE."
  Origs: 5090:auto
  Dests: 5110:auto
5110 G(5000) (0 2) PRINT "WE ALTERNATE MOVES."
  Origs: 5100:auto
  Dests: 5120:auto
5120 G(5000) (0 2) PRINT "YOU MAY FORFEIT BY TYPING '0' AS YOUR MOVE."
  Origs: 5110:auto
  Dests: 5130:auto
5130 G(5000) (0 2) PRINT "BE SURE TO PRESS THE RETURN KEY AFTER EACH RESPONSE."
  Origs: 5120:auto
  Dests: 5140:auto
5140 G(5000) (0 2) PRINT
  Origs: 5130:auto
  Dests: 5150:auto
5150 G(5000) (0 2) PRINT
  Origs: 5140:auto
  Dests: 5160:auto
5160 G(5000,5160) (0 2) PRINT
     WARNING: Inconsistent GOSUB origins
     WARNING: Multiple GOSUB entry points
  Origs: 30:gosub, 5150:auto
  Dests: 5170:auto
5170 G(5000,5160) F(A:5170) (1 3) FOR A = 0 TO 7
     WARNING: Multiple GOSUB entry points
  Origs: 5160:auto
  Dests: 5180:fornext, 5240:fornext
5180 G(5000,5160) F(A:5170,B:5180) (1 3) FOR B = 1 TO 8
     WARNING: Multiple GOSUB entry points
  Origs: 5170:fornext
  Dests: 5185:fornext, 5200:fornext
5185 G(5000,5160) F(A:5170,B:5180) (0 5) I = 8 * A + B
     WARNING: Multiple GOSUB entry points
  Origs: 5180:fornext
  Dests: 5190:auto
5190 G(5000,5160) F(A:5170,B:5180) (0 2) PRINT S(I);
     WARNING: Multiple GOSUB entry points
  Origs: 5185:auto
  Dests: 5200:auto
5200 G(5000,5160) F(A:5170,B:5180) (0 1) NEXT B
     WARNING: Multiple GOSUB entry points
  Origs: 5180:fornext, 5190:auto
  Dests: 5210:auto
5210 G(5000,5160) F(A:5170) (0 2) PRINT
     WARNING: Multiple GOSUB entry points
  Origs: 5200:auto
  Dests: 5220:auto
5220 G(5000,5160) F(A:5170) (0 2) PRINT
     WARNING: Multiple GOSUB entry points
  Origs: 5210:auto
  Dests: 5230:auto
5230 G(5000,5160) F(A:5170) (0 2) PRINT
     WARNING: Multiple GOSUB entry points
  Origs: 5220:auto
  Dests: 5240:auto
5240 G(5000,5160) F(A:5170) (0 1) NEXT A
     WARNING: Multiple GOSUB entry points
  Origs: 5170:fornext, 5230:auto
  Dests: 5250:auto
5250 G(5000,5160) (0 2) PRINT
     WARNING: Multiple GOSUB entry points
  Origs: 5240:auto
  Dests: 5260:auto
5260 G(5000,5160) (0 1) RETURN
     WARNING: Multiple GOSUB entry points
  Origs: 5250:auto
  Dests: 
9999 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

9999: END

