1 PRINT TAB(33);"QUEEN"
 NumericValue:33
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"QUEEN"
 CarriageControl:NL
2 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericValue:15
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
3 PRINT:PRINT:PRINT
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
10 DIM S(64)
 NumericValue:64
 Declaration:S() -> .()
11 FOR I=1 TO 64
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:64"]
12 READ S(I)
 Variable:I -> .
 Variable:S(.) -> .
13 NEXT I
 Variable:I -> .
14 DATA  81,  71,  61,  51,  41,  31,  21,  11
 NumericValue:81
 NumericValue:71
 NumericValue:61
 NumericValue:51
 NumericValue:41
 NumericValue:31
 NumericValue:21
 NumericValue:11
15 DATA  92,  82,  72,  62,  52,  42,  32,  22
 NumericValue:92
 NumericValue:82
 NumericValue:72
 NumericValue:62
 NumericValue:52
 NumericValue:42
 NumericValue:32
 NumericValue:22
16 DATA 103,  93,  83,  73,  63,  53,  43,  33
 NumericValue:103
 NumericValue:93
 NumericValue:83
 NumericValue:73
 NumericValue:63
 NumericValue:53
 NumericValue:43
 NumericValue:33
17 DATA 114, 104,  94,  84,  74,  64,  54,  44
 NumericValue:114
 NumericValue:104
 NumericValue:94
 NumericValue:84
 NumericValue:74
 NumericValue:64
 NumericValue:54
 NumericValue:44
18 DATA 125, 115, 105,  95,  85,  75,  65,  55
 NumericValue:125
 NumericValue:115
 NumericValue:105
 NumericValue:95
 NumericValue:85
 NumericValue:75
 NumericValue:65
 NumericValue:55
19 DATA 136, 126, 116, 106,  96,  86,  76,  66
 NumericValue:136
 NumericValue:126
 NumericValue:116
 NumericValue:106
 NumericValue:96
 NumericValue:86
 NumericValue:76
 NumericValue:66
20 DATA 147, 137, 127, 117, 107,  97,  87,  77
 NumericValue:147
 NumericValue:137
 NumericValue:127
 NumericValue:117
 NumericValue:107
 NumericValue:97
 NumericValue:87
 NumericValue:77
21 DATA 158, 148, 138, 128, 118, 108,  98,  88
 NumericValue:158
 NumericValue:148
 NumericValue:138
 NumericValue:128
 NumericValue:118
 NumericValue:108
 NumericValue:98
 NumericValue:88
22 INPUT "DO YOU WANT INSTRUCTIONS";W$
 Variable:W$ -> $
23 IF W$="NO" THEN 30
 Variable:W$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:30
24 IF W$="YES" THEN 28
 Variable:W$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:28
25 PRINT "PLEASE ANSWER 'YES' OR 'NO'."
 TextValue:"PLEASE ANSWER 'YES' OR 'NO'."
 CarriageControl:NL
26 GOTO 22
 LineNumber:22
28 GOSUB 5000
 LineNumber:5000
29 GOTO 100
 LineNumber:100
30 GOSUB 5160
 LineNumber:5160
90 REM     ERROR CHECKS
 Remark:    ERROR CHECKS
100 PRINT "WHERE WOULD YOU LIKE TO START";
 TextValue:"WHERE WOULD YOU LIKE TO START"
 CarriageControl:;
110 INPUT M1
 Variable:M1 -> .
115 IF M1=0 THEN 232
 Variable:M1 -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:232
120 T1=INT(M1/10)
 Variable:T1 -> .
 Variable:M1 -> .
 NumericValue:10
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
130 U1=M1-10*T1
 Variable:U1 -> .
 Variable:M1 -> .
 NumericValue:10
 Variable:T1 -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
140 IF U1=1 THEN 200
 Variable:U1 -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:200
150 IF U1=T1 THEN 200
 Variable:U1 -> .
 Variable:T1 -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:200
160 PRINT "PLEASE READ THE DIRECTIONS AGAIN."
 TextValue:"PLEASE READ THE DIRECTIONS AGAIN."
 CarriageControl:NL
170 PRINT "YOU HAVE BEGUN ILLEGALLY."
 TextValue:"YOU HAVE BEGUN ILLEGALLY."
 CarriageControl:NL
175 PRINT
 CarriageControl:NL
180 GOTO 100
 WARNING: Branch to line before GOSUB start
 LineNumber:100
200 GOSUB 2000
 LineNumber:2000
210 PRINT "COMPUTER MOVES TO SQUARE";M
 TextValue:"COMPUTER MOVES TO SQUARE"
 CarriageControl:;
 Variable:M -> .
 CarriageControl:NL
215 IF M=158 THEN 3400
 Variable:M -> .
 NumericValue:158
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3400
220 PRINT "WHAT IS YOUR MOVE";
 TextValue:"WHAT IS YOUR MOVE"
 CarriageControl:;
230 INPUT M1
 Variable:M1 -> .
231 IF M1<>0 THEN 239
 Variable:M1 -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:239
232 PRINT
 CarriageControl:NL
233 PRINT "IT LOOKS LIKE I HAVE WON BY FORFEIT."
 TextValue:"IT LOOKS LIKE I HAVE WON BY FORFEIT."
 CarriageControl:NL
234 PRINT
 CarriageControl:NL
235 GOTO 4000
 LineNumber:4000
239 IF M1<=M THEN 3200
 Variable:M1 -> .
 Variable:M -> .
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:3200
240 T1=INT(M1/10)
 Variable:T1 -> .
 Variable:M1 -> .
 NumericValue:10
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
250 U1=M1-10*T1
 Variable:U1 -> .
 Variable:M1 -> .
 NumericValue:10
 Variable:T1 -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
260 P=U1-U
 Variable:P -> .
 Variable:U1 -> .
 Variable:U -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
270 IF P<>0 THEN 300
 Variable:P -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:300
280 L=T1-T
 Variable:L -> .
 Variable:T1 -> .
 Variable:T -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
290 IF L<=0 THEN 3200
 Variable:L -> .
 NumericValue:0
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:3200
295 GOTO 200
 WARNING: Branch to line before GOSUB start
 LineNumber:200
300 IF T1-T <>P THEN 320
 Variable:T1 -> .
 Variable:T -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:P -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:320
310 GOTO 200
 WARNING: Branch to line before GOSUB start
 LineNumber:200
320 IF T1-T <>2*P THEN 3200
 Variable:T1 -> .
 Variable:T -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:2
 Variable:P -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3200
330 GOTO 200
 WARNING: Branch to line before GOSUB start
 LineNumber:200
1990 REM     LOCATE MOVE FOR COMPUTER
 Remark:    LOCATE MOVE FOR COMPUTER
2000 IF M1=41 THEN 2180
 WARNING: GOSUB length exceeds limit 40
 Variable:M1 -> .
 NumericValue:41
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2180
2010 IF M1=44 THEN 2180
 Variable:M1 -> .
 NumericValue:44
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2180
2020 IF M1=73 THEN 2180
 Variable:M1 -> .
 NumericValue:73
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2180
2030 IF M1=75 THEN 2180
 Variable:M1 -> .
 NumericValue:75
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2180
2040 IF M1=126 THEN 2180
 Variable:M1 -> .
 NumericValue:126
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2180
2050 IF M1=127 THEN 2180
 Variable:M1 -> .
 NumericValue:127
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2180
2060 IF M1=158 THEN 3300
 Variable:M1 -> .
 NumericValue:158
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3300
2065 C=0
 Variable:C -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
2070 FOR K=7 TO 1 STEP -1
 control: Variable:K -> .
 start:   ["NumericValue:7"]
 end:     ["NumericValue:1"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
2080 U=U1
 Variable:U -> .
 Variable:U1 -> .
 AssignmentOperator:= . -> .
2090 T=T1+K
 Variable:T -> .
 Variable:T1 -> .
 Variable:K -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2100 GOSUB 3500
 LineNumber:3500
2105 IF C=1 THEN 2160
 Variable:C -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2160
2110 U=U+K
 Variable:U -> .
 Variable:U -> .
 Variable:K -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2120 GOSUB 3500
 LineNumber:3500
2125 IF C=1 THEN 2160
 Variable:C -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2160
2130 T=T+K
 Variable:T -> .
 Variable:T -> .
 Variable:K -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2140 GOSUB 3500
 LineNumber:3500
2145 IF C=1 THEN 2160
 Variable:C -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2160
2150 NEXT K
 Variable:K -> .
2155 GOTO 2180
 LineNumber:2180
2160 C=0
 Variable:C -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
2170 RETURN
 
2180 GOSUB 3000
 LineNumber:3000
2190 RETURN
 
2990 REM     RANDOM MOVE
 Remark:    RANDOM MOVE
3000 Z=RND(1)
 Variable:Z -> .
 NumericValue:1
 FunctionRnd:RND(.) -> .
 AssignmentOperator:= . -> .
3010 IF Z>.6 THEN 3110
 Variable:Z -> .
 NumericValue:.6
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3110
3020 IF Z>.3 THEN 3070
 Variable:Z -> .
 NumericValue:.3
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3070
3030 U=U1
 Variable:U -> .
 Variable:U1 -> .
 AssignmentOperator:= . -> .
3040 T=T1+1
 Variable:T -> .
 Variable:T1 -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3050 M=10*T+U
 Variable:M -> .
 NumericValue:10
 Variable:T -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:U -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3060 RETURN
 
3070 U=U1+1
 Variable:U -> .
 Variable:U1 -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3080 T=T1+2
 Variable:T -> .
 Variable:T1 -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3090 M=10*T+U
 Variable:M -> .
 NumericValue:10
 Variable:T -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:U -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3100 RETURN
 
3110 U=U1+1
 Variable:U -> .
 Variable:U1 -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3120 T=T1+1
 Variable:T -> .
 Variable:T1 -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3130 M=10*T+U
 Variable:M -> .
 NumericValue:10
 Variable:T -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:U -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3140 RETURN
 
3190 REM     ILLEGAL MOVE MESSAGE
 Remark:    ILLEGAL MOVE MESSAGE
3200 PRINT
 CarriageControl:NL
3210 PRINT "Y O U   C H E A T . . .  TRY AGAIN";
 TextValue:"Y O U   C H E A T . . .  TRY AGAIN"
 CarriageControl:;
3220 GOTO 230
 WARNING: Branch to line before GOSUB start
 LineNumber:230
3290 REM     PLAYER WINS
 Remark:    PLAYER WINS
3300 PRINT
 CarriageControl:NL
3310 PRINT "C O N G R A T U L A T I O N S . . ."
 TextValue:"C O N G R A T U L A T I O N S . . ."
 CarriageControl:NL
3320 PRINT 
 CarriageControl:NL
3330 PRINT "YOU HAVE WON--VERY WELL PLAYED."
 TextValue:"YOU HAVE WON--VERY WELL PLAYED."
 CarriageControl:NL
3340 PRINT "IT LOOKS LIKE I HAVE MET MY MATCH."
 TextValue:"IT LOOKS LIKE I HAVE MET MY MATCH."
 CarriageControl:NL
3350 PRINT "THANKS FOR PLAYING---I CAN'T WIN ALL THE TIME."
 TextValue:"THANKS FOR PLAYING---I CAN'T WIN ALL THE TIME."
 CarriageControl:NL
3360 PRINT
 CarriageControl:NL
3370 GOTO 4000
 LineNumber:4000
3390 REM     COMPUTER WINS
 Remark:    COMPUTER WINS
3400 PRINT
 CarriageControl:NL
3410 PRINT "NICE TRY, BUT IT LOOKS LIKE I HAVE WON."
 TextValue:"NICE TRY, BUT IT LOOKS LIKE I HAVE WON."
 CarriageControl:NL
3420 PRINT "THANKS FOR PLAYING."
 TextValue:"THANKS FOR PLAYING."
 CarriageControl:NL
3430 PRINT
 CarriageControl:NL
3440 GOTO 4000
 LineNumber:4000
3490 REM     TEST FOR COMPUTER MOVE
 Remark:    TEST FOR COMPUTER MOVE
3500 M=10*T+U
 Variable:M -> .
 NumericValue:10
 Variable:T -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:U -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3510 IF M=158 THEN 3570
 Variable:M -> .
 NumericValue:158
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3570
3520 IF M=127 THEN 3570
 Variable:M -> .
 NumericValue:127
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3570
3530 IF M=126 THEN 3570
 Variable:M -> .
 NumericValue:126
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3570
3540 IF M=75 THEN 3570
 Variable:M -> .
 NumericValue:75
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3570
3550 IF M=73 THEN 3570
 Variable:M -> .
 NumericValue:73
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3570
3560 RETURN
 
3570 C=1
 Variable:C -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
3580 GOTO 3560
 LineNumber:3560
3990 REM     ANOTHER GAME???
 Remark:    ANOTHER GAME???
4000 PRINT "ANYONE ELSE CARE TO TRY";
 TextValue:"ANYONE ELSE CARE TO TRY"
 CarriageControl:;
4010 INPUT Q$
 Variable:Q$ -> $
4020 PRINT
 CarriageControl:NL
4030 IF Q$="YES" THEN 30 
 WARNING: Branch to line before GOSUB start
 Variable:Q$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:30
4040 IF Q$="NO" THEN 4050
 Variable:Q$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4050
4042 PRINT "PLEASE ANSWER 'YES' OR 'NO'."
 TextValue:"PLEASE ANSWER 'YES' OR 'NO'."
 CarriageControl:NL
4045 GOTO 4000
 LineNumber:4000
4050 PRINT:PRINT "OK --- THANKS AGAIN."
 CarriageControl:NL
 TextValue:"OK --- THANKS AGAIN."
 CarriageControl:NL
4060 STOP
 WARNING: Terminating statement in GOSUB
 
4990 REM     DIRECTIONS
 Remark:    DIRECTIONS
5000 PRINT "WE ARE GOING TO PLAY A GAME BASED ON ONE OF THE CHESS"
 TextValue:"WE ARE GOING TO PLAY A GAME BASED ON ONE OF THE CHESS"
 CarriageControl:NL
5010 PRINT "MOVES.  OUR QUEEN WILL BE ABLE TO MOVE ONLY TO THE LEFT,"
 TextValue:"MOVES.  OUR QUEEN WILL BE ABLE TO MOVE ONLY TO THE LEFT,"
 CarriageControl:NL
5020 PRINT "DOWN, OR DIAGONALLY DOWN AND TO THE LEFT."
 TextValue:"DOWN, OR DIAGONALLY DOWN AND TO THE LEFT."
 CarriageControl:NL
5030 PRINT
 CarriageControl:NL
5040 PRINT "THE OBJECT OF THE GAME IS TO PLACE THE QUEEN IN THE LOWER"
 TextValue:"THE OBJECT OF THE GAME IS TO PLACE THE QUEEN IN THE LOWER"
 CarriageControl:NL
5050 PRINT "LEFT HAND SQUARE BY ALTERNATING MOVES BETWEEN YOU AND THE"
 TextValue:"LEFT HAND SQUARE BY ALTERNATING MOVES BETWEEN YOU AND THE"
 CarriageControl:NL
5060 PRINT "COMPUTER.  THE FIRST ONE TO PLACE THE QUEEN THERE WINS."
 TextValue:"COMPUTER.  THE FIRST ONE TO PLACE THE QUEEN THERE WINS."
 CarriageControl:NL
5070 PRINT
 CarriageControl:NL
5080 PRINT "YOU GO FIRST AND PLACE THE QUEEN IN ANY ONE OF THE SQUARES"
 TextValue:"YOU GO FIRST AND PLACE THE QUEEN IN ANY ONE OF THE SQUARES"
 CarriageControl:NL
5090 PRINT "ON THE TOP ROW OR RIGHT HAND COLUMN."
 TextValue:"ON THE TOP ROW OR RIGHT HAND COLUMN."
 CarriageControl:NL
5100 PRINT "THAT WILL BE YOUR FIRST MOVE."
 TextValue:"THAT WILL BE YOUR FIRST MOVE."
 CarriageControl:NL
5110 PRINT "WE ALTERNATE MOVES."
 TextValue:"WE ALTERNATE MOVES."
 CarriageControl:NL
5120 PRINT "YOU MAY FORFEIT BY TYPING '0' AS YOUR MOVE."
 TextValue:"YOU MAY FORFEIT BY TYPING '0' AS YOUR MOVE."
 CarriageControl:NL
5130 PRINT "BE SURE TO PRESS THE RETURN KEY AFTER EACH RESPONSE."
 TextValue:"BE SURE TO PRESS THE RETURN KEY AFTER EACH RESPONSE."
 CarriageControl:NL
5140 PRINT
 CarriageControl:NL
5150 PRINT
 CarriageControl:NL
5160 PRINT
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 CarriageControl:NL
5170 FOR A=0 TO 7
 WARNING: Multiple GOSUB entry points
 control: Variable:A -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:7"]
5180 FOR B=1 TO 8
 WARNING: Multiple GOSUB entry points
 control: Variable:B -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:8"]
5185 I=8*A+B
 WARNING: Multiple GOSUB entry points
 Variable:I -> .
 NumericValue:8
 Variable:A -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:B -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
5190 PRINT S(I);
 WARNING: Multiple GOSUB entry points
 Variable:I -> .
 Variable:S(.) -> .
 CarriageControl:;
5200 NEXT B
 WARNING: Multiple GOSUB entry points
 Variable:B -> .
5210 PRINT
 WARNING: Multiple GOSUB entry points
 CarriageControl:NL
5220 PRINT
 WARNING: Multiple GOSUB entry points
 CarriageControl:NL
5230 PRINT
 WARNING: Multiple GOSUB entry points
 CarriageControl:NL
5240 NEXT A
 WARNING: Multiple GOSUB entry points
 Variable:A -> .
5250 PRINT
 WARNING: Multiple GOSUB entry points
 CarriageControl:NL
5260 RETURN
 WARNING: Multiple GOSUB entry points
 
9999 END
 

