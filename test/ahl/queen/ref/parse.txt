1 PRINT TAB(33);"QUEEN"
 NumericConstant:33
 FunctionTab:TAB(_) string scalar
 CarriageControl:;
 TextConstant:"QUEEN"
 CarriageControl:NL
2 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericConstant:15
 FunctionTab:TAB(_) string scalar
 CarriageControl:;
 TextConstant:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
3 PRINT:PRINT:PRINT
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
10 DIM S(64)
 NumericConstant:64
 Declaration:S scalar
11 FOR I=1 TO 64
 control: Variable:I numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:64"]
12 READ S(I)
 Variable:I numeric scalar
 Variable:S numeric scalar
13 NEXT I
 Variable:I numeric scalar
14 DATA  81,  71,  61,  51,  41,  31,  21,  11
 NumericConstant:81
 NumericConstant:71
 NumericConstant:61
 NumericConstant:51
 NumericConstant:41
 NumericConstant:31
 NumericConstant:21
 NumericConstant:11
15 DATA  92,  82,  72,  62,  52,  42,  32,  22
 NumericConstant:92
 NumericConstant:82
 NumericConstant:72
 NumericConstant:62
 NumericConstant:52
 NumericConstant:42
 NumericConstant:32
 NumericConstant:22
16 DATA 103,  93,  83,  73,  63,  53,  43,  33
 NumericConstant:103
 NumericConstant:93
 NumericConstant:83
 NumericConstant:73
 NumericConstant:63
 NumericConstant:53
 NumericConstant:43
 NumericConstant:33
17 DATA 114, 104,  94,  84,  74,  64,  54,  44
 NumericConstant:114
 NumericConstant:104
 NumericConstant:94
 NumericConstant:84
 NumericConstant:74
 NumericConstant:64
 NumericConstant:54
 NumericConstant:44
18 DATA 125, 115, 105,  95,  85,  75,  65,  55
 NumericConstant:125
 NumericConstant:115
 NumericConstant:105
 NumericConstant:95
 NumericConstant:85
 NumericConstant:75
 NumericConstant:65
 NumericConstant:55
19 DATA 136, 126, 116, 106,  96,  86,  76,  66
 NumericConstant:136
 NumericConstant:126
 NumericConstant:116
 NumericConstant:106
 NumericConstant:96
 NumericConstant:86
 NumericConstant:76
 NumericConstant:66
20 DATA 147, 137, 127, 117, 107,  97,  87,  77
 NumericConstant:147
 NumericConstant:137
 NumericConstant:127
 NumericConstant:117
 NumericConstant:107
 NumericConstant:97
 NumericConstant:87
 NumericConstant:77
21 DATA 158, 148, 138, 128, 118, 108,  98,  88
 NumericConstant:158
 NumericConstant:148
 NumericConstant:138
 NumericConstant:128
 NumericConstant:118
 NumericConstant:108
 NumericConstant:98
 NumericConstant:88
22 INPUT "DO YOU WANT INSTRUCTIONS";W$
 Variable:W$ string scalar
23 IF W$="NO" THEN 30
 Variable:W$ string scalar
 TextConstant:"NO"
 BinaryOperatorEqual:= numeric
24 IF W$="YES" THEN 28
 Variable:W$ string scalar
 TextConstant:"YES"
 BinaryOperatorEqual:= numeric
25 PRINT "PLEASE ANSWER 'YES' OR 'NO'."
 TextConstant:"PLEASE ANSWER 'YES' OR 'NO'."
 CarriageControl:NL
26 GOTO 22
 LineNumber:22
28 GOSUB 5000
 LineNumber:5000
29 GOTO 100
 LineNumber:100
30 GOSUB 5160
 LineNumber:5160
90 REM     ERROR CHECKS
 Remark:    ERROR CHECKS
100 PRINT "WHERE WOULD YOU LIKE TO START";
 TextConstant:"WHERE WOULD YOU LIKE TO START"
 CarriageControl:;
110 INPUT M1
 Variable:M1 numeric scalar
115 IF M1=0 THEN 232
 Variable:M1 numeric scalar
 NumericConstant:0
 BinaryOperatorEqual:= numeric
120 T1=INT(M1/10)
 Variable:T1 numeric scalar
 Variable:M1 numeric scalar
 NumericConstant:10
 BinaryOperatorDivide:/ numeric
 FunctionInt:INT(_) numeric scalar
 AssignmentOperator:=
130 U1=M1-10*T1
 Variable:U1 numeric scalar
 Variable:M1 numeric scalar
 NumericConstant:10
 Variable:T1 numeric scalar
 BinaryOperatorMultiply:* numeric
 BinaryOperatorMinus:- numeric
 AssignmentOperator:=
140 IF U1=1 THEN 200
 Variable:U1 numeric scalar
 NumericConstant:1
 BinaryOperatorEqual:= numeric
150 IF U1=T1 THEN 200
 Variable:U1 numeric scalar
 Variable:T1 numeric scalar
 BinaryOperatorEqual:= numeric
160 PRINT "PLEASE READ THE DIRECTIONS AGAIN."
 TextConstant:"PLEASE READ THE DIRECTIONS AGAIN."
 CarriageControl:NL
170 PRINT "YOU HAVE BEGUN ILLEGALLY."
 TextConstant:"YOU HAVE BEGUN ILLEGALLY."
 CarriageControl:NL
175 PRINT
 CarriageControl:NL
180 GOTO 100
 LineNumber:100
200 GOSUB 2000
 LineNumber:2000
210 PRINT "COMPUTER MOVES TO SQUARE";M
 TextConstant:"COMPUTER MOVES TO SQUARE"
 CarriageControl:;
 Variable:M numeric scalar
 CarriageControl:NL
215 IF M=158 THEN 3400
 Variable:M numeric scalar
 NumericConstant:158
 BinaryOperatorEqual:= numeric
220 PRINT "WHAT IS YOUR MOVE";
 TextConstant:"WHAT IS YOUR MOVE"
 CarriageControl:;
230 INPUT M1
 Variable:M1 numeric scalar
231 IF M1<>0 THEN 239
 Variable:M1 numeric scalar
 NumericConstant:0
 BinaryOperatorNotEqual:<> numeric
232 PRINT
 CarriageControl:NL
233 PRINT "IT LOOKS LIKE I HAVE WON BY FORFEIT."
 TextConstant:"IT LOOKS LIKE I HAVE WON BY FORFEIT."
 CarriageControl:NL
234 PRINT
 CarriageControl:NL
235 GOTO 4000
 LineNumber:4000
239 IF M1<=M THEN 3200
 Variable:M1 numeric scalar
 Variable:M numeric scalar
 BinaryOperatorLessEqual:<= numeric
240 T1=INT(M1/10)
 Variable:T1 numeric scalar
 Variable:M1 numeric scalar
 NumericConstant:10
 BinaryOperatorDivide:/ numeric
 FunctionInt:INT(_) numeric scalar
 AssignmentOperator:=
250 U1=M1-10*T1
 Variable:U1 numeric scalar
 Variable:M1 numeric scalar
 NumericConstant:10
 Variable:T1 numeric scalar
 BinaryOperatorMultiply:* numeric
 BinaryOperatorMinus:- numeric
 AssignmentOperator:=
260 P=U1-U
 Variable:P numeric scalar
 Variable:U1 numeric scalar
 Variable:U numeric scalar
 BinaryOperatorMinus:- numeric
 AssignmentOperator:=
270 IF P<>0 THEN 300
 Variable:P numeric scalar
 NumericConstant:0
 BinaryOperatorNotEqual:<> numeric
280 L=T1-T
 Variable:L numeric scalar
 Variable:T1 numeric scalar
 Variable:T numeric scalar
 BinaryOperatorMinus:- numeric
 AssignmentOperator:=
290 IF L<=0 THEN 3200
 Variable:L numeric scalar
 NumericConstant:0
 BinaryOperatorLessEqual:<= numeric
295 GOTO 200
 LineNumber:200
300 IF T1-T <>P THEN 320
 Variable:T1 numeric scalar
 Variable:T numeric scalar
 BinaryOperatorMinus:- numeric
 Variable:P numeric scalar
 BinaryOperatorNotEqual:<> numeric
310 GOTO 200
 LineNumber:200
320 IF T1-T <>2*P THEN 3200
 Variable:T1 numeric scalar
 Variable:T numeric scalar
 BinaryOperatorMinus:- numeric
 NumericConstant:2
 Variable:P numeric scalar
 BinaryOperatorMultiply:* numeric
 BinaryOperatorNotEqual:<> numeric
330 GOTO 200
 LineNumber:200
1990 REM     LOCATE MOVE FOR COMPUTER
 Remark:    LOCATE MOVE FOR COMPUTER
2000 IF M1=41 THEN 2180
 Variable:M1 numeric scalar
 NumericConstant:41
 BinaryOperatorEqual:= numeric
2010 IF M1=44 THEN 2180
 Variable:M1 numeric scalar
 NumericConstant:44
 BinaryOperatorEqual:= numeric
2020 IF M1=73 THEN 2180
 Variable:M1 numeric scalar
 NumericConstant:73
 BinaryOperatorEqual:= numeric
2030 IF M1=75 THEN 2180
 Variable:M1 numeric scalar
 NumericConstant:75
 BinaryOperatorEqual:= numeric
2040 IF M1=126 THEN 2180
 Variable:M1 numeric scalar
 NumericConstant:126
 BinaryOperatorEqual:= numeric
2050 IF M1=127 THEN 2180
 Variable:M1 numeric scalar
 NumericConstant:127
 BinaryOperatorEqual:= numeric
2060 IF M1=158 THEN 3300
 Variable:M1 numeric scalar
 NumericConstant:158
 BinaryOperatorEqual:= numeric
2065 C=0
 Variable:C numeric scalar
 NumericConstant:0
 AssignmentOperator:=
2070 FOR K=7 TO 1 STEP -1
 control: Variable:K numeric scalar
 start:   ["NumericConstant:7"]
 end:     ["NumericConstant:1"]
 step:    ["NumericConstant:1", "UnaryOperatorMinus:- numeric"]
2080 U=U1
 Variable:U numeric scalar
 Variable:U1 numeric scalar
 AssignmentOperator:=
2090 T=T1+K
 Variable:T numeric scalar
 Variable:T1 numeric scalar
 Variable:K numeric scalar
 BinaryOperatorPlus:+ numeric
 AssignmentOperator:=
2100 GOSUB 3500
 LineNumber:3500
2105 IF C=1 THEN 2160
 Variable:C numeric scalar
 NumericConstant:1
 BinaryOperatorEqual:= numeric
2110 U=U+K
 Variable:U numeric scalar
 Variable:U numeric scalar
 Variable:K numeric scalar
 BinaryOperatorPlus:+ numeric
 AssignmentOperator:=
2120 GOSUB 3500
 LineNumber:3500
2125 IF C=1 THEN 2160
 Variable:C numeric scalar
 NumericConstant:1
 BinaryOperatorEqual:= numeric
2130 T=T+K
 Variable:T numeric scalar
 Variable:T numeric scalar
 Variable:K numeric scalar
 BinaryOperatorPlus:+ numeric
 AssignmentOperator:=
2140 GOSUB 3500
 LineNumber:3500
2145 IF C=1 THEN 2160
 Variable:C numeric scalar
 NumericConstant:1
 BinaryOperatorEqual:= numeric
2150 NEXT K
 Variable:K numeric scalar
2155 GOTO 2180
 LineNumber:2180
2160 C=0
 Variable:C numeric scalar
 NumericConstant:0
 AssignmentOperator:=
2170 RETURN
 
2180 GOSUB 3000
 LineNumber:3000
2190 RETURN
 
2990 REM     RANDOM MOVE
 Remark:    RANDOM MOVE
3000 Z=RND(1)
 Variable:Z numeric scalar
 NumericConstant:1
 FunctionRnd:RND(_) numeric scalar
 AssignmentOperator:=
3010 IF Z>.6 THEN 3110
 Variable:Z numeric scalar
 NumericConstant:.6
 BinaryOperatorGreater:> numeric
3020 IF Z>.3 THEN 3070
 Variable:Z numeric scalar
 NumericConstant:.3
 BinaryOperatorGreater:> numeric
3030 U=U1
 Variable:U numeric scalar
 Variable:U1 numeric scalar
 AssignmentOperator:=
3040 T=T1+1
 Variable:T numeric scalar
 Variable:T1 numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric
 AssignmentOperator:=
3050 M=10*T+U
 Variable:M numeric scalar
 NumericConstant:10
 Variable:T numeric scalar
 BinaryOperatorMultiply:* numeric
 Variable:U numeric scalar
 BinaryOperatorPlus:+ numeric
 AssignmentOperator:=
3060 RETURN
 
3070 U=U1+1
 Variable:U numeric scalar
 Variable:U1 numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric
 AssignmentOperator:=
3080 T=T1+2
 Variable:T numeric scalar
 Variable:T1 numeric scalar
 NumericConstant:2
 BinaryOperatorPlus:+ numeric
 AssignmentOperator:=
3090 M=10*T+U
 Variable:M numeric scalar
 NumericConstant:10
 Variable:T numeric scalar
 BinaryOperatorMultiply:* numeric
 Variable:U numeric scalar
 BinaryOperatorPlus:+ numeric
 AssignmentOperator:=
3100 RETURN
 
3110 U=U1+1
 Variable:U numeric scalar
 Variable:U1 numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric
 AssignmentOperator:=
3120 T=T1+1
 Variable:T numeric scalar
 Variable:T1 numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric
 AssignmentOperator:=
3130 M=10*T+U
 Variable:M numeric scalar
 NumericConstant:10
 Variable:T numeric scalar
 BinaryOperatorMultiply:* numeric
 Variable:U numeric scalar
 BinaryOperatorPlus:+ numeric
 AssignmentOperator:=
3140 RETURN
 
3190 REM     ILLEGAL MOVE MESSAGE
 Remark:    ILLEGAL MOVE MESSAGE
3200 PRINT
 CarriageControl:NL
3210 PRINT "Y O U   C H E A T . . .  TRY AGAIN";
 TextConstant:"Y O U   C H E A T . . .  TRY AGAIN"
 CarriageControl:;
3220 GOTO 230
 LineNumber:230
3290 REM     PLAYER WINS
 Remark:    PLAYER WINS
3300 PRINT
 CarriageControl:NL
3310 PRINT "C O N G R A T U L A T I O N S . . ."
 TextConstant:"C O N G R A T U L A T I O N S . . ."
 CarriageControl:NL
3320 PRINT 
 CarriageControl:NL
3330 PRINT "YOU HAVE WON--VERY WELL PLAYED."
 TextConstant:"YOU HAVE WON--VERY WELL PLAYED."
 CarriageControl:NL
3340 PRINT "IT LOOKS LIKE I HAVE MET MY MATCH."
 TextConstant:"IT LOOKS LIKE I HAVE MET MY MATCH."
 CarriageControl:NL
3350 PRINT "THANKS FOR PLAYING---I CAN'T WIN ALL THE TIME."
 TextConstant:"THANKS FOR PLAYING---I CAN'T WIN ALL THE TIME."
 CarriageControl:NL
3360 PRINT
 CarriageControl:NL
3370 GOTO 4000
 LineNumber:4000
3390 REM     COMPUTER WINS
 Remark:    COMPUTER WINS
3400 PRINT
 CarriageControl:NL
3410 PRINT "NICE TRY, BUT IT LOOKS LIKE I HAVE WON."
 TextConstant:"NICE TRY, BUT IT LOOKS LIKE I HAVE WON."
 CarriageControl:NL
3420 PRINT "THANKS FOR PLAYING."
 TextConstant:"THANKS FOR PLAYING."
 CarriageControl:NL
3430 PRINT
 CarriageControl:NL
3440 GOTO 4000
 LineNumber:4000
3490 REM     TEST FOR COMPUTER MOVE
 Remark:    TEST FOR COMPUTER MOVE
3500 M=10*T+U
 Variable:M numeric scalar
 NumericConstant:10
 Variable:T numeric scalar
 BinaryOperatorMultiply:* numeric
 Variable:U numeric scalar
 BinaryOperatorPlus:+ numeric
 AssignmentOperator:=
3510 IF M=158 THEN 3570
 Variable:M numeric scalar
 NumericConstant:158
 BinaryOperatorEqual:= numeric
3520 IF M=127 THEN 3570
 Variable:M numeric scalar
 NumericConstant:127
 BinaryOperatorEqual:= numeric
3530 IF M=126 THEN 3570
 Variable:M numeric scalar
 NumericConstant:126
 BinaryOperatorEqual:= numeric
3540 IF M=75 THEN 3570
 Variable:M numeric scalar
 NumericConstant:75
 BinaryOperatorEqual:= numeric
3550 IF M=73 THEN 3570
 Variable:M numeric scalar
 NumericConstant:73
 BinaryOperatorEqual:= numeric
3560 RETURN
 
3570 C=1
 Variable:C numeric scalar
 NumericConstant:1
 AssignmentOperator:=
3580 GOTO 3560
 LineNumber:3560
3990 REM     ANOTHER GAME???
 Remark:    ANOTHER GAME???
4000 PRINT "ANYONE ELSE CARE TO TRY";
 TextConstant:"ANYONE ELSE CARE TO TRY"
 CarriageControl:;
4010 INPUT Q$
 Variable:Q$ string scalar
4020 PRINT
 CarriageControl:NL
4030 IF Q$="YES" THEN 30 
 Variable:Q$ string scalar
 TextConstant:"YES"
 BinaryOperatorEqual:= numeric
4040 IF Q$="NO" THEN 4050
 Variable:Q$ string scalar
 TextConstant:"NO"
 BinaryOperatorEqual:= numeric
4042 PRINT "PLEASE ANSWER 'YES' OR 'NO'."
 TextConstant:"PLEASE ANSWER 'YES' OR 'NO'."
 CarriageControl:NL
4045 GOTO 4000
 LineNumber:4000
4050 PRINT:PRINT "OK --- THANKS AGAIN."
 CarriageControl:NL
 TextConstant:"OK --- THANKS AGAIN."
 CarriageControl:NL
4060 STOP
 
4990 REM     DIRECTIONS
 Remark:    DIRECTIONS
5000 PRINT "WE ARE GOING TO PLAY A GAME BASED ON ONE OF THE CHESS"
 TextConstant:"WE ARE GOING TO PLAY A GAME BASED ON ONE OF THE CHESS"
 CarriageControl:NL
5010 PRINT "MOVES.  OUR QUEEN WILL BE ABLE TO MOVE ONLY TO THE LEFT,"
 TextConstant:"MOVES.  OUR QUEEN WILL BE ABLE TO MOVE ONLY TO THE LEFT,"
 CarriageControl:NL
5020 PRINT "DOWN, OR DIAGONALLY DOWN AND TO THE LEFT."
 TextConstant:"DOWN, OR DIAGONALLY DOWN AND TO THE LEFT."
 CarriageControl:NL
5030 PRINT
 CarriageControl:NL
5040 PRINT "THE OBJECT OF THE GAME IS TO PLACE THE QUEEN IN THE LOWER"
 TextConstant:"THE OBJECT OF THE GAME IS TO PLACE THE QUEEN IN THE LOWER"
 CarriageControl:NL
5050 PRINT "LEFT HAND SQUARE BY ALTERNATING MOVES BETWEEN YOU AND THE"
 TextConstant:"LEFT HAND SQUARE BY ALTERNATING MOVES BETWEEN YOU AND THE"
 CarriageControl:NL
5060 PRINT "COMPUTER.  THE FIRST ONE TO PLACE THE QUEEN THERE WINS."
 TextConstant:"COMPUTER.  THE FIRST ONE TO PLACE THE QUEEN THERE WINS."
 CarriageControl:NL
5070 PRINT
 CarriageControl:NL
5080 PRINT "YOU GO FIRST AND PLACE THE QUEEN IN ANY ONE OF THE SQUARES"
 TextConstant:"YOU GO FIRST AND PLACE THE QUEEN IN ANY ONE OF THE SQUARES"
 CarriageControl:NL
5090 PRINT "ON THE TOP ROW OR RIGHT HAND COLUMN."
 TextConstant:"ON THE TOP ROW OR RIGHT HAND COLUMN."
 CarriageControl:NL
5100 PRINT "THAT WILL BE YOUR FIRST MOVE."
 TextConstant:"THAT WILL BE YOUR FIRST MOVE."
 CarriageControl:NL
5110 PRINT "WE ALTERNATE MOVES."
 TextConstant:"WE ALTERNATE MOVES."
 CarriageControl:NL
5120 PRINT "YOU MAY FORFEIT BY TYPING '0' AS YOUR MOVE."
 TextConstant:"YOU MAY FORFEIT BY TYPING '0' AS YOUR MOVE."
 CarriageControl:NL
5130 PRINT "BE SURE TO PRESS THE RETURN KEY AFTER EACH RESPONSE."
 TextConstant:"BE SURE TO PRESS THE RETURN KEY AFTER EACH RESPONSE."
 CarriageControl:NL
5140 PRINT
 CarriageControl:NL
5150 PRINT
 CarriageControl:NL
5160 PRINT
 CarriageControl:NL
5170 FOR A=0 TO 7
 control: Variable:A numeric scalar
 start:   ["NumericConstant:0"]
 end:     ["NumericConstant:7"]
5180 FOR B=1 TO 8
 control: Variable:B numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8"]
5185 I=8*A+B
 Variable:I numeric scalar
 NumericConstant:8
 Variable:A numeric scalar
 BinaryOperatorMultiply:* numeric
 Variable:B numeric scalar
 BinaryOperatorPlus:+ numeric
 AssignmentOperator:=
5190 PRINT S(I);
 Variable:I numeric scalar
 Variable:S numeric scalar
 CarriageControl:;
5200 NEXT B
 Variable:B numeric scalar
5210 PRINT
 CarriageControl:NL
5220 PRINT
 CarriageControl:NL
5230 PRINT
 CarriageControl:NL
5240 NEXT A
 Variable:A numeric scalar
5250 PRINT
 CarriageControl:NL
5260 RETURN
 
9999 END
 

