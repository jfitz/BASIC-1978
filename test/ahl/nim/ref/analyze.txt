Statistics:

Number of lines: 156
Number of valid statements: 158
Number of comments: 0
Number of executable statements: 158

Complexity:

Comment density: 0.000
Comprehension effort: 509
McCabe complexity: 70
Halstead complexity:
 length: 698
 volume: 3397.539
 difficulty: 45.476
 effort: 154507.133
 language: 1.643
 intelligence: 74.710
 time: 143.062

(0 4) 100 PRINT TAB(33); "NIM"
  Origs: :start
  Dests: 110:auto
(0 4) 110 PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 100:auto
  Dests: 120:auto
(0 2) 120 PRINT
(0 2)     PRINT
(0 2)     PRINT
  Origs: 110:auto
  Dests: 210:auto
(0 4) 210 DIM A(100), B(100, 10), D(2)
  Origs: 120:auto
  Dests: 220:auto
(0 2) 220 PRINT "THIS IS THE GAME OF NIM."
  Origs: 210:auto
  Dests: 230:auto
(0 2) 230 PRINT "DO YOU WANT INSTRUCTIONS";
  Origs: 220:auto
  Dests: 240:auto
(1 2) 240 INPUT Z$
  Origs: 230:auto, 300:goto
  Dests: 250:auto
(1 4) 250 IF Z$ = "NO" THEN 440
  Origs: 240:auto
  Dests: 260:auto, 440:ifthen
(1 4) 260 IF Z$ = "no" THEN 440
  Origs: 250:auto
  Dests: 270:auto, 440:ifthen
(1 4) 270 IF Z$ = "YES" THEN 310
  Origs: 260:auto
  Dests: 280:auto, 310:ifthen
(1 4) 280 IF Z$ = "yes" THEN 310
  Origs: 270:auto
  Dests: 290:auto, 310:ifthen
(0 2) 290 PRINT "PLEASE ANSWER YES OR NO"
  Origs: 280:auto
  Dests: 300:auto
(0 3) 300 GOTO 240
  Origs: 290:auto
  Dests: 240:goto
(0 2) 310 PRINT "THE GAME IS PLAYED WITH A NUMBER OF PILES OF OBJECTS."
  Origs: 270:ifthen, 280:ifthen
  Dests: 320:auto
(0 2) 320 PRINT "ANY NUMBER OF OBJECTS ARE REMOVED FROM ONE PILE BY YOU AND"
  Origs: 310:auto
  Dests: 330:auto
(0 2) 330 PRINT "THE MACHINE ALTERNATELY.  ON YOUR TURN, YOU MAY TAKE"
  Origs: 320:auto
  Dests: 340:auto
(0 2) 340 PRINT "ALL THE OBJECTS THAT REMAIN IN ANY PILE, BUT YOU MUST"
  Origs: 330:auto
  Dests: 350:auto
(0 2) 350 PRINT "TAKE AT LEAST ONE OBJECT, AND YOU MAY TAKE OBJECTS FROM"
  Origs: 340:auto
  Dests: 360:auto
(0 2) 360 PRINT "ONLY ONE PILE ON A SINGLE TURN.  YOU MUST SPECIFY WHETHER"
  Origs: 350:auto
  Dests: 370:auto
(0 2) 370 PRINT "WINNING IS DEFINED AS TAKING OR NOT TAKING THE LAST OBJECT,"
  Origs: 360:auto
  Dests: 380:auto
(0 2) 380 PRINT "THE NUMBER OF PILES IN THE GAME, AND HOW MANY OBJECTS ARE"
  Origs: 370:auto
  Dests: 390:auto
(0 2) 390 PRINT "ORIGINALLY IN EACH PILE.  EACH PILE MAY CONTAIN A"
  Origs: 380:auto
  Dests: 400:auto
(0 2) 400 PRINT "DIFFERENT NUMBER OF OBJECTS."
  Origs: 390:auto
  Dests: 410:auto
(0 2) 410 PRINT "THE MACHINE WILL SHOW ITS MOVE BY LISTING EACH PILE AND THE"
  Origs: 400:auto
  Dests: 420:auto
(0 2) 420 PRINT "NUMBER OF OBJECTS REMAINING IN THE PILES AFTER  EACH OF ITS"
  Origs: 410:auto
  Dests: 430:auto
(0 2) 430 PRINT "MOVES."
  Origs: 420:auto
  Dests: 440:auto
F(I,J) (0 2) 440 PRINT
  Origs: 250:ifthen, 260:ifthen, 430:auto, 1720:goto
  Dests: 450:auto
F(I,J) (0 2) 450 PRINT "ENTER WIN OPTION - 1 TO TAKE LAST, 2 TO AVOID LAST";
  Origs: 440:auto, 480:ifthen
  Dests: 460:auto
F(I,J) (1 2) 460 INPUT W
  Origs: 450:auto
  Dests: 470:auto
F(I,J) (1 4) 470 IF W = 1 THEN 490
  Origs: 460:auto
  Dests: 480:auto, 490:ifthen
F(I,J) (1 5) 480 IF W <> 2 THEN 450
  Origs: 470:auto
  Dests: 450:ifthen, 490:auto
F(I,J) (0 2) 490 PRINT "ENTER NUMBER OF PILES";
  Origs: 470:ifthen, 480:auto, 510:ifthen, 520:ifthen, 530:ifthen
  Dests: 500:auto
F(I,J) (1 2) 500 INPUT N
  Origs: 490:auto
  Dests: 510:auto
F(I,J) (1 5) 510 IF N > 100 THEN 490
  Origs: 500:auto
  Dests: 490:ifthen, 520:auto
F(I,J) (1 5) 520 IF N < 1 THEN 490
  Origs: 510:auto
  Dests: 490:ifthen, 530:auto
F(I,J) (1 6) 530 IF N <> INT(N) THEN 490
  Origs: 520:auto
  Dests: 490:ifthen, 540:auto
F(I,J) (0 2) 540 PRINT "ENTER PILE SIZES"
  Origs: 530:auto
  Dests: 550:auto
F(I,J) (1 3) 550 FOR I = 1 TO N
  Origs: 540:auto
  Dests: 560:fornext, 610:fornext
F(I,J) (0 2) 560 PRINT I;
  Origs: 550:fornext, 580:ifthen, 590:ifthen, 600:ifthen
  Dests: 570:auto
F(I,J) (1 2) 570 INPUT A(I)
  Origs: 560:auto
  Dests: 580:auto
F(I,J) (1 5) 580 IF A(I) > 2000 THEN 560
  Origs: 570:auto
  Dests: 560:ifthen, 590:auto
F(I,J) (1 5) 590 IF A(I) < 1 THEN 560
  Origs: 580:auto
  Dests: 560:ifthen, 600:auto
F(I,J) (1 6) 600 IF A(I) <> INT(A(I)) THEN 560
  Origs: 590:auto
  Dests: 560:ifthen, 610:auto
F(I,J) (0 1) 610 NEXT I
  Origs: 550:fornext, 600:auto
  Dests: 620:auto
F(J) (0 2) 620 PRINT "DO YOU WANT TO MOVE FIRST";
  Origs: 610:auto
  Dests: 630:auto
F(J) (1 2) 630 INPUT Q9$
  Origs: 620:auto, 690:goto
  Dests: 640:auto
F(J) (1 4) 640 IF Q9$ = "YES" THEN 1450
  Origs: 630:auto
  Dests: 650:auto, 1450:ifthen
F(J) (1 4) 650 IF Q9$ = "yes" THEN 1450
  Origs: 640:auto
  Dests: 660:auto, 1450:ifthen
F(J) (1 4) 660 IF Q9$ = "NO" THEN 700
  Origs: 650:auto
  Dests: 670:auto, 700:ifthen
F(J) (1 4) 670 IF Q9$ = "no" THEN 700
  Origs: 660:auto
  Dests: 680:auto, 700:ifthen
F(J) (0 2) 680 PRINT "PLEASE ANSWER YES OR NO."
  Origs: 670:auto
  Dests: 690:auto
F(J) (0 3) 690 GOTO 630
  Origs: 680:auto
  Dests: 630:goto
F(I,J) (1 4) 700 IF W = 1 THEN 940
  Origs: 660:ifthen, 670:ifthen, 1560:goto
  Dests: 710:auto, 940:ifthen
F(I,J) (0 3) 710 LET C = 0
  Origs: 700:auto
  Dests: 720:auto
F(I,J) (1 3) 720 FOR I = 1 TO N
  Origs: 710:auto
  Dests: 730:fornext, 770:fornext
F(I,J) (1 4) 730 IF A(I) = 0 THEN 770
  Origs: 720:fornext
  Dests: 740:auto, 770:ifthen
F(I,J) (0 4) 740 LET C = C + 1
  Origs: 730:auto
  Dests: 750:auto
F(I,J) (1 4) 750 IF C = 3 THEN 840
  Origs: 740:auto
  Dests: 760:auto, 840:ifthen
F(I,J) (0 3) 760 LET D(C) = I
  Origs: 750:auto
  Dests: 770:auto
F(I,J) (0 1) 770 NEXT I
  Origs: 720:fornext, 730:ifthen, 760:auto
  Dests: 780:auto
F(J) (1 4) 780 IF C = 2 THEN 920
  Origs: 770:auto
  Dests: 790:auto, 920:ifthen
F(J) (1 4) 790 IF A(D(1)) > 1 THEN 820
  Origs: 780:auto
  Dests: 800:auto, 820:ifthen
F(I,J) (0 2) 800 PRINT "MACHINE LOSES"
  Origs: 790:auto, 900:ifthen, 1550:ifthen
  Dests: 810:auto
F(I,J) (0 2) 810 GOTO 1640
  Origs: 800:auto
  Dests: 1640:goto
F(I,J) (0 2) 820 PRINT "MACHINE WINS"
  Origs: 790:ifthen, 920:ifthen, 930:ifthen, 1440:ifthen
  Dests: 830:auto
F(I,J) (0 2) 830 GOTO 1640
  Origs: 820:auto
  Dests: 1640:goto
F(I,J) (0 3) 840 LET C = 0
  Origs: 750:ifthen
  Dests: 850:auto
F(I,I,J) (1 3) 850 FOR I = 1 TO N
  Origs: 840:auto
  Dests: 860:fornext, 890:fornext
F(I,I,J) (1 4) 860 IF A(I) > 1 THEN 940
  Origs: 850:fornext
  Dests: 870:auto, 940:ifthen
F(I,J) (1 4) 870 IF A(I) = 0 THEN 890
  Origs: 860:auto
  Dests: 880:auto, 890:ifthen
F(I,J) (0 4) 880 LET C = C + 1
  Origs: 870:auto
  Dests: 890:auto
F(I,J) (0 1) 890 NEXT I
  Origs: 850:fornext, 870:ifthen, 880:auto
  Dests: 900:auto
F(I,J) (1 7) 900 IF C / 2 <> INT(C / 2) THEN 800
  Origs: 890:auto
  Dests: 800:ifthen, 910:auto
F(I,J) (0 2) 910 GOTO 940
  Origs: 900:auto
  Dests: 940:goto
F(J) (1 5) 920 IF A(D(1)) = 1 THEN 820
  Origs: 780:ifthen
  Dests: 820:ifthen, 930:auto
F(J) (1 5) 930 IF A(D(2)) = 1 THEN 820
  Origs: 920:auto
  Dests: 820:ifthen, 940:auto
F(I,I,J) (1 3) 940 FOR I = 1 TO N
  Origs: 700:ifthen, 860:ifthen, 910:goto, 930:auto
  Dests: 950:fornext, 1010:fornext
F(I,I,J) (0 3) 950 LET E = A(I)
  Origs: 940:fornext
  Dests: 960:auto
F(I,J) (1 3) 960 FOR J = 0 TO 10
  Origs: 950:auto
  Dests: 970:fornext, 1000:fornext
F(I,J) (0 4) 970 LET F = E / 2
  Origs: 960:fornext
  Dests: 980:auto
F(I,J) (0 7) 980 LET B(I, J) = 2 * (F - INT(F))
  Origs: 970:auto
  Dests: 990:auto
F(I,J) (0 4) 990 LET E = INT(F)
  Origs: 980:auto
  Dests: 1000:auto
F(I,J) (0 1) 1000 NEXT J
  Origs: 960:fornext, 990:auto
  Dests: 1010:auto
F(I,J) (0 1) 1010 NEXT I
  Origs: 940:fornext, 1000:auto
  Dests: 1020:auto
F(I,J) (1 5) 1020 FOR J = 10 TO 0 STEP -1
  Origs: 1010:auto
  Dests: 1030:fornext, 1130:fornext
F(I,J) (0 3) 1030 LET C = 0
  Origs: 1020:fornext
  Dests: 1040:auto
F(I,J) (0 3) 1040 LET H = 0
  Origs: 1030:auto
  Dests: 1050:auto
F(I,J,I) (1 3) 1050 FOR I = 1 TO N
  Origs: 1040:auto
  Dests: 1060:fornext, 1110:fornext
F(I,J,I) (1 4) 1060 IF B(I, J) = 0 THEN 1110
  Origs: 1050:fornext
  Dests: 1070:auto, 1110:ifthen
F(I,J) (0 4) 1070 LET C = C + 1
  Origs: 1060:auto
  Dests: 1080:auto
F(I,J) (1 4) 1080 IF A(I) <= H THEN 1110
  Origs: 1070:auto
  Dests: 1090:auto, 1110:ifthen
F(I,J) (0 3) 1090 LET H = A(I)
  Origs: 1080:auto
  Dests: 1100:auto
F(I,J) (0 3) 1100 LET G = I
  Origs: 1090:auto
  Dests: 1110:auto
F(I,J) (0 1) 1110 NEXT I
  Origs: 1050:fornext, 1060:ifthen, 1080:ifthen, 1100:auto
  Dests: 1120:auto
F(I,J) (1 6) 1120 IF C / 2 <> INT(C / 2) THEN 1190
  Origs: 1110:auto
  Dests: 1130:auto, 1190:ifthen
F(I,J) (0 1) 1130 NEXT J
  Origs: 1020:fornext, 1120:auto
  Dests: 1140:auto
F(I) (0 4) 1140 LET E = INT(N * RND(1) + 1)
  Origs: 1130:auto, 1150:ifthen
  Dests: 1150:auto
F(I) (1 5) 1150 IF A(E) = 0 THEN 1140
  Origs: 1140:auto
  Dests: 1140:ifthen, 1160:auto
F(I) (0 4) 1160 LET F = INT(A(E) * RND(1) + 1)
  Origs: 1150:auto
  Dests: 1170:auto
F(I) (0 4) 1170 LET A(E) = A(E) - F
  Origs: 1160:auto
  Dests: 1180:auto
F(I) (0 2) 1180 GOTO 1380
  Origs: 1170:auto
  Dests: 1380:goto
F(I,J) (0 3) 1190 LET A(G) = 0
  Origs: 1120:ifthen
  Dests: 1200:auto
F(I,J,J) (1 3) 1200 FOR J = 0 TO 10
  Origs: 1190:auto
  Dests: 1210:fornext, 1280:fornext
F(I,J,J) (0 3) 1210 LET B(G, J) = 0
  Origs: 1200:fornext
  Dests: 1220:auto
F(I,J) (0 3) 1220 LET C = 0
  Origs: 1210:auto
  Dests: 1230:auto
F(I,J,I) (1 3) 1230 FOR I = 1 TO N
  Origs: 1220:auto
  Dests: 1240:fornext, 1260:fornext
F(I,J,I) (1 4) 1240 IF B(I, J) = 0 THEN 1260
  Origs: 1230:fornext
  Dests: 1250:auto, 1260:ifthen
F(I,J) (0 4) 1250 LET C = C + 1
  Origs: 1240:auto
  Dests: 1260:auto
F(I,J) (0 1) 1260 NEXT I
  Origs: 1230:fornext, 1240:ifthen, 1250:auto
  Dests: 1270:auto
F(I,J) (0 13) 1270 LET A(G) = A(G) + 2 * (C / 2 - INT(C / 2)) * 2 ^ J
  Origs: 1260:auto
  Dests: 1280:auto
F(I,J) (0 1) 1280 NEXT J
  Origs: 1200:fornext, 1270:auto
  Dests: 1290:auto
F(I,J) (1 4) 1290 IF W = 1 THEN 1380
  Origs: 1280:auto
  Dests: 1300:auto, 1380:ifthen
F(I,J) (0 3) 1300 LET C = 0
  Origs: 1290:auto
  Dests: 1310:auto
F(I,J,I) (1 3) 1310 FOR I = 1 TO N
  Origs: 1300:auto
  Dests: 1320:fornext, 1350:fornext
F(I,J,I) (1 4) 1320 IF A(I) > 1 THEN 1380
  Origs: 1310:fornext
  Dests: 1330:auto, 1380:ifthen
F(I,J) (1 4) 1330 IF A(I) = 0 THEN 1350
  Origs: 1320:auto
  Dests: 1340:auto, 1350:ifthen
F(I,J) (0 4) 1340 LET C = C + 1
  Origs: 1330:auto
  Dests: 1350:auto
F(I,J) (0 1) 1350 NEXT I
  Origs: 1310:fornext, 1330:ifthen, 1340:auto
  Dests: 1360:auto
F(I,J) (1 6) 1360 IF C / 2 <> INT(C / 2) THEN 1380
  Origs: 1350:auto
  Dests: 1370:auto, 1380:ifthen
F(I,J) (0 4) 1370 LET A(G) = 1 - A(G)
  Origs: 1360:auto
  Dests: 1380:auto
F(I,J) (0 2) 1380 PRINT "PILE  SIZE"
  Origs: 1180:goto, 1290:ifthen, 1320:ifthen, 1360:ifthen, 1370:auto
  Dests: 1390:auto
F(I,J,I) (1 3) 1390 FOR I = 1 TO N
  Origs: 1380:auto
  Dests: 1400:fornext, 1410:fornext
F(I,J,I) (0 3) 1400 PRINT I; A(I)
  Origs: 1390:fornext
  Dests: 1410:auto
F(I,J) (0 1) 1410 NEXT I
  Origs: 1390:fornext, 1400:auto
  Dests: 1420:auto
F(I,J) (1 4) 1420 IF W = 2 THEN 1450
  Origs: 1410:auto
  Dests: 1430:auto, 1450:ifthen
F(I,J) (0 2) 1430 GOSUB 1570
  Origs: 1420:auto
  Dests: 1440:auto, 1570:gosub
F(I,J) (1 5) 1440 IF Z = 1 THEN 820
  Origs: 1430:auto
  Dests: 820:ifthen, 1450:auto
F(I,J) (0 2) 1450 PRINT "YOUR MOVE - PILE, NUMBER TO BE REMOVED";
  Origs: 640:ifthen, 650:ifthen, 1420:ifthen, 1440:auto, 1470:ifthen, 1480:ifthen, 1490:ifthen, 1500:ifthen, 1510:ifthen, 1520:ifthen
  Dests: 1460:auto
F(I,J) (2 3) 1460 INPUT X, Y
  Origs: 1450:auto
  Dests: 1470:auto
F(I,J) (1 5) 1470 IF X > N THEN 1450
  Origs: 1460:auto
  Dests: 1450:ifthen, 1480:auto
F(I,J) (1 5) 1480 IF X < 1 THEN 1450
  Origs: 1470:auto
  Dests: 1450:ifthen, 1490:auto
F(I,J) (1 6) 1490 IF X <> INT(X) THEN 1450
  Origs: 1480:auto
  Dests: 1450:ifthen, 1500:auto
F(I,J) (1 5) 1500 IF Y > A(X) THEN 1450
  Origs: 1490:auto
  Dests: 1450:ifthen, 1510:auto
F(I,J) (1 5) 1510 IF Y < 1 THEN 1450
  Origs: 1500:auto
  Dests: 1450:ifthen, 1520:auto
F(I,J) (1 6) 1520 IF Y <> INT(Y) THEN 1450
  Origs: 1510:auto
  Dests: 1450:ifthen, 1530:auto
F(I,J) (0 4) 1530 LET A(X) = A(X) - Y
  Origs: 1520:auto
  Dests: 1540:auto
F(I,J) (0 2) 1540 GOSUB 1570
  Origs: 1530:auto
  Dests: 1550:auto, 1570:gosub
F(I,J) (1 5) 1550 IF Z = 1 THEN 800
  Origs: 1540:auto
  Dests: 800:ifthen, 1560:auto
F(I,J) (0 3) 1560 GOTO 700
  Origs: 1550:auto
  Dests: 700:goto
G(1570) (0 3) 1570 LET Z = 0
  Origs: 1430:gosub, 1540:gosub
  Dests: 1580:auto
G(1570) F(I) (1 3) 1580 FOR I = 1 TO N
  Origs: 1570:auto
  Dests: 1590:fornext, 1610:fornext
G(1570) F(I) (1 4) 1590 IF A(I) = 0 THEN 1610
  Origs: 1580:fornext
  Dests: 1600:auto, 1610:ifthen
G(1570) F(I) (0 1) 1600 RETURN
  Origs: 1590:auto
  Dests: 
G(1570) F(I) (0 1) 1610 NEXT I
  Origs: 1580:fornext, 1590:ifthen
  Dests: 1620:auto
G(1570) (0 3) 1620 LET Z = 1
  Origs: 1610:auto
  Dests: 1630:auto
G(1570) (0 1) 1630 RETURN
  Origs: 1620:auto
  Dests: 
F(I,J) (0 2) 1640 PRINT "do you want to play another game";
  Origs: 810:goto, 830:goto
  Dests: 1650:auto
F(I,J) (1 2) 1650 INPUT Q9$
  Origs: 1640:auto, 1710:goto
  Dests: 1660:auto
F(I,J) (1 4) 1660 IF Q9$ = "YES" THEN 1720
  Origs: 1650:auto
  Dests: 1670:auto, 1720:ifthen
F(I,J) (1 4) 1670 IF Q9$ = "yes" THEN 1720
  Origs: 1660:auto
  Dests: 1680:auto, 1720:ifthen
F(I,J) (1 4) 1680 IF Q9$ = "NO" THEN 1730
  Origs: 1670:auto
  Dests: 1690:auto, 1730:ifthen
F(I,J) (1 4) 1690 IF Q9$ = "no" THEN 1730
  Origs: 1680:auto
  Dests: 1700:auto, 1730:ifthen
F(I,J) (0 2) 1700 PRINT "PLEASE.  YES OR NO."
  Origs: 1690:auto
  Dests: 1710:auto
F(I,J) (0 3) 1710 GOTO 1650
  Origs: 1700:auto
  Dests: 1650:goto
F(I,J) (0 3) 1720 GOTO 440
  Origs: 1660:ifthen, 1670:ifthen
  Dests: 440:goto
F(I,J) (0 1) 1730 END
     WARNING: Terminating statement in FOR/NEXT
  Origs: 1680:ifthen, 1690:ifthen
  Dests: :stop

Unreachable code:

All executable lines are reachable.

