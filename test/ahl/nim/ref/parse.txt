100 PRINT TAB(33);"NIM"
 NumericValue:33
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"NIM"
 CarriageControl:NL
110 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericValue:15
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
120 PRINT:PRINT:PRINT
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
210 DIM A(100),B(100,10),D(2)
 NumericValue:100
 Declaration:A() -> .()
 NumericValue:100
 NumericValue:10
 Declaration:B(,) -> .(,)
 NumericValue:2
 Declaration:D() -> .()
220 PRINT "THIS IS THE GAME OF NIM."
 TextValue:"THIS IS THE GAME OF NIM."
 CarriageControl:NL
230 PRINT "DO YOU WANT INSTRUCTIONS";
 TextValue:"DO YOU WANT INSTRUCTIONS"
 CarriageControl:;
240 INPUT Z$
 Variable:Z$ -> $
250 IF Z$="NO" THEN 440
 Variable:Z$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:440
260 IF Z$="no" THEN 440
 Variable:Z$ -> $
 TextValue:"no"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:440
270 IF Z$="YES" THEN 310
 Variable:Z$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:310
280 IF Z$="yes" THEN 310
 Variable:Z$ -> $
 TextValue:"yes"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:310
290 PRINT "PLEASE ANSWER YES OR NO"
 TextValue:"PLEASE ANSWER YES OR NO"
 CarriageControl:NL
300 GOTO 240
 LineNumber:240
310 PRINT "THE GAME IS PLAYED WITH A NUMBER OF PILES OF OBJECTS."
 TextValue:"THE GAME IS PLAYED WITH A NUMBER OF PILES OF OBJECTS."
 CarriageControl:NL
320 PRINT "ANY NUMBER OF OBJECTS ARE REMOVED FROM ONE PILE BY YOU AND"
 TextValue:"ANY NUMBER OF OBJECTS ARE REMOVED FROM ONE PILE BY YOU AND"
 CarriageControl:NL
330 PRINT "THE MACHINE ALTERNATELY.  ON YOUR TURN, YOU MAY TAKE"
 TextValue:"THE MACHINE ALTERNATELY.  ON YOUR TURN, YOU MAY TAKE"
 CarriageControl:NL
340 PRINT "ALL THE OBJECTS THAT REMAIN IN ANY PILE, BUT YOU MUST"
 TextValue:"ALL THE OBJECTS THAT REMAIN IN ANY PILE, BUT YOU MUST"
 CarriageControl:NL
350 PRINT "TAKE AT LEAST ONE OBJECT, AND YOU MAY TAKE OBJECTS FROM"
 TextValue:"TAKE AT LEAST ONE OBJECT, AND YOU MAY TAKE OBJECTS FROM"
 CarriageControl:NL
360 PRINT "ONLY ONE PILE ON A SINGLE TURN.  YOU MUST SPECIFY WHETHER"
 TextValue:"ONLY ONE PILE ON A SINGLE TURN.  YOU MUST SPECIFY WHETHER"
 CarriageControl:NL
370 PRINT "WINNING IS DEFINED AS TAKING OR NOT TAKING THE LAST OBJECT,"
 TextValue:"WINNING IS DEFINED AS TAKING OR NOT TAKING THE LAST OBJECT,"
 CarriageControl:NL
380 PRINT "THE NUMBER OF PILES IN THE GAME, AND HOW MANY OBJECTS ARE"
 TextValue:"THE NUMBER OF PILES IN THE GAME, AND HOW MANY OBJECTS ARE"
 CarriageControl:NL
390 PRINT "ORIGINALLY IN EACH PILE.  EACH PILE MAY CONTAIN A"
 TextValue:"ORIGINALLY IN EACH PILE.  EACH PILE MAY CONTAIN A"
 CarriageControl:NL
400 PRINT "DIFFERENT NUMBER OF OBJECTS."
 TextValue:"DIFFERENT NUMBER OF OBJECTS."
 CarriageControl:NL
410 PRINT "THE MACHINE WILL SHOW ITS MOVE BY LISTING EACH PILE AND THE"
 TextValue:"THE MACHINE WILL SHOW ITS MOVE BY LISTING EACH PILE AND THE"
 CarriageControl:NL
420 PRINT "NUMBER OF OBJECTS REMAINING IN THE PILES AFTER  EACH OF ITS"
 TextValue:"NUMBER OF OBJECTS REMAINING IN THE PILES AFTER  EACH OF ITS"
 CarriageControl:NL
430 PRINT "MOVES."
 TextValue:"MOVES."
 CarriageControl:NL
440 PRINT
 CarriageControl:NL
450 PRINT "ENTER WIN OPTION - 1 TO TAKE LAST, 2 TO AVOID LAST";
 TextValue:"ENTER WIN OPTION - 1 TO TAKE LAST, 2 TO AVOID LAST"
 CarriageControl:;
460 INPUT W
 Variable:W -> .
470 IF W=1 THEN 490
 Variable:W -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:490
480 IF W<>2 THEN 450
 Variable:W -> .
 NumericValue:2
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:450
490 PRINT "ENTER NUMBER OF PILES";
 TextValue:"ENTER NUMBER OF PILES"
 CarriageControl:;
500 INPUT N
 Variable:N -> .
510 IF N>100 THEN 490
 Variable:N -> .
 NumericValue:100
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:490
520 IF N<1 THEN 490
 Variable:N -> .
 NumericValue:1
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:490
530 IF N<>INT(N) THEN 490
 Variable:N -> .
 Variable:N -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:490
540 PRINT "ENTER PILE SIZES"
 TextValue:"ENTER PILE SIZES"
 CarriageControl:NL
550 FOR I=1 TO N
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
560 PRINT I;
 Variable:I -> .
 CarriageControl:;
570 INPUT A(I)
 Variable:I -> .
 Variable:A(.) -> .
580 IF A(I)>2000 THEN 560
 Variable:I -> .
 Variable:A(.) -> .
 NumericValue:2000
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:560
590 IF A(I)<1 THEN 560
 Variable:I -> .
 Variable:A(.) -> .
 NumericValue:1
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:560
600 IF A(I)<>INT(A(I)) THEN 560
 Variable:I -> .
 Variable:A(.) -> .
 Variable:I -> .
 Variable:A(.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:560
610 NEXT I
 Variable:I -> .
620 PRINT "DO YOU WANT TO MOVE FIRST";
 TextValue:"DO YOU WANT TO MOVE FIRST"
 CarriageControl:;
630 INPUT Q9$
 Variable:Q9$ -> $
640 IF Q9$="YES" THEN 1450
 Variable:Q9$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1450
650 IF Q9$="yes" THEN 1450
 Variable:Q9$ -> $
 TextValue:"yes"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1450
660 IF Q9$="NO" THEN 700
 Variable:Q9$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:700
670 IF Q9$="no" THEN 700
 Variable:Q9$ -> $
 TextValue:"no"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:700
680 PRINT "PLEASE ANSWER YES OR NO."
 TextValue:"PLEASE ANSWER YES OR NO."
 CarriageControl:NL
690 GOTO 630
 LineNumber:630
700 IF W=1 THEN 940
 Variable:W -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:940
710 LET C=0
 Variable:C -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
720 FOR I=1 TO N
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
730 IF A(I)=0 THEN 770
 Variable:I -> .
 Variable:A(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:770
740 LET C=C+1
 Variable:C -> .
 Variable:C -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
750 IF C=3 THEN 840
 Variable:C -> .
 NumericValue:3
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:840
760 LET D(C)=I
 Variable:C -> .
 Variable:D(.) -> .
 Variable:I -> .
 AssignmentOperator:= . -> .
770 NEXT I
 Variable:I -> .
780 IF C=2 THEN 920
 Variable:C -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:920
790 IF A(D(1))>1 THEN 820
 NumericValue:1
 Variable:D(.) -> .
 Variable:A(.) -> .
 NumericValue:1
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:820
800 PRINT "MACHINE LOSES"
 TextValue:"MACHINE LOSES"
 CarriageControl:NL
810 GOTO 1640
 LineNumber:1640
820 PRINT "MACHINE WINS"
 TextValue:"MACHINE WINS"
 CarriageControl:NL
830 GOTO 1640
 LineNumber:1640
840 LET C=0
 Variable:C -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
850 FOR I=1 TO N
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
860 IF A(I)>1 THEN 940
 Variable:I -> .
 Variable:A(.) -> .
 NumericValue:1
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:940
870 IF A(I)=0 THEN 890
 Variable:I -> .
 Variable:A(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:890
880 LET C=C+1
 Variable:C -> .
 Variable:C -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
890 NEXT I
 Variable:I -> .
900 IF C/2<>INT(C/2) THEN 800
 Variable:C -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 Variable:C -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:800
910 GOTO 940
 LineNumber:940
920 IF A(D(1))=1 THEN 820
 NumericValue:1
 Variable:D(.) -> .
 Variable:A(.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:820
930 IF A(D(2))=1 THEN 820
 NumericValue:2
 Variable:D(.) -> .
 Variable:A(.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:820
940 FOR I=1 TO N
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
950 LET E=A(I)
 Variable:E -> .
 Variable:I -> .
 Variable:A(.) -> .
 AssignmentOperator:= . -> .
960 FOR J=0 TO 10
 WARNING: FOR/NEXT nesting exceeds limit 3
 control: Variable:J -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:10"]
970 LET F=E/2
 Variable:F -> .
 Variable:E -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
980 LET B(I,J)=2*(F-INT(F))
 Variable:I -> .
 Variable:J -> .
 Variable:B(.,.) -> .
 NumericValue:2
 Variable:F -> .
 Variable:F -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
990 LET E=INT(F)
 Variable:E -> .
 Variable:F -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
1000 NEXT J
 Variable:J -> .
1010 NEXT I
 Variable:I -> .
1020 FOR J=10 TO 0 STEP -1
 control: Variable:J -> .
 start:   ["NumericValue:10"]
 end:     ["NumericValue:0"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
1030 LET C=0
 Variable:C -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1040 LET H=0
 Variable:H -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1050 FOR I=1 TO N
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
1060 IF B(I,J)=0 THEN 1110
 Variable:I -> .
 Variable:J -> .
 Variable:B(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1110
1070 LET C=C+1
 Variable:C -> .
 Variable:C -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1080 IF A(I)<=H THEN 1110
 Variable:I -> .
 Variable:A(.) -> .
 Variable:H -> .
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:1110
1090 LET H=A(I)
 Variable:H -> .
 Variable:I -> .
 Variable:A(.) -> .
 AssignmentOperator:= . -> .
1100 LET G=I
 Variable:G -> .
 Variable:I -> .
 AssignmentOperator:= . -> .
1110 NEXT I
 Variable:I -> .
1120 IF C/2<>INT(C/2) THEN 1190
 Variable:C -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 Variable:C -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1190
1130 NEXT J
 Variable:J -> .
1140 LET E=INT(N*RND(1)+1)
 Variable:E -> .
 Variable:N -> .
 NumericValue:1
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
1150 IF A(E)=0 THEN 1140
 Variable:E -> .
 Variable:A(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1140
1160 LET F=INT(A(E)*RND(1)+1)
 Variable:F -> .
 Variable:E -> .
 Variable:A(.) -> .
 NumericValue:1
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
1170 LET A(E)=A(E)-F
 Variable:E -> .
 Variable:A(.) -> .
 Variable:E -> .
 Variable:A(.) -> .
 Variable:F -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
1180 GOTO 1380
 LineNumber:1380
1190 LET A(G)=0
 Variable:G -> .
 Variable:A(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1200 FOR J=0 TO 10
 control: Variable:J -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:10"]
1210 LET B(G,J)=0
 Variable:G -> .
 Variable:J -> .
 Variable:B(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1220 LET C=0
 Variable:C -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1230 FOR I=1 TO N
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
1240 IF B(I,J)=0 THEN 1260
 Variable:I -> .
 Variable:J -> .
 Variable:B(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1260
1250 LET C=C+1
 Variable:C -> .
 Variable:C -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1260 NEXT I
 Variable:I -> .
1270 LET A(G)=A(G)+2*(C/2-INT(C/2))*2^J
 Variable:G -> .
 Variable:A(.) -> .
 Variable:G -> .
 Variable:A(.) -> .
 NumericValue:2
 Variable:C -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 Variable:C -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:2
 Variable:J -> .
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1280 NEXT J
 Variable:J -> .
1290 IF W=1 THEN 1380
 Variable:W -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1380
1300 LET C=0
 Variable:C -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1310 FOR I=1 TO N
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
1320 IF A(I)>1 THEN 1380
 Variable:I -> .
 Variable:A(.) -> .
 NumericValue:1
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1380
1330 IF A(I)=0 THEN 1350
 Variable:I -> .
 Variable:A(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1350
1340 LET C=C+1
 Variable:C -> .
 Variable:C -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1350 NEXT I
 Variable:I -> .
1360 IF C/2<>INT(C/2) THEN 1380
 Variable:C -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 Variable:C -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1380
1370 LET A(G)=1-A(G)
 Variable:G -> .
 Variable:A(.) -> .
 NumericValue:1
 Variable:G -> .
 Variable:A(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
1380 PRINT "PILE  SIZE"
 TextValue:"PILE  SIZE"
 CarriageControl:NL
1390 FOR I=1 TO N
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
1400 PRINT I;A(I)
 Variable:I -> .
 CarriageControl:;
 Variable:I -> .
 Variable:A(.) -> .
 CarriageControl:NL
1410 NEXT I
 Variable:I -> .
1420 IF W=2 THEN 1450
 Variable:W -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1450
1430 GOSUB 1570
 LineNumber:1570
1440 IF Z=1 THEN 820
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:820
1450 PRINT "YOUR MOVE - PILE, NUMBER TO BE REMOVED";
 TextValue:"YOUR MOVE - PILE, NUMBER TO BE REMOVED"
 CarriageControl:;
1460 INPUT X,Y
 Variable:X -> .
 Variable:Y -> .
1470 IF X>N THEN 1450
 Variable:X -> .
 Variable:N -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1450
1480 IF X<1 THEN 1450
 Variable:X -> .
 NumericValue:1
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:1450
1490 IF X<>INT(X) THEN 1450
 Variable:X -> .
 Variable:X -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1450
1500 IF Y>A(X) THEN 1450
 Variable:Y -> .
 Variable:X -> .
 Variable:A(.) -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1450
1510 IF Y<1 THEN 1450
 Variable:Y -> .
 NumericValue:1
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:1450
1520 IF Y<>INT(Y) THEN 1450
 Variable:Y -> .
 Variable:Y -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1450
1530 LET A(X)=A(X)-Y
 Variable:X -> .
 Variable:A(.) -> .
 Variable:X -> .
 Variable:A(.) -> .
 Variable:Y -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
1540 GOSUB 1570
 LineNumber:1570
1550 IF Z=1 THEN 800
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:800
1560 GOTO 700
 LineNumber:700
1570 LET Z=0
 Variable:Z -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1580 FOR I=1 TO N
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
1590 IF A(I)=0 THEN 1610
 Variable:I -> .
 Variable:A(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1610
1600 RETURN
 
1610 NEXT I
 Variable:I -> .
1620 LET Z=1
 Variable:Z -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
1630 RETURN
 
1640 PRINT "do you want to play another game";
 TextValue:"do you want to play another game"
 CarriageControl:;
1650 INPUT Q9$
 Variable:Q9$ -> $
1660 IF Q9$="YES" THEN 1720
 Variable:Q9$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1720
1670 IF Q9$="yes" THEN 1720
 Variable:Q9$ -> $
 TextValue:"yes"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1720
1680 IF Q9$="NO" THEN 1730
 Variable:Q9$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1730
1690 IF Q9$="no" THEN 1730
 Variable:Q9$ -> $
 TextValue:"no"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1730
1700 PRINT "PLEASE.  YES OR NO."
 TextValue:"PLEASE.  YES OR NO."
 CarriageControl:NL
1710 GOTO 1650 
 LineNumber:1650
1720 GOTO 440
 LineNumber:440
1730 END
 

