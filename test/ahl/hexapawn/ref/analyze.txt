Statistics:

Number of lines: 174
Number of valid statements: 193
Number of comments: 7
Number of executable statements: 174

Complexity:

Comment density: 0.036
Comprehension effort: 713
McCabe complexity: 55
Halstead complexity:
 length: 1528
 volume: 7829.417
 difficulty: 95.789
 effort: 749975.730
 language: 0.853
 intelligence: 81.736
 time: 694.422

(0 4) 1 PRINT TAB(32); "HEXAPAWN"
  Origs: 
  Dests: 2
(0 4) 2 PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 1
  Dests: 3
(0 2) 3 PRINT
(0 2)   PRINT
(0 2)   PRINT
  Origs: 2
  Dests: 4
(0 1) 4 REM  HEXAPAWN:  INTERPRETATION OF HEXAPAWN GAME AS PRESENTED IN
  Origs: 3
  Dests: 5
(0 1) 5 REM  MARTIN GARDNER'S "THE UNEXPECTED HANGING AND OTHER MATHEMATIC-
  Origs: 4
  Dests: 6
(0 1) 6 REM  AL DIVERSIONS", CHAPTER EIGHT:  A MATCHBOX GAME-LEARNING MACHINE
  Origs: 5
  Dests: 7
(0 1) 7 REM  ORIGINAL VERSION FOR H-P TIMESHARE SYSTEM BY R.A. KAAPKE 5/5/76
  Origs: 6
  Dests: 8
(0 1) 8 REM  INSTRUCTIONS BY JEFF DALTON
  Origs: 7
  Dests: 9
(0 1) 9 REM  CONVERSION TO MITS BASIC BY STEVE NORTH
  Origs: 8
  Dests: 10
(0 5) 10 DIM B(19, 9), M(19, 4), S(9), P$(3)
  Origs: 9
  Dests: 15
(0 3) 15 W = 0
(0 3)    L = 0
  Origs: 10
  Dests: 20
(0 32) 20 DEF FNR(X) = -3 * (X = 1) - (X = 3) - 4 * (X = 6) - 6 * (X = 4) - 7 * (X = 9) - 9 * (X = 7) + FNS(X)
  Origs: 15
  Dests: 25
(0 12) 25 DEF FNS(X) = -X * (X = 2 OR X = 5 OR X = 8)
  Origs: 20
  Dests: 30
(0 6) 30 DEF FNM(Y) = Y - INT(Y / 10) * 10
  Origs: 25
  Dests: 35
(0 3) 35 P$ = "X.O"
  Origs: 30
  Dests: 40
(1 3) 40 FOR I = 1 TO 19
(1 3)    FOR J = 1 TO 9
(1 2)    READ B(I, J)
(0 1)    NEXT J
(0 1)    NEXT I
  Origs: 35
  Dests: 45
(1 3) 45 FOR I = 1 TO 19
(1 3)    FOR J = 1 TO 4
(1 2)    READ M(I, J)
(0 1)    NEXT J
(0 1)    NEXT I
  Origs: 40
  Dests: 50
(0 2) 50 PRINT "INSTRUCTIONS (Y-N)";
  Origs: 45, 90
  Dests: 60
(1 2) 60 INPUT A$
  Origs: 50
  Dests: 70
(0 4) 70 A$ = LEFT$(A$, 1)
  Origs: 60
  Dests: 80
(1 4) 80 IF A$ = "Y" THEN 2000
  Origs: 70
  Dests: 90, 2000
(1 5) 90 IF A$ <> "N" THEN 50
  Origs: 80
  Dests: 50, 100
(0 3) 100 X = 0
(0 3)     Y = 0
  Origs: 90, 860, 2220
  Dests: 111
(0 3) 111 S(4) = 0
(0 3)     S(5) = 0
(0 3)     S(6) = 0
  Origs: 100
  Dests: 112
(0 4) 112 S(1) = -1
(0 4)     S(2) = -1
(0 4)     S(3) = -1
  Origs: 111
  Dests: 113
(0 3) 113 S(7) = 1
(0 3)     S(8) = 1
(0 3)     S(9) = 1
  Origs: 112
  Dests: 115
(0 2) 115 GOSUB 1000
  Origs: 113
  Dests: 120, 1000
(0 2) 120 PRINT "YOUR MOVE";
  Origs: 115, 124, 140, 710, 740, 760, 780
  Dests: 121
(2 3) 121 INPUT M1, M2
  Origs: 120
  Dests: 122
(1 21) 122 IF M1 = INT(M1) AND M2 = INT(M2) AND M1 > 0 AND M1 < 10 AND M2 > 0 AND M2 < 10 THEN 130
  Origs: 121
  Dests: 123, 130
(0 2) 123 PRINT "ILLEGAL CO-ORDINATES."
  Origs: 122
  Dests: 124
(0 3) 124 GOTO 120
  Origs: 123
  Dests: 120
(1 4) 130 IF S(M1) = 1 THEN 150
  Origs: 122
  Dests: 140, 150
(0 2) 140 PRINT "ILLEGAL MOVE."
(0 3)     GOTO 120
  Origs: 130, 150, 160, 170, 180, 185, 186
  Dests: 120
(1 5) 150 IF S(M2) = 1 THEN 140
  Origs: 130
  Dests: 140, 160
(1 13) 160 IF M2 - M1 <> -3 AND S(M2) <> -1 THEN 140
  Origs: 150
  Dests: 140, 170
(1 5) 170 IF M2 > M1 THEN 140
  Origs: 160
  Dests: 140, 180
(1 11) 180 IF M2 - M1 = -3 AND (S(M2) <> 0) THEN 140
  Origs: 170
  Dests: 140, 185
(1 8) 185 IF M2 - M1 < -4 THEN 140
  Origs: 180
  Dests: 140, 186
(1 8) 186 IF M1 = 7 AND M2 = 3 THEN 140
  Origs: 185
  Dests: 140, 190
(0 3) 190 S(M1) = 0
  Origs: 186
  Dests: 200
(0 3) 200 S(M2) = 1
  Origs: 190
  Dests: 205
(0 2) 205 GOSUB 1000
  Origs: 200
  Dests: 210, 1000
(1 10) 210 IF S(1) = 1 OR S(2) = 1 OR S(3) = 1 THEN 820
  Origs: 205
  Dests: 220, 820
(1 3) 220 FOR I = 1 TO 9
  Origs: 210
  Dests: 221
(1 6) 221 IF S(I) = -1 THEN 230
  Origs: 220
  Dests: 222, 230
(0 1) 222 NEXT I
  Origs: 221
  Dests: 223
(0 2) 223 GOTO 820
  Origs: 222
  Dests: 820
(1 3) 230 FOR I = 1 TO 9
  Origs: 221
  Dests: 240
(1 6) 240 IF S(I) <> -1 THEN 330
  Origs: 230
  Dests: 250, 330
(1 4) 250 IF S(I + 3) = 0 THEN 350
  Origs: 240
  Dests: 260, 350
(1 6) 260 IF FNR(I) = I THEN 320
  Origs: 250
  Dests: 270, 320
(1 4) 270 IF I > 3 THEN 300
  Origs: 260
  Dests: 280, 300
(1 4) 280 IF S(5) = 1 THEN 350
  Origs: 270
  Dests: 290, 350
(0 2) 290 GOTO 330
  Origs: 280
  Dests: 330
(1 4) 300 IF S(8) = 1 THEN 350
  Origs: 270
  Dests: 310, 350
(0 2) 310 GOTO 330
  Origs: 300
  Dests: 330
(1 7) 320 IF S(I + 2) = 1 OR S(I + 4) = 1 THEN 350
  Origs: 260
  Dests: 330, 350
(0 1) 330 NEXT I
  Origs: 240, 290, 310, 320
  Dests: 340
(0 2) 340 GOTO 820
  Origs: 330
  Dests: 820
(1 3) 350 FOR I = 1 TO 19
  Origs: 250, 280, 300, 320
  Dests: 360
(1 3) 360 FOR J = 1 TO 3
  Origs: 350
  Dests: 370
(1 5) 370 FOR K = 3 TO 1 STEP -1
  Origs: 360
  Dests: 380
(0 3) 380 T((J - 1) * 3 + K) = B(I, (J - 1) * 3 + 4 - K)
  Origs: 370
  Dests: 390
(0 1) 390 NEXT K
  Origs: 380
  Dests: 400
(0 1) 400 NEXT J
  Origs: 390
  Dests: 410
(1 3) 410 FOR J = 1 TO 9
  Origs: 400
  Dests: 420
(1 4) 420 IF S(J) <> B(I, J) THEN 460
  Origs: 410
  Dests: 430, 460
(0 1) 430 NEXT J
  Origs: 420
  Dests: 440
(0 3) 440 R = 0
  Origs: 430
  Dests: 450
(0 2) 450 GOTO 540
  Origs: 440
  Dests: 540
(1 3) 460 FOR J = 1 TO 9
  Origs: 420
  Dests: 470
(1 4) 470 IF S(J) <> T(J) THEN 510
  Origs: 460
  Dests: 480, 510
(0 1) 480 NEXT J
  Origs: 470
  Dests: 490
(0 3) 490 R = 1
  Origs: 480
  Dests: 500
(0 2) 500 GOTO 540
  Origs: 490
  Dests: 540
(0 1) 510 NEXT I
  Origs: 470
  Dests: 511
(0 1) 511 REM EMBER THE TERMINATION OF THIS LOOP IS IMPOSSIBLE
  Origs: 510
  Dests: 512
(0 2) 512 PRINT "ILLEGAL BOARD PATTERN."
  Origs: 511
  Dests: 530
(0 1) 530 STOP
  Origs: 512
  Dests: 
(0 3) 540 X = I
  Origs: 450, 500
  Dests: 550
(1 3) 550 FOR I = 1 TO 4
  Origs: 540
  Dests: 560
(1 4) 560 IF M(X, I) <> 0 THEN 600
  Origs: 550
  Dests: 570, 600
(0 1) 570 NEXT I
  Origs: 560
  Dests: 580
(0 2) 580 PRINT "I RESIGN."
  Origs: 570
  Dests: 590
(0 2) 590 GOTO 820
  Origs: 580
  Dests: 820
(0 4) 600 Y = INT(RND(1) * 4 + 1)
  Origs: 560, 601
  Dests: 601
(1 5) 601 IF M(X, Y) = 0 THEN 600
  Origs: 600
  Dests: 600, 610
(1 4) 610 IF R <> 0 THEN 630
  Origs: 601
  Dests: 620, 630
(0 7) 620 PRINT "I MOVE FROM "; STR$(INT(M(X, Y) / 10)); " TO "; STR$(FNM(M(X, Y)))
  Origs: 610
  Dests: 622
(0 3) 622 S(INT(M(X, Y) / 10)) = 0
  Origs: 620
  Dests: 623
(0 4) 623 S(FNM(M(X, Y))) = -1
  Origs: 622
  Dests: 624
(0 2) 624 GOTO 640
  Origs: 623
  Dests: 640
(0 5) 630 PRINT "I MOVE FROM "; STR$(FNR(INT(M(X, Y) / 10))); " TO ";
  Origs: 610
  Dests: 631
(0 3) 631 PRINT STR$(FNR(FNM(M(X, Y))))
  Origs: 630
  Dests: 632
(0 3) 632 S(FNR(INT(M(X, Y) / 10))) = 0
  Origs: 631
  Dests: 633
(0 4) 633 S(FNR(FNM(M(X, Y)))) = -1
  Origs: 632
  Dests: 640
(0 2) 640 GOSUB 1000
  Origs: 624, 633
  Dests: 641, 1000
(1 16) 641 IF S(7) = -1 OR S(8) = -1 OR S(9) = -1 THEN 870
  Origs: 640
  Dests: 650, 870
(1 3) 650 FOR I = 1 TO 9
  Origs: 641
  Dests: 660
(1 4) 660 IF S(I) = 1 THEN 690
  Origs: 650
  Dests: 670, 690
(0 1) 670 NEXT I
  Origs: 660
  Dests: 680
(0 2) 680 GOTO 870
  Origs: 670
  Dests: 870
(1 3) 690 FOR I = 1 TO 9
  Origs: 660
  Dests: 700
(1 4) 700 IF S(I) <> 1 THEN 790
  Origs: 690
  Dests: 710, 790
(1 5) 710 IF S(I - 3) = 0 THEN 120
  Origs: 700
  Dests: 120, 720
(1 6) 720 IF FNR(I) = I THEN 780
  Origs: 710
  Dests: 730, 780
(1 4) 730 IF I < 7 THEN 760
  Origs: 720
  Dests: 740, 760
(1 7) 740 IF S(5) = -1 THEN 120
  Origs: 730
  Dests: 120, 750
(0 2) 750 GOTO 790
  Origs: 740
  Dests: 790
(1 7) 760 IF S(2) = -1 THEN 120
  Origs: 730
  Dests: 120, 770
(0 2) 770 GOTO 790
  Origs: 760
  Dests: 790
(1 12) 780 IF S(I - 2) = -1 OR S(I - 4) = -1 THEN 120
  Origs: 720
  Dests: 120, 790
(0 1) 790 NEXT I
  Origs: 700, 750, 770, 780
  Dests: 800
(0 2) 800 PRINT "YOU CAN'T MOVE, SO ";
  Origs: 790
  Dests: 810
(0 2) 810 GOTO 870
  Origs: 800
  Dests: 870
(0 2) 820 PRINT "YOU WIN."
  Origs: 210, 223, 340, 590
  Dests: 830
(0 3) 830 M(X, Y) = 0
  Origs: 820
  Dests: 840
(0 4) 840 L = L + 1
  Origs: 830
  Dests: 850
(0 9) 850 PRINT "I HAVE WON"; W; "AND YOU"; L; "OUT OF"; L + W; "GAMES."
  Origs: 840, 890
  Dests: 851
(0 2) 851 PRINT
  Origs: 850
  Dests: 860
(0 3) 860 GOTO 100
  Origs: 851
  Dests: 100
(0 2) 870 PRINT "I WIN."
  Origs: 641, 680, 810
  Dests: 880
(0 4) 880 W = W + 1
  Origs: 870
  Dests: 890
(0 3) 890 GOTO 850
  Origs: 880
  Dests: 850
(0 8) 900 DATA -1, -1, -1, 1, 0, 0, 0, 1, 1, -1, -1, -1, 0, 1, 0, 1, 0, 1
  Origs: 
  Dests: 905
(0 8) 905 DATA -1, 0, -1, -1, 1, 0, 0, 0, 1, 0, -1, -1, 1, -1, 0, 0, 0, 1
  Origs: 900
  Dests: 910
(0 6) 910 DATA -1, 0, -1, 1, 1, 0, 0, 1, 0, -1, -1, 0, 1, 0, 1, 0, 0, 1
  Origs: 905
  Dests: 915
(0 8) 915 DATA 0, -1, -1, 0, -1, 1, 1, 0, 0, 0, -1, -1, -1, 1, 1, 1, 0, 0
  Origs: 910
  Dests: 920
(0 7) 920 DATA -1, 0, -1, -1, 0, 1, 0, 1, 0, 0, -1, -1, 0, 1, 0, 0, 0, 1
  Origs: 915
  Dests: 925
(0 6) 925 DATA 0, -1, -1, 0, 1, 0, 1, 0, 0, -1, 0, -1, 1, 0, 0, 0, 0, 1
  Origs: 920
  Dests: 930
(0 6) 930 DATA 0, 0, -1, -1, -1, 1, 0, 0, 0, -1, 0, 0, 1, 1, 1, 0, 0, 0
  Origs: 925
  Dests: 935
(0 7) 935 DATA 0, -1, 0, -1, 1, 1, 0, 0, 0, -1, 0, 0, -1, -1, 1, 0, 0, 0
  Origs: 930
  Dests: 940
(0 6) 940 DATA 0, 0, -1, -1, 1, 0, 0, 0, 0, 0, -1, 0, 1, -1, 0, 0, 0, 0
  Origs: 935
  Dests: 945
(0 4) 945 DATA -1, 0, 0, -1, 1, 0, 0, 0, 0
  Origs: 940
  Dests: 950
(0 2) 950 DATA 24, 25, 36, 0, 14, 15, 36, 0, 15, 35, 36, 47, 36, 58, 59, 0
  Origs: 945
  Dests: 955
(0 2) 955 DATA 15, 35, 36, 0, 24, 25, 26, 0, 26, 57, 58, 0
  Origs: 950
  Dests: 960
(0 2) 960 DATA 26, 35, 0, 0, 47, 48, 0, 0, 35, 36, 0, 0, 35, 36, 0, 0
  Origs: 955
  Dests: 965
(0 2) 965 DATA 36, 0, 0, 0, 47, 58, 0, 0, 15, 0, 0, 0
  Origs: 960
  Dests: 970
(0 2) 970 DATA 26, 47, 0, 0, 47, 58, 0, 0, 35, 36, 47, 0, 28, 58, 0, 0, 15, 47, 0, 0
  Origs: 965
  Dests: 1000
(0 2) 1000 PRINT
  Origs: 115, 205, 640, 970
  Dests: 1010
(1 3) 1010 FOR I = 1 TO 3
  Origs: 1000
  Dests: 1020
(1 3) 1020 FOR J = 1 TO 3
  Origs: 1010
  Dests: 1030
(0 5) 1030 PRINT TAB(10); MID$(P$, S((I - 1) * 3 + J) + 2, 1);
  Origs: 1020
  Dests: 1040
(0 1) 1040 NEXT J
  Origs: 1030
  Dests: 1050
(0 2) 1050 PRINT
  Origs: 1040
  Dests: 1060
(0 1) 1060 NEXT I
  Origs: 1050
  Dests: 1070
(0 2) 1070 PRINT
  Origs: 1060
  Dests: 1080
(0 1) 1080 RETURN
  Origs: 1070
  Dests: 
(0 2) 2000 PRINT
(0 2)      PRINT "THIS PROGRAM PLAYS THE GAME OF HEXAPAWN."
  Origs: 80
  Dests: 2010
(0 2) 2010 PRINT "HEXAPAWN IS PLAYED WITH CHESS PAWNS ON A 3 BY 3 BOARD."
  Origs: 2000
  Dests: 2020
(0 2) 2020 PRINT "THE PAWNS ARE MOVED AS IN CHESS - ONE SPACE FORWARD TO"
  Origs: 2010
  Dests: 2030
(0 2) 2030 PRINT "AN EMPTY SPACE OR ONE SPACE FORWARD AND DIAGONALLY TO"
  Origs: 2020
  Dests: 2040
(0 2) 2040 PRINT "CAPTURE AN OPPOSING MAN.  ON THE BOARD, YOUR PAWNS"
  Origs: 2030
  Dests: 2050
(0 2) 2050 PRINT "ARE 'O', THE COMPUTER'S PAWNS ARE 'X', AND EMPTY "
  Origs: 2040
  Dests: 2060
(0 2) 2060 PRINT "SQUARES ARE '.'.  TO ENTER A MOVE, TYPE THE NUMBER OF"
  Origs: 2050
  Dests: 2070
(0 2) 2070 PRINT "THE SQUARE YOU ARE MOVING FROM, FOLLOWED BY THE NUMBER"
  Origs: 2060
  Dests: 2080
(0 2) 2080 PRINT "OF THE SQUARE YOU WILL MOVE TO.  THE NUMBERS MUST BE"
  Origs: 2070
  Dests: 2090
(0 2) 2090 PRINT "SEPERATED BY A COMMA."
(0 2)      PRINT
  Origs: 2080
  Dests: 2100
(0 2) 2100 PRINT "THE COMPUTER STARTS A SERIES OF GAMES KNOWING ONLY WHEN"
  Origs: 2090
  Dests: 2105
(0 2) 2105 PRINT "THE GAME IS WON (A DRAW IS IMPOSSIBLE) AND HOW TO MOVE."
  Origs: 2100
  Dests: 2110
(0 2) 2110 PRINT "IT HAS NO STRATEGY AT FIRST AND JUST MOVES RANDOMLY."
  Origs: 2105
  Dests: 2120
(0 2) 2120 PRINT "HOWEVER, IT LEARNS FROM EACH GAME.  THUS, WINNING BECOMES"
  Origs: 2110
  Dests: 2130
(0 2) 2130 PRINT "MORE AND MORE DIFFICULT.  ALSO, TO HELP OFFSET YOUR"
  Origs: 2120
  Dests: 2140
(0 2) 2140 PRINT "INITIAL ADVANTAGE, YOU WILL NOT BE TOLD HOW TO WIN THE"
  Origs: 2130
  Dests: 2150
(0 2) 2150 PRINT "GAME BUT MUST LEARN THIS BY PLAYING."
  Origs: 2140
  Dests: 2160
(0 2) 2160 PRINT
(0 2)      PRINT "THE NUMBERING OF THE BOARD IS AS FOLLOWS:"
  Origs: 2150
  Dests: 2170
(0 4) 2170 PRINT TAB(10); "123"
(0 4)      PRINT TAB(10); "456"
(0 4)      PRINT TAB(10); "789"
  Origs: 2160
  Dests: 2180
(0 2) 2180 PRINT
(0 2)      PRINT "FOR EXAMPLE, TO MOVE YOUR RIGHTMOST PAWN FORWARD,"
  Origs: 2170
  Dests: 2190
(0 2) 2190 PRINT "YOU WOULD TYPE 9,6 IN RESPONSE TO THE QUESTION"
  Origs: 2180
  Dests: 2200
(0 2) 2200 PRINT "'YOUR MOVE ?'.  SINCE I'M A GOOD SPORT, YOU'LL ALWAYS"
  Origs: 2190
  Dests: 2210
(0 2) 2210 PRINT "GO FIRST."
(0 2)      PRINT
  Origs: 2200
  Dests: 2220
(0 3) 2220 GOTO 100
  Origs: 2210
  Dests: 100
(0 1) 9999 END
  Origs: 
  Dests: 

Unreachable code:

All executable lines are reachable.

