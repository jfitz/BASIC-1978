10 PRINT TAB(34);"CUBE"
 NumericValue:34
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"CUBE"
 CarriageControl:NL
20 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericValue:15
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
30 PRINT : PRINT : PRINT
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
100 PRINT "DO YOU WANT TO SEE THE INSTRUCTIONS? (YES--1,NO--0)"
 TextValue:"DO YOU WANT TO SEE THE INSTRUCTIONS? (YES--1,NO--0)"
 CarriageControl:NL
110 INPUT B7
 Variable:B7 -> .
120 IF B7=0 THEN 370
 Variable:B7 -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:370
130 PRINT"THIS IS A GAME IN WHICH YOU WILL BE PLAYING AGAINST THE"
 TextValue:"THIS IS A GAME IN WHICH YOU WILL BE PLAYING AGAINST THE"
 CarriageControl:NL
140 PRINT"RANDOM DECISION OF THE COMPUTER. THE FIELD OF PLAY IS A"
 TextValue:"RANDOM DECISION OF THE COMPUTER. THE FIELD OF PLAY IS A"
 CarriageControl:NL
150 PRINT"CUBE OF SIDE 3. ANY OF THE 27 LOCATIONS CAN BE DESIGNATED"
 TextValue:"CUBE OF SIDE 3. ANY OF THE 27 LOCATIONS CAN BE DESIGNATED"
 CarriageControl:NL
160 PRINT"BY INPUTING THREE NUMBERS SUCH AS 2,3,1. AT THE START,"
 TextValue:"BY INPUTING THREE NUMBERS SUCH AS 2,3,1. AT THE START,"
 CarriageControl:NL
170 PRINT"YOU ARE AUTOMATICALLY AT LOCATION 1,1,1. THE OBJECT OF"
 TextValue:"YOU ARE AUTOMATICALLY AT LOCATION 1,1,1. THE OBJECT OF"
 CarriageControl:NL
180 PRINT"THE GAME IS TO GET TO LOCATION 3,3,3. ONE MINOR DETAIL:"
 TextValue:"THE GAME IS TO GET TO LOCATION 3,3,3. ONE MINOR DETAIL:"
 CarriageControl:NL
190 PRINT"THE COMPUTER WILL PICK, AT RANDOM, 5 LOCATIONS AT WHICH"
 TextValue:"THE COMPUTER WILL PICK, AT RANDOM, 5 LOCATIONS AT WHICH"
 CarriageControl:NL
200 PRINT"IT WILL PLANT LAND MINES. IF YOU HIT ONE OF THESE LOCATIONS"
 TextValue:"IT WILL PLANT LAND MINES. IF YOU HIT ONE OF THESE LOCATIONS"
 CarriageControl:NL
210 PRINT"YOU LOSE. ONE OTHER DETAIL: YOU MAY MOVE ONLY ONE SPACE "
 TextValue:"YOU LOSE. ONE OTHER DETAIL: YOU MAY MOVE ONLY ONE SPACE "
 CarriageControl:NL
220 PRINT"IN ONE DIRECTION EACH MOVE. FOR  EXAMPLE: FROM 1,1,2 YOU"
 TextValue:"IN ONE DIRECTION EACH MOVE. FOR  EXAMPLE: FROM 1,1,2 YOU"
 CarriageControl:NL
230 PRINT"MAY MOVE TO 2,1,2 OR 1,1,3. YOU MAY NOT CHANGE"
 TextValue:"MAY MOVE TO 2,1,2 OR 1,1,3. YOU MAY NOT CHANGE"
 CarriageControl:NL
240 PRINT"TWO OF THE NUMBERS ON THE SAME MOVE. IF YOU MAKE AN ILLEGAL"
 TextValue:"TWO OF THE NUMBERS ON THE SAME MOVE. IF YOU MAKE AN ILLEGAL"
 CarriageControl:NL
250 PRINT"MOVE, YOU LOSE AND THE COMPUTER TAKES THE MONEY YOU MAY"
 TextValue:"MOVE, YOU LOSE AND THE COMPUTER TAKES THE MONEY YOU MAY"
 CarriageControl:NL
260 PRINT"HAVE BET ON THAT ROUND."
 TextValue:"HAVE BET ON THAT ROUND."
 CarriageControl:NL
270 PRINT
 CarriageControl:NL
280 PRINT
 CarriageControl:NL
290 PRINT"ALL YES OR NO QUESTIONS WILL BE ANSWERED BY A 1 FOR YES"
 TextValue:"ALL YES OR NO QUESTIONS WILL BE ANSWERED BY A 1 FOR YES"
 CarriageControl:NL
300 PRINT"OR A 0 (ZERO) FOR NO."
 TextValue:"OR A 0 (ZERO) FOR NO."
 CarriageControl:NL
310 PRINT
 CarriageControl:NL
320 PRINT"WHEN STATING THE AMOUNT OF A WAGER, PRINT ONLY THE NUMBER"
 TextValue:"WHEN STATING THE AMOUNT OF A WAGER, PRINT ONLY THE NUMBER"
 CarriageControl:NL
330 PRINT"OF DOLLARS (EXAMPLE: 250)  YOU ARE AUTOMATICALLY STARTED WITH"
 TextValue:"OF DOLLARS (EXAMPLE: 250)  YOU ARE AUTOMATICALLY STARTED WITH"
 CarriageControl:NL
340 PRINT"500 DOLLARS IN YOUR ACCOUNT."
 TextValue:"500 DOLLARS IN YOUR ACCOUNT."
 CarriageControl:NL
350 PRINT
 CarriageControl:NL
360 PRINT "GOOD LUCK!"
 TextValue:"GOOD LUCK!"
 CarriageControl:NL
370 LET A1=500
 Variable:A1 -> .
 NumericValue:500
 AssignmentOperator:= =. -> .
380 LET A=INT(3*(RND(X)))
 Variable:A -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
390 IF A<>0 THEN 410
 Variable:A -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:410
400 LET A=3
 Variable:A -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
410 LET B=INT(3*(RND(X)))
 Variable:B -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
420 IF B<>0 THEN 440
 Variable:B -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:440
430 LET B=2
 Variable:B -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
440 LET C=INT(3*(RND(X)))
 Variable:C -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
450 IF C<>0 THEN 470
 Variable:C -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:470
460 LET C=3
 Variable:C -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
470 LET D=INT(3*(RND(X)))
 Variable:D -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
480 IF D<>0 THEN 500
 Variable:D -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:500
490 LET D=1
 Variable:D -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
500 LET E=INT(3*(RND(X)))
 Variable:E -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
510 IF E<>0 THEN 530
 Variable:E -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:530
520 LET E=3
 Variable:E -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
530 LET F=INT(3*(RND(X)))
 Variable:F -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
540 IF F<>0 THEN 560
 Variable:F -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:560
550 LET F=3
 Variable:F -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
560 LET G=INT(3*(RND(X)))
 Variable:G -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
570 IF G<>0 THEN 590
 Variable:G -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:590
580 LET G=3
 Variable:G -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
590 LET H=INT(3*(RND(X)))
 Variable:H -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
600 IF H<>0 THEN 620
 Variable:H -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:620
610 LET H=3
 Variable:H -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
620 LET I=INT(3*(RND(X)))
 Variable:I -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
630 IF I<>0 THEN 650
 Variable:I -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:650
640 LET I=2
 Variable:I -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
650 LET J=INT(3*(RND(X)))
 Variable:J -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
660 IF J<>0 THEN 680
 Variable:J -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:680
670 LET J=3
 Variable:J -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
680 LET K=INT(3*(RND(X)))
 Variable:K -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
690 IF K<>0 THEN 710
 Variable:K -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:710
700 LET K=2
 Variable:K -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
710 LET L=INT(3*(RND(X)))
 Variable:L -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
720 IF L<>0 THEN 740
 Variable:L -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:740
730 LET L=3
 Variable:L -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
740 LET M=INT(3*(RND(X)))
 Variable:M -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
750 IF M<>0 THEN 770
 Variable:M -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:770
760 LET M=3
 Variable:M -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
770 LET N=INT(3*(RND(X)))
 Variable:N -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
780 IF N<>0 THEN 800
 Variable:N -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:800
790 LET N=1
 Variable:N -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
800 LET O=INT (3*(RND(X)))
 Variable:O -> .
 NumericValue:3
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
810 IF O <>0 THEN 830
 Variable:O -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:830
820 LET O=3
 Variable:O -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
830 PRINT "WANT TO MAKE A WAGER?"
 TextValue:"WANT TO MAKE A WAGER?"
 CarriageControl:NL
840 INPUT Z
 Variable:Z -> .
850 IF Z=0 THEN 920
 Variable:Z -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:920
860 PRINT "HOW MUCH ";
 TextValue:"HOW MUCH "
 CarriageControl:;
870 INPUT Z1
 Variable:Z1 -> .
876 IF A1<Z1 THEN 1522
 Variable:A1 -> .
 Variable:Z1 -> .
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:1522
880 LET W=1
 Variable:W -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
890 LET X=1
 Variable:X -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
900 LET Y=1
 Variable:Y -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
910 PRINT
 CarriageControl:NL
920 PRINT "IT'S YOUR MOVE:  ";
 TextValue:"IT'S YOUR MOVE:  "
 CarriageControl:;
930 INPUT P,Q,R
 Variable:P -> .
 Variable:Q -> .
 Variable:R -> .
940 IF P>W+1 THEN 1030
 Variable:P -> .
 Variable:W -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1030
950 IF P=W+1 THEN 1000
 Variable:P -> .
 Variable:W -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1000
960 IF Q>X+1 THEN 1030
 Variable:Q -> .
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1030
970 IF Q=(X+1) THEN 1010
 Variable:Q -> .
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1010
980 IF R >(Y+1)  THEN 1030
 Variable:R -> .
 Variable:Y -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1030
990 GOTO 1050
 LineNumber:1050
1000 IF Q>= X+1 THEN 1030
 Variable:Q -> .
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:1030
1010 IF R>=Y+1 THEN 1030
 Variable:R -> .
 Variable:Y -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:1030
1020 GOTO 1050
 LineNumber:1050
1030 PRINT:PRINT "ILLEGAL MOVE. YOU LOSE."
 CarriageControl:NL
 TextValue:"ILLEGAL MOVE. YOU LOSE."
 CarriageControl:NL
1040 GOTO 1440
 LineNumber:1440
1050 LET W=P
 Variable:W -> .
 Variable:P -> .
 AssignmentOperator:= . -> .
1060 LET X=Q
 Variable:X -> .
 Variable:Q -> .
 AssignmentOperator:= . -> .
1070 LET Y=R
 Variable:Y -> .
 Variable:R -> .
 AssignmentOperator:= . -> .
1080 IF P=3 THEN 1100
 Variable:P -> .
 NumericValue:3
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1100
1090 GOTO 1130
 LineNumber:1130
1100 IF  Q=3 THEN 1120
 Variable:Q -> .
 NumericValue:3
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1120
1110 GOTO 1130
 LineNumber:1130
1120 IF R=3 THEN 1530
 Variable:R -> .
 NumericValue:3
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1530
1130 IF P=A THEN 1150
 Variable:P -> .
 Variable:A -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1150
1140 GOTO 1180
 LineNumber:1180
1150 IF Q=B THEN 1170
 Variable:Q -> .
 Variable:B -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1170
1160 GOTO 1180
 LineNumber:1180
1170 IF R=C THEN 1400
 Variable:R -> .
 Variable:C -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1400
1180 IF P=D THEN 1200
 Variable:P -> .
 Variable:D -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1200
1190 GOTO 1230
 LineNumber:1230
1200 IF Q=E THEN 1220
 Variable:Q -> .
 Variable:E -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1220
1210 GOTO 1230
 LineNumber:1230
1220 IF  R=F THEN 1400
 Variable:R -> .
 Variable:F -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1400
1230 IF P=G THEN 1250
 Variable:P -> .
 Variable:G -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1250
1240 GOTO 1280
 LineNumber:1280
1250 IF Q=H THEN 1270
 Variable:Q -> .
 Variable:H -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1270
1260 GOTO 1280
 LineNumber:1280
1270 IF R=I THEN 1400
 Variable:R -> .
 Variable:I -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1400
1280 IF P=J THEN 1300
 Variable:P -> .
 Variable:J -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1300
1290 GOTO 1330
 LineNumber:1330
1300 IF Q=K THEN 1320
 Variable:Q -> .
 Variable:K -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1320
1310 GOTO 1330
 LineNumber:1330
1320 IF R=L THEN 1440
 Variable:R -> .
 Variable:L -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1440
1330 IF P=M THEN 1350
 Variable:P -> .
 Variable:M -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1350
1340 GOTO 1380
 LineNumber:1380
1350 IF Q=N THEN 1370
 Variable:Q -> .
 Variable:N -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1370
1360 GOTO 1380
 LineNumber:1380
1370 IF R=O THEN 1400
 Variable:R -> .
 Variable:O -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1400
1380 PRINT "NEXT MOVE: ";
 TextValue:"NEXT MOVE: "
 CarriageControl:;
1390 GOTO 930 
 LineNumber:930
1400 PRINT"******BANG******"
 TextValue:"******BANG******"
 CarriageControl:NL
1410 PRINT "YOU LOSE!"
 TextValue:"YOU LOSE!"
 CarriageControl:NL
1420 PRINT
 CarriageControl:NL
1430 PRINT
 CarriageControl:NL
1440 IF   Z=0 THEN 1580
 Variable:Z -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1580
1450 PRINT 
 CarriageControl:NL
1460 LET Z2=A1-Z1
 Variable:Z2 -> .
 Variable:A1 -> .
 Variable:Z1 -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
1470 IF Z2>0 THEN 1500
 Variable:Z2 -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1500
1480 PRINT "YOU BUST."
 TextValue:"YOU BUST."
 CarriageControl:NL
1490 GOTO 1610
 LineNumber:1610
1500 PRINT " YOU NOW HAVE"; Z2; "DOLLARS."
 TextValue:" YOU NOW HAVE"
 CarriageControl:;
 Variable:Z2 -> .
 CarriageControl:;
 TextValue:"DOLLARS."
 CarriageControl:NL
1510 LET A1=Z2
 Variable:A1 -> .
 Variable:Z2 -> .
 AssignmentOperator:= . -> .
1520 GOTO 1580
 LineNumber:1580
1522 PRINT"TRIED TO FOOL ME; BET AGAIN";
 TextValue:"TRIED TO FOOL ME; BET AGAIN"
 CarriageControl:;
1525 GOTO 870
 LineNumber:870
1530 PRINT"CONGRATULATIONS!"
 TextValue:"CONGRATULATIONS!"
 CarriageControl:NL
1540 IF Z=0 THEN 1580
 Variable:Z -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1580
1550 LET Z2=A1+Z1
 Variable:Z2 -> .
 Variable:A1 -> .
 Variable:Z1 -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1560 PRINT "YOU NOW HAVE"; Z2;"DOLLARS."
 TextValue:"YOU NOW HAVE"
 CarriageControl:;
 Variable:Z2 -> .
 CarriageControl:;
 TextValue:"DOLLARS."
 CarriageControl:NL
1570 LET A1=Z2
 Variable:A1 -> .
 Variable:Z2 -> .
 AssignmentOperator:= . -> .
1580 PRINT"DO YOU WANT TO TRY AGAIN ";
 TextValue:"DO YOU WANT TO TRY AGAIN "
 CarriageControl:;
1590 INPUT S
 Variable:S -> .
1600 IF S=1 THEN 380
 Variable:S -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:380
1610 PRINT "TOUGH LUCK!"
 TextValue:"TOUGH LUCK!"
 CarriageControl:NL
1620 PRINT
 CarriageControl:NL
1630 PRINT "GOODBYE."
 TextValue:"GOODBYE."
 CarriageControl:NL
1640 END
 

