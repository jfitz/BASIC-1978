2 PRINT TAB(34);"LEM"
 NumericValue:34
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"LEM"
 CarriageControl:NL
4 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericValue:15
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
7 REM ROCKT2 IS AN INTERACTIVE GAME THAT SIMULATES A LUNAR
 Remark:ROCKT2 IS AN INTERACTIVE GAME THAT SIMULATES A LUNAR
8 REM LANDING IS SIMILAR TO THAT OF THE APOLLO PROGRAM.
 Remark:LANDING IS SIMILAR TO THAT OF THE APOLLO PROGRAM.
9 REM THERE IS ABSOLUTELY NO CHANCE INVOLVED
 Remark:THERE IS ABSOLUTELY NO CHANCE INVOLVED
10 Z$="GO"
 Variable:Z$ -> $
 TextValue:"GO"
 AssignmentOperator:= =$ -> $
15 B1=1
 Variable:B1 -> _
 NumericValue:1
 AssignmentOperator:= =_ -> _
20 M=17.95
 Variable:M -> _
 NumericValue:17.95
 AssignmentOperator:= =_ -> _
25 F1=5.25
 Variable:F1 -> _
 NumericValue:5.25
 AssignmentOperator:= =_ -> _
30 N=7.5
 Variable:N -> _
 NumericValue:7.5
 AssignmentOperator:= =_ -> _
35 R0=926
 Variable:R0 -> _
 NumericValue:926
 AssignmentOperator:= =_ -> _
40 V0=1.29
 Variable:V0 -> _
 NumericValue:1.29
 AssignmentOperator:= =_ -> _
45 T=0
 Variable:T -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
50 H0=60
 Variable:H0 -> _
 NumericValue:60
 AssignmentOperator:= =_ -> _
55 R=R0+H0
 Variable:R -> _
 Variable:R0 -> _
 Variable:H0 -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
60 A=-3.425
 Variable:A -> _
 NumericValue:3.425
 UnaryOperatorMinus:-(_) -> =_
 AssignmentOperator:= =_ -> _
65 R1=0
 Variable:R1 -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
70 A1=8.84361E-04
 Variable:A1 -> _
 NumericValue:8.84361E-04
 AssignmentOperator:= =_ -> _
75 R3=0
 Variable:R3 -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
80 A3=0
 Variable:A3 -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
85 M1=7.45
 Variable:M1 -> _
 NumericValue:7.45
 AssignmentOperator:= =_ -> _
90 M0=M1
 Variable:M0 -> _
 Variable:M1 -> _
 AssignmentOperator:= _ -> _
95 B=750
 Variable:B -> _
 NumericValue:750
 AssignmentOperator:= =_ -> _
100 T1=0
 Variable:T1 -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
105 F=0
 Variable:F -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
110 P=0
 Variable:P -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
115 N=1
 Variable:N -> _
 NumericValue:1
 AssignmentOperator:= =_ -> _
120 M2=0
 Variable:M2 -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
125 S=0
 Variable:S -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
130 C=0
 Variable:C -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
135 IF Z$="YES" THEN 1150
 Variable:Z$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1150
140 PRINT
 CarriageControl:NL
145 PRINT "LUNAR LANDING SIMULATION"
 TextValue:"LUNAR LANDING SIMULATION"
 CarriageControl:NL
150 PRINT
 CarriageControl:NL
155 PRINT "HAVE YOU FLOWN AN APOLLO/LEM MISSION BEFORE";
 TextValue:"HAVE YOU FLOWN AN APOLLO/LEM MISSION BEFORE"
 CarriageControl:;
160 PRINT " (YES OR NO)";
 TextValue:" (YES OR NO)"
 CarriageControl:;
165 INPUT Q$
 Variable:Q$ -> $
170 IF Q$="YES" THEN 190
 Variable:Q$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:190
175 IF Q$="NO" THEN 205
 Variable:Q$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:205
180 PRINT "JUST ANSWER THE QUESTION, PLEASE, ";
 TextValue:"JUST ANSWER THE QUESTION, PLEASE, "
 CarriageControl:;
185 GOTO 160
 LineNumber:160
190 PRINT
 CarriageControl:NL
195 PRINT "INPUT MEASUREMENT OPTION NUMBER";
 TextValue:"INPUT MEASUREMENT OPTION NUMBER"
 CarriageControl:;
200 GOTO 225
 LineNumber:225
205 PRINT
 CarriageControl:NL
210 PRINT "WHICH SYSTEM OF MEASUREMENT DO YOU PREFER?"
 TextValue:"WHICH SYSTEM OF MEASUREMENT DO YOU PREFER?"
 CarriageControl:NL
215 PRINT " 1=METRIC     0=ENGLISH"
 TextValue:" 1=METRIC     0=ENGLISH"
 CarriageControl:NL
220 PRINT "ENTER THE APPROPRIATE NUMBER";
 TextValue:"ENTER THE APPROPRIATE NUMBER"
 CarriageControl:;
225 INPUT K
 Variable:K -> _
230 PRINT
 CarriageControl:NL
235 IF K=0 THEN 280
 Variable:K -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:280
240 IF K=1 THEN 250
 Variable:K -> _
 NumericValue:1
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:250
245 GOTO 220
 LineNumber:220
250 Z=1852.8
 Variable:Z -> _
 NumericValue:1852.8
 AssignmentOperator:= =_ -> _
255 M$="METERS"
 Variable:M$ -> $
 TextValue:"METERS"
 AssignmentOperator:= =$ -> $
260 G3=3.6
 Variable:G3 -> _
 NumericValue:3.6
 AssignmentOperator:= =_ -> _
265 N$=" KILOMETERS"
 Variable:N$ -> $
 TextValue:" KILOMETERS"
 AssignmentOperator:= =$ -> $
270 G5=1000
 Variable:G5 -> _
 NumericValue:1000
 AssignmentOperator:= =_ -> _
275 GOTO 305
 LineNumber:305
280 Z=6080
 Variable:Z -> _
 NumericValue:6080
 AssignmentOperator:= =_ -> _
285 M$="FEET"
 Variable:M$ -> $
 TextValue:"FEET"
 AssignmentOperator:= =$ -> $
290 G3=.592
 Variable:G3 -> _
 NumericValue:.592
 AssignmentOperator:= =_ -> _
295 N$="N.MILES"
 Variable:N$ -> $
 TextValue:"N.MILES"
 AssignmentOperator:= =$ -> $
300 G5=Z
 Variable:G5 -> _
 Variable:Z -> _
 AssignmentOperator:= _ -> _
305 IF B1=3 THEN 670
 Variable:B1 -> _
 NumericValue:3
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:670
310 IF Q$="YES" THEN 485
 Variable:Q$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:485
315 PRINT
 CarriageControl:NL
320 PRINT "  YOU ARE ON A LUNAR LANDING MISSION.  AS THE PILOT OF"
 TextValue:"  YOU ARE ON A LUNAR LANDING MISSION.  AS THE PILOT OF"
 CarriageControl:NL
325 PRINT "THE LUNAR EXCURSION MODULE, YOU WILL BE EXPECTED TO"
 TextValue:"THE LUNAR EXCURSION MODULE, YOU WILL BE EXPECTED TO"
 CarriageControl:NL
330 PRINT "GIVE CERTAIN COMMANDS TO THE MODULE NAVIGATION SYSTEM."
 TextValue:"GIVE CERTAIN COMMANDS TO THE MODULE NAVIGATION SYSTEM."
 CarriageControl:NL
335 PRINT "THE ON-BOARD COMPUTER WILL GIVE A RUNNING ACCOUNT"
 TextValue:"THE ON-BOARD COMPUTER WILL GIVE A RUNNING ACCOUNT"
 CarriageControl:NL
340 PRINT "OF INFORMATION NEEDED TO NAVIGATE THE SHIP."
 TextValue:"OF INFORMATION NEEDED TO NAVIGATE THE SHIP."
 CarriageControl:NL
345 PRINT
 CarriageControl:NL
350 PRINT
 CarriageControl:NL
355 PRINT "THE ATTITUDE ANGLE CALLED FOR IS DESCRIBED AS FOLLOWS."
 TextValue:"THE ATTITUDE ANGLE CALLED FOR IS DESCRIBED AS FOLLOWS."
 CarriageControl:NL
360 PRINT "+ OR -180 DEGREES IS DIRECTLY AWAY FROM THE MOON"
 TextValue:"+ OR -180 DEGREES IS DIRECTLY AWAY FROM THE MOON"
 CarriageControl:NL
365 PRINT "-90 DEGREES IS ON A TANGENT IN THE DIRECTION OF ORBIT"
 TextValue:"-90 DEGREES IS ON A TANGENT IN THE DIRECTION OF ORBIT"
 CarriageControl:NL
370 PRINT "+90 DEGREES IS ON A TANGENT FROM THE DIRECTION OF ORBIT"
 TextValue:"+90 DEGREES IS ON A TANGENT FROM THE DIRECTION OF ORBIT"
 CarriageControl:NL
375 PRINT "0 (ZERO) DEGREES IS DIRECTLY TOWARD THE MOON"
 TextValue:"0 (ZERO) DEGREES IS DIRECTLY TOWARD THE MOON"
 CarriageControl:NL
380 PRINT
 CarriageControl:NL
385 PRINT TAB(30);"-180|+180"
 NumericValue:30
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"-180|+180"
 CarriageControl:NL
390 PRINT TAB(34);"^"
 NumericValue:34
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"^"
 CarriageControl:NL
395 PRINT TAB(27);"-90 < -+- > +90"
 NumericValue:27
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"-90 < -+- > +90"
 CarriageControl:NL
400 PRINT TAB(34);"!"
 NumericValue:34
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"!"
 CarriageControl:NL
405 PRINT TAB(34);"0"
 NumericValue:34
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"0"
 CarriageControl:NL
410 PRINT TAB(21);"<<<< DIRECTION OF ORBIT <<<<"
 NumericValue:21
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"<<<< DIRECTION OF ORBIT <<<<"
 CarriageControl:NL
415 PRINT
 CarriageControl:NL
420 PRINT TAB(20);"------ SURFACE OF MOON ------"
 NumericValue:20
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"------ SURFACE OF MOON ------"
 CarriageControl:NL
425 PRINT
 CarriageControl:NL
430 PRINT
 CarriageControl:NL
435 PRINT "ALL ANGLES BETWEEN -180 AND +180 DEGREES ARE ACCEPTED."
 TextValue:"ALL ANGLES BETWEEN -180 AND +180 DEGREES ARE ACCEPTED."
 CarriageControl:NL
440 PRINT
 CarriageControl:NL
445 PRINT "1 FUEL UNIT = 1 SEC. AT MAX THRUST"
 TextValue:"1 FUEL UNIT = 1 SEC. AT MAX THRUST"
 CarriageControl:NL
450 PRINT "ANY DISCREPANCIES ARE ACCOUNTED FOR IN THE USE OF FUEL"
 TextValue:"ANY DISCREPANCIES ARE ACCOUNTED FOR IN THE USE OF FUEL"
 CarriageControl:NL
455 PRINT "FOR AN ATTITUDE CHANGE."
 TextValue:"FOR AN ATTITUDE CHANGE."
 CarriageControl:NL
460 PRINT "AVAILABLE ENGINE POWER: 0 (ZERO) AND ANY VALUE BETWEEN"
 TextValue:"AVAILABLE ENGINE POWER: 0 (ZERO) AND ANY VALUE BETWEEN"
 CarriageControl:NL
465 PRINT "10 AND 100 PERCENT."
 TextValue:"10 AND 100 PERCENT."
 CarriageControl:NL
470 PRINT
 CarriageControl:NL
475 PRINT"NEGATIVE THRUST OR TIME IS PROHIBITED."
 TextValue:"NEGATIVE THRUST OR TIME IS PROHIBITED."
 CarriageControl:NL
480 PRINT
 CarriageControl:NL
485 PRINT
 CarriageControl:NL
490 PRINT "INPUT: TIME INTERVAL IN SECONDS ------ (T)"
 TextValue:"INPUT: TIME INTERVAL IN SECONDS ------ (T)"
 CarriageControl:NL
495 PRINT "       PERCENTAGE OF THRUST ---------- (P)"
 TextValue:"       PERCENTAGE OF THRUST ---------- (P)"
 CarriageControl:NL
500 PRINT "       ATTITUDE ANGLE IN DEGREES ----- (A)"
 TextValue:"       ATTITUDE ANGLE IN DEGREES ----- (A)"
 CarriageControl:NL
505 PRINT
 CarriageControl:NL
510 IF Q$="YES" THEN 535
 Variable:Q$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:535
515 PRINT "FOR EXAMPLE:"
 TextValue:"FOR EXAMPLE:"
 CarriageControl:NL
520 PRINT "T,P,A? 10,65,-60"
 TextValue:"T,P,A? 10,65,-60"
 CarriageControl:NL
525 PRINT "TO ABORT THE MISSION AT ANY TIME, ENTER 0,0,0"
 TextValue:"TO ABORT THE MISSION AT ANY TIME, ENTER 0,0,0"
 CarriageControl:NL
530 PRINT
 CarriageControl:NL
535 PRINT "OUTPUT: TOTAL TIME IN ELAPSED SECONDS"
 TextValue:"OUTPUT: TOTAL TIME IN ELAPSED SECONDS"
 CarriageControl:NL
540 PRINT "        HEIGHT IN ";M$
 TextValue:"        HEIGHT IN "
 CarriageControl:;
 Variable:M$ -> $
 CarriageControl:NL
545 PRINT "        DISTANCE FROM LANDING SITE IN ";M$
 TextValue:"        DISTANCE FROM LANDING SITE IN "
 CarriageControl:;
 Variable:M$ -> $
 CarriageControl:NL
550 PRINT "        VERTICAL VELOCITY IN ";M$;"/SECOND"
 TextValue:"        VERTICAL VELOCITY IN "
 CarriageControl:;
 Variable:M$ -> $
 CarriageControl:;
 TextValue:"/SECOND"
 CarriageControl:NL
555 PRINT "        HORIZONTAL VELOCITY IN ";M$;"/SECOND"
 TextValue:"        HORIZONTAL VELOCITY IN "
 CarriageControl:;
 Variable:M$ -> $
 CarriageControl:;
 TextValue:"/SECOND"
 CarriageControl:NL
560 PRINT "        FUEL UNITS REMAINING"
 TextValue:"        FUEL UNITS REMAINING"
 CarriageControl:NL
565 PRINT
 CarriageControl:NL
570 GOTO 670
 LineNumber:670
575 PRINT
 CarriageControl:NL
580 PRINT "T,P,A";
 TextValue:"T,P,A"
 CarriageControl:;
585 INPUT T1,F,P
 Variable:T1 -> _
 Variable:F -> _
 Variable:P -> _
590 F=F/100
 Variable:F -> _
 Variable:F -> _
 NumericValue:100
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
595 IF T1<0 THEN 905
 Variable:T1 -> _
 NumericValue:0
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:905
600 IF T1=0 THEN 1090
 Variable:T1 -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1090
605 IF ABS(F-.05)>1 THEN 945
 Variable:F -> _
 NumericValue:.05
 BinaryOperatorMinus:-(_,_) -> _
 FunctionAbs:ABS(_) -> _
 NumericValue:1
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:945
610 IF ABS(F-.05)<.05 THEN 945
 Variable:F -> _
 NumericValue:.05
 BinaryOperatorMinus:-(_,_) -> _
 FunctionAbs:ABS(_) -> _
 NumericValue:.05
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:945
615 IF ABS(P)>180 THEN 925
 Variable:P -> _
 FunctionAbs:ABS(_) -> _
 NumericValue:180
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:925
620 N=20
 Variable:N -> _
 NumericValue:20
 AssignmentOperator:= =_ -> _
625 IF T1<400 THEN 635
 Variable:T1 -> _
 NumericValue:400
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:635
630 N=T1/20
 Variable:N -> _
 Variable:T1 -> _
 NumericValue:20
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
635 T1=T1/N
 Variable:T1 -> _
 Variable:T1 -> _
 Variable:N -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
640 P=P*3.14159/180
 Variable:P -> _
 Variable:P -> _
 NumericValue:3.14159
 BinaryOperatorMultiply:*(_,_) -> _
 NumericValue:180
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
645 S=SIN(P)
 Variable:S -> _
 Variable:P -> _
 FunctionSin:SIN(_) -> _
 AssignmentOperator:= _ -> _
650 C=COS(P)
 Variable:C -> _
 Variable:P -> _
 FunctionCos:COS(_) -> _
 AssignmentOperator:= _ -> _
655 M2=M0*T1*F/B
 Variable:M2 -> _
 Variable:M0 -> _
 Variable:T1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:F -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:B -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
660 R3=-.5*R0*((V0/R)^2)+R*A1*A1
 Variable:R3 -> _
 NumericValue:.5
 UnaryOperatorMinus:-(_) -> =_
 Variable:R0 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:V0 -> _
 Variable:R -> _
 BinaryOperatorDivide:/(_,_) -> _
 NumericValue:2
 BinaryOperatorPower:^(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:R -> _
 Variable:A1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:A1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
665 A3=-2*R1*A1/R
 Variable:A3 -> _
 NumericValue:2
 UnaryOperatorMinus:-(_) -> =_
 Variable:R1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:A1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:R -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
670 FOR I=1 TO N
 WARNING: FORNEXT length exceeds limit 40
 control: Variable:I -> _
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> _"]
675 IF M1=0 THEN 715
 Variable:M1 -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:715
680 M1=M1-M2
 Variable:M1 -> _
 Variable:M1 -> _
 Variable:M2 -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
685 IF M1>0 THEN 725
 Variable:M1 -> _
 NumericValue:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:725
690 F=F*(1+M1/M2)
 Variable:F -> _
 Variable:F -> _
 NumericValue:1
 Variable:M1 -> _
 Variable:M2 -> _
 BinaryOperatorDivide:/(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 AssignmentOperator:= _ -> _
695 M2=M1+M2
 Variable:M2 -> _
 Variable:M1 -> _
 Variable:M2 -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
700 PRINT "YOU ARE OUT OF FUEL."
 TextValue:"YOU ARE OUT OF FUEL."
 CarriageControl:NL
705 M1=0
 Variable:M1 -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
710 GOTO 725
 LineNumber:725
715 F=0
 Variable:F -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
720 M2=0
 Variable:M2 -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
725 M=M-.5*M2
 Variable:M -> _
 Variable:M -> _
 NumericValue:.5
 Variable:M2 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
730 R4=R3
 Variable:R4 -> _
 Variable:R3 -> _
 AssignmentOperator:= _ -> _
735 R3=-.5*R0*((V0/R)^2)+R*A1*A1
 Variable:R3 -> _
 NumericValue:.5
 UnaryOperatorMinus:-(_) -> =_
 Variable:R0 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:V0 -> _
 Variable:R -> _
 BinaryOperatorDivide:/(_,_) -> _
 NumericValue:2
 BinaryOperatorPower:^(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:R -> _
 Variable:A1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:A1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
740 R2=(3*R3-R4)/2+.00526*F1*F*C/M
 Variable:R2 -> _
 NumericValue:3
 Variable:R3 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:R4 -> _
 BinaryOperatorMinus:-(_,_) -> _
 NumericValue:2
 BinaryOperatorDivide:/(_,_) -> _
 NumericValue:.00526
 Variable:F1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:F -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:C -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:M -> _
 BinaryOperatorDivide:/(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
745 A4=A3
 Variable:A4 -> _
 Variable:A3 -> _
 AssignmentOperator:= _ -> _
750 A3=-2*R1*A1/R
 Variable:A3 -> _
 NumericValue:2
 UnaryOperatorMinus:-(_) -> =_
 Variable:R1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:A1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:R -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
755 A2=(3*A3-A4)/2+.0056*F1*F*S/(M*R)
 Variable:A2 -> _
 NumericValue:3
 Variable:A3 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:A4 -> _
 BinaryOperatorMinus:-(_,_) -> _
 NumericValue:2
 BinaryOperatorDivide:/(_,_) -> _
 NumericValue:.0056
 Variable:F1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:F -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:S -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:M -> _
 Variable:R -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorDivide:/(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
760 X=R1*T1+.5*R2*T1*T1
 Variable:X -> _
 Variable:R1 -> _
 Variable:T1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericValue:.5
 Variable:R2 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
765 R=R+X
 Variable:R -> _
 Variable:R -> _
 Variable:X -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
770 H0=H0+X
 Variable:H0 -> _
 Variable:H0 -> _
 Variable:X -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
775 R1=R1+R2*T1
 Variable:R1 -> _
 Variable:R1 -> _
 Variable:R2 -> _
 Variable:T1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
780 A=A+A1*T1+.5*A2*T1*T1
 Variable:A -> _
 Variable:A -> _
 Variable:A1 -> _
 Variable:T1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 NumericValue:.5
 Variable:A2 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:T1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
785 A1=A1+A2*T1
 Variable:A1 -> _
 Variable:A1 -> _
 Variable:A2 -> _
 Variable:T1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
790 M=M-.5*M2
 Variable:M -> _
 Variable:M -> _
 NumericValue:.5
 Variable:M2 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
795 T=T+T1
 Variable:T -> _
 Variable:T -> _
 Variable:T1 -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
800 IF H0<3.287828E-04 THEN 810
 Variable:H0 -> _
 NumericValue:3.287828E-04
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:810
805 NEXT I
 Variable:I -> _
810 H=H0*Z
 Variable:H -> _
 Variable:H0 -> _
 Variable:Z -> _
 BinaryOperatorMultiply:*(_,_) -> _
 AssignmentOperator:= _ -> _
815 H1=R1*Z
 Variable:H1 -> _
 Variable:R1 -> _
 Variable:Z -> _
 BinaryOperatorMultiply:*(_,_) -> _
 AssignmentOperator:= _ -> _
820 D=R0*A*Z
 Variable:D -> _
 Variable:R0 -> _
 Variable:A -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:Z -> _
 BinaryOperatorMultiply:*(_,_) -> _
 AssignmentOperator:= _ -> _
825 D1=R*A1*Z
 Variable:D1 -> _
 Variable:R -> _
 Variable:A1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:Z -> _
 BinaryOperatorMultiply:*(_,_) -> _
 AssignmentOperator:= _ -> _
830 T2=M1*B/M0
 Variable:T2 -> _
 Variable:M1 -> _
 Variable:B -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:M0 -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
835 PRINT " ";T;TAB(10);H;TAB(23);D;
 TextValue:" "
 CarriageControl:;
 Variable:T -> _
 CarriageControl:;
 NumericValue:10
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 Variable:H -> _
 CarriageControl:;
 NumericValue:23
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 Variable:D -> _
 CarriageControl:;
840 PRINT TAB(37);H1;TAB(49);D1;TAB(60);T2
 NumericValue:37
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 Variable:H1 -> _
 CarriageControl:;
 NumericValue:49
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 Variable:D1 -> _
 CarriageControl:;
 NumericValue:60
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 Variable:T2 -> _
 CarriageControl:NL
845 IF H0<3.287828E-04 THEN 880
 Variable:H0 -> _
 NumericValue:3.287828E-04
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:880
850 IF R0*A>164.474 THEN 1050
 Variable:R0 -> _
 Variable:A -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericValue:164.474
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1050
855 IF M1>0 THEN 580
 Variable:M1 -> _
 NumericValue:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:580
860 T1=20
 Variable:T1 -> _
 NumericValue:20
 AssignmentOperator:= =_ -> _
865 F=0
 Variable:F -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
870 P=0
 Variable:P -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
875 GOTO 620
 LineNumber:620
880 IF R1<-8.21957E-04 THEN 1020
 Variable:R1 -> _
 NumericValue:8.21957E-04
 UnaryOperatorMinus:-(_) -> =_
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1020
885 IF ABS(R*A1)>4.93174E-04 THEN 1020
 Variable:R -> _
 Variable:A1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionAbs:ABS(_) -> _
 NumericValue:4.93174E-04
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1020
890 IF H0<-3.287828E-04 THEN 1020
 Variable:H0 -> _
 NumericValue:3.287828E-04
 UnaryOperatorMinus:-(_) -> =_
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1020
895 IF ABS(D)>10*Z THEN 1065
 Variable:D -> _
 FunctionAbs:ABS(_) -> _
 NumericValue:10
 Variable:Z -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1065
900 GOTO 995
 LineNumber:995
905 PRINT
 CarriageControl:NL
910 PRINT "THIS SPACECRAFT IS NOT ABLE TO VIOLATE THE SPACE-";
 TextValue:"THIS SPACECRAFT IS NOT ABLE TO VIOLATE THE SPACE-"
 CarriageControl:;
915 PRINT "TIME CONTINUUM."
 TextValue:"TIME CONTINUUM."
 CarriageControl:NL
920 GOTO 575
 LineNumber:575
925 PRINT
 CarriageControl:NL
930 PRINT "IF YOU WANT TO SPIN AROUND, GO OUTSIDE THE MODULE"
 TextValue:"IF YOU WANT TO SPIN AROUND, GO OUTSIDE THE MODULE"
 CarriageControl:NL
935 PRINT "FOR AN E.V.A."
 TextValue:"FOR AN E.V.A."
 CarriageControl:NL
940 GOTO 575
 LineNumber:575
945 PRINT
 CarriageControl:NL
950 PRINT "IMPOSSIBLE THRUST VALUE ";
 TextValue:"IMPOSSIBLE THRUST VALUE "
 CarriageControl:;
955 IF F<0 THEN 985
 Variable:F -> _
 NumericValue:0
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:985
960 IF F-.05<.05 THEN 975
 Variable:F -> _
 NumericValue:.05
 BinaryOperatorMinus:-(_,_) -> _
 NumericValue:.05
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:975
965 PRINT "TOO LARGE"
 TextValue:"TOO LARGE"
 CarriageControl:NL
970 GOTO 575
 LineNumber:575
975 PRINT "TOO SMALL"
 TextValue:"TOO SMALL"
 CarriageControl:NL
980 GOTO 575
 LineNumber:575
985 PRINT "NEGATIVE"
 TextValue:"NEGATIVE"
 CarriageControl:NL
990 GOTO 575
 LineNumber:575
995 PRINT
 CarriageControl:NL
1000 PRINT "TRANQUILITY BASE HERE -- THE EAGLE HAS LANDED."
 TextValue:"TRANQUILITY BASE HERE -- THE EAGLE HAS LANDED."
 CarriageControl:NL
1005 PRINT "CONGRATULATIONS -- THERE WAS NO SPACECRAFT DAMAGE."
 TextValue:"CONGRATULATIONS -- THERE WAS NO SPACECRAFT DAMAGE."
 CarriageControl:NL
1010 PRINT "YOU MAY NOW PROCEED WITH SURFACE EXPLORATION."
 TextValue:"YOU MAY NOW PROCEED WITH SURFACE EXPLORATION."
 CarriageControl:NL
1015 GOTO 1100
 LineNumber:1100
1020 PRINT
 CarriageControl:NL
1025 PRINT "CRASH !!!!!!!!!!!!!!!!"
 TextValue:"CRASH !!!!!!!!!!!!!!!!"
 CarriageControl:NL
1030 PRINT "YOUR IMPACT CREATED A CRATER";ABS(H);M$;" DEEP."
 TextValue:"YOUR IMPACT CREATED A CRATER"
 CarriageControl:;
 Variable:H -> _
 FunctionAbs:ABS(_) -> _
 CarriageControl:;
 Variable:M$ -> $
 CarriageControl:;
 TextValue:" DEEP."
 CarriageControl:NL
1035 X1=SQR(D1*D1+H1*H1)*G3
 Variable:X1 -> _
 Variable:D1 -> _
 Variable:D1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:H1 -> _
 Variable:H1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 FunctionSqr:SQR(_) -> _
 Variable:G3 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 AssignmentOperator:= _ -> _
1040 PRINT "AT CONTACT YOU WERE TRAVELING";X1;N$;"/HR"
 TextValue:"AT CONTACT YOU WERE TRAVELING"
 CarriageControl:;
 Variable:X1 -> _
 CarriageControl:;
 Variable:N$ -> $
 CarriageControl:;
 TextValue:"/HR"
 CarriageControl:NL
1045 GOTO 1100
 LineNumber:1100
1050 PRINT
 CarriageControl:NL
1055 PRINT "YOU HAVE BEEN LOST IN SPACE WITH NO HOPE OF RECOVERY."
 TextValue:"YOU HAVE BEEN LOST IN SPACE WITH NO HOPE OF RECOVERY."
 CarriageControl:NL
1060 GOTO 1100
 LineNumber:1100
1065 PRINT "YOU ARE DOWN SAFELY - "
 TextValue:"YOU ARE DOWN SAFELY - "
 CarriageControl:NL
1075 PRINT
 CarriageControl:NL
1080 PRINT "BUT MISSED THE LANDING SITE BY";ABS(D/G5);N$;"."
 TextValue:"BUT MISSED THE LANDING SITE BY"
 CarriageControl:;
 Variable:D -> _
 Variable:G5 -> _
 BinaryOperatorDivide:/(_,_) -> _
 FunctionAbs:ABS(_) -> _
 CarriageControl:;
 Variable:N$ -> $
 CarriageControl:;
 TextValue:"."
 CarriageControl:NL
1085 GOTO 1100
 LineNumber:1100
1090 PRINT
 CarriageControl:NL
1095 PRINT "MISSION ABENDED"
 TextValue:"MISSION ABENDED"
 CarriageControl:NL
1100 PRINT 
 CarriageControl:NL
1105 PRINT "DO YOU WANT TO TRY IT AGAIN (YES/NO)?"
 TextValue:"DO YOU WANT TO TRY IT AGAIN (YES/NO)?"
 CarriageControl:NL
1110 INPUT Z$
 Variable:Z$ -> $
1115 IF Z$="YES" THEN 20
 Variable:Z$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:20
1120 IF Z$="NO" THEN 1130
 Variable:Z$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1130
1125 GOTO 1105
 LineNumber:1105
1130 PRINT
 CarriageControl:NL
1135 PRINT "TOO BAD, THE SPACE PROGRAM HATES TO LOSE EXPERIENCED"
 TextValue:"TOO BAD, THE SPACE PROGRAM HATES TO LOSE EXPERIENCED"
 CarriageControl:NL
1140 PRINT "ASTRONAUTS."
 TextValue:"ASTRONAUTS."
 CarriageControl:NL
1145 STOP
 WARNING: Terminating statement in FOR/NEXT
 
1150 PRINT
 CarriageControl:NL
1155 PRINT "OK, DO YOU WANT THE COMPLETE INSTRUCTIONS OR THE INPUT -"
 TextValue:"OK, DO YOU WANT THE COMPLETE INSTRUCTIONS OR THE INPUT -"
 CarriageControl:NL
1160 PRINT "OUTPUT STATEMENTS?"
 TextValue:"OUTPUT STATEMENTS?"
 CarriageControl:NL
1165 PRINT "1=COMPLETE INSTRUCTIONS"
 TextValue:"1=COMPLETE INSTRUCTIONS"
 CarriageControl:NL
1170 PRINT "2=INPUT-OUTPUT STATEMENTS"
 TextValue:"2=INPUT-OUTPUT STATEMENTS"
 CarriageControl:NL
1175 PRINT "3=NEITHER"
 TextValue:"3=NEITHER"
 CarriageControl:NL
1180 INPUT B1
 Variable:B1 -> _
1185 Q$="NO"
 Variable:Q$ -> $
 TextValue:"NO"
 AssignmentOperator:= =$ -> $
1190 IF B1=1 THEN 205
 Variable:B1 -> _
 NumericValue:1
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:205
1195 Q$="YES"
 Variable:Q$ -> $
 TextValue:"YES"
 AssignmentOperator:= =$ -> $
1200 IF B1=2 THEN 190
 Variable:B1 -> _
 NumericValue:2
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:190
1205 IF B1=3 THEN 190
 Variable:B1 -> _
 NumericValue:3
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:190
1210 GOTO 1165
 LineNumber:1165
1215 END
 

