2 PRINT TAB(33);"LIFE2"
 NumericValue:33
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"LIFE2"
 CarriageControl:NL
4 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericValue:15
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
6 PRINT: PRINT: PRINT
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
7 DIM N(6,6),K(18),A(16),X(2),Y(2)
 NumericValue:6
 NumericValue:6
 Declaration:N(,) -> _(,)
 NumericValue:18
 Declaration:K() -> _()
 NumericValue:16
 Declaration:A() -> _()
 NumericValue:2
 Declaration:X() -> _()
 NumericValue:2
 Declaration:Y() -> _()
8 DATA 3,102,103,120,130,121,112,111,12
 NumericValue:3
 NumericValue:102
 NumericValue:103
 NumericValue:120
 NumericValue:130
 NumericValue:121
 NumericValue:112
 NumericValue:111
 NumericValue:12
9 DATA 21,30,1020,1030,1011,1021,1003,1002,1012
 NumericValue:21
 NumericValue:30
 NumericValue:1020
 NumericValue:1030
 NumericValue:1011
 NumericValue:1021
 NumericValue:1003
 NumericValue:1002
 NumericValue:1012
10 FOR M=1 TO 18: READ K(M): NEXT M
 control: Variable:M -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:18"]
 Variable:M -> _
 Variable:K(_) -> _
 Variable:M -> _
13 DATA -1,0,1,0,0,-1,0,1,-1,-1,1,-1,-1,1,1,1
 NumericValue:1
 UnaryOperatorMinus:-(_) -> =_
 NumericValue:0
 NumericValue:1
 NumericValue:0
 NumericValue:0
 NumericValue:1
 UnaryOperatorMinus:-(_) -> =_
 NumericValue:0
 NumericValue:1
 NumericValue:1
 UnaryOperatorMinus:-(_) -> =_
 NumericValue:1
 UnaryOperatorMinus:-(_) -> =_
 NumericValue:1
 NumericValue:1
 UnaryOperatorMinus:-(_) -> =_
 NumericValue:1
 UnaryOperatorMinus:-(_) -> =_
 NumericValue:1
 NumericValue:1
 NumericValue:1
14 FOR O1= 1 TO 16: READ A(O1): NEXT O1
 control: Variable:O1 -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:16"]
 Variable:O1 -> _
 Variable:A(_) -> _
 Variable:O1 -> _
20 GOTO 500
 LineNumber:500
50 FOR J=1 TO 5
 control: Variable:J -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
51 FOR K=1 TO 5
 control: Variable:K -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
55 IF N(J,K)>99 THEN GOSUB 200
 Variable:J -> _
 Variable:K -> _
 Variable:N(_,_) -> _
 NumericValue:99
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:200
60 NEXT K
 Variable:K -> _
65 NEXT J
 Variable:J -> _
90 K=0: M2=0: M3=0
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 Variable:K -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 Variable:M2 -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 Variable:M3 -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
99 FOR J=0 TO 6: PRINT
 WARNING: Multiple GOSUB entry points
 control: Variable:J -> _
 start:   ["NumericValue:0"]
 end:     ["NumericValue:6"]
 CarriageControl:NL
100 FOR K=0 TO 6
 WARNING: Multiple GOSUB entry points
 control: Variable:K -> _
 start:   ["NumericValue:0"]
 end:     ["NumericValue:6"]
101 IF J<>0 THEN IF J<>6 THEN 105
 WARNING: Multiple GOSUB entry points
 Variable:J -> _
 NumericValue:0
 BinaryOperatorNotEqual:<>(_,_) -> ?
 Variable:J -> _
 NumericValue:6
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:105
102 IF K=6 THEN PRINT 0;: GOTO 125
 WARNING: Multiple GOSUB entry points
 Variable:K -> _
 NumericValue:6
 BinaryOperatorEqual:=(_,_) -> ?
 NumericValue:0
 CarriageControl:;
 LineNumber:125
103 PRINT K;: GOTO 120
 WARNING: Multiple GOSUB entry points
 Variable:K -> _
 CarriageControl:;
 LineNumber:120
105 IF K<>0 THEN IF K<>6 THEN 110
 WARNING: Multiple GOSUB entry points
 Variable:K -> _
 NumericValue:0
 BinaryOperatorNotEqual:<>(_,_) -> ?
 Variable:K -> _
 NumericValue:6
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:110
106 IF J=6 THEN PRINT 0: GOTO 126
 WARNING: Multiple GOSUB entry points
 Variable:J -> _
 NumericValue:6
 BinaryOperatorEqual:=(_,_) -> ?
 NumericValue:0
 CarriageControl:NL
 LineNumber:126
107 PRINT J;: GOTO 120
 WARNING: Multiple GOSUB entry points
 Variable:J -> _
 CarriageControl:;
 LineNumber:120
110 GOSUB 300
 WARNING: Multiple GOSUB entry points
 LineNumber:300
120 NEXT K
 WARNING: Multiple GOSUB entry points
 Variable:K -> _
125 NEXT J
 WARNING: Multiple GOSUB entry points
 Variable:J -> _
126 RETURN
 WARNING: Multiple GOSUB entry points
 
200 B=1: IF N(J,K)>999 THEN B=10
 Variable:B -> _
 NumericValue:1
 AssignmentOperator:= =_ -> _
 Variable:J -> _
 Variable:K -> _
 Variable:N(_,_) -> _
 NumericValue:999
 BinaryOperatorGreater:>(_,_) -> ?
 Variable:B -> _
 NumericValue:10
 AssignmentOperator:= =_ -> _
220 FOR O1= 1 TO 15 STEP 2
 control: Variable:O1 -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:15"]
 step:    ["NumericValue:2"]
230 N(J+A(O1),K+A(O1+1))=N(J+A(O1),K+A(O1+1))+B
 Variable:J -> _
 Variable:O1 -> _
 Variable:A(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:K -> _
 Variable:O1 -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:A(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:N(_,_) -> _
 Variable:J -> _
 Variable:O1 -> _
 Variable:A(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:K -> _
 Variable:O1 -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:A(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:N(_,_) -> _
 Variable:B -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
231 NEXT O1
 Variable:O1 -> _
239 RETURN
 
300 IF N(J,K)<3 THEN 399
 Variable:J -> _
 Variable:K -> _
 Variable:N(_,_) -> _
 NumericValue:3
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:399
305 FOR O1=1 TO 18
 control: Variable:O1 -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:18"]
310 IF N(J,K)=K(O1) THEN 350
 Variable:J -> _
 Variable:K -> _
 Variable:N(_,_) -> _
 Variable:O1 -> _
 Variable:K(_) -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:350
315 NEXT O1
 Variable:O1 -> _
320 GOTO 399
 LineNumber:399
350 IF O1>9 THEN 360
 Variable:O1 -> _
 NumericValue:9
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:360
351 N(J,K)=100: M2=M2+1: PRINT " * ";
 Variable:J -> _
 Variable:K -> _
 Variable:N(_,_) -> _
 NumericValue:100
 AssignmentOperator:= =_ -> _
 Variable:M2 -> _
 Variable:M2 -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
 TextValue:" * "
 CarriageControl:;
355 RETURN
 
360 N(J,K)=1000: M3=M3+1: PRINT " # ";
 Variable:J -> _
 Variable:K -> _
 Variable:N(_,_) -> _
 NumericValue:1000
 AssignmentOperator:= =_ -> _
 Variable:M3 -> _
 Variable:M3 -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
 TextValue:" # "
 CarriageControl:;
365 RETURN
 
399 N(J,K)=0: PRINT "   ";: RETURN
 Variable:J -> _
 Variable:K -> _
 Variable:N(_,_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 TextValue:"   "
 CarriageControl:;
 
500 PRINT TAB(10);"U.B. LIFE GAME"
 NumericValue:10
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"U.B. LIFE GAME"
 CarriageControl:NL
505 M2=0: M3=0
 Variable:M2 -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 Variable:M3 -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
510 FOR J=1 TO 5
 control: Variable:J -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
511 FOR K=1 TO 5
 control: Variable:K -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
515 N(J,K)=0
 Variable:J -> _
 Variable:K -> _
 Variable:N(_,_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
516 NEXT K
 Variable:K -> _
517 NEXT J
 Variable:J -> _
519 FOR B=1 TO 2: P1=3: IF B=2 THEN P1=30
 control: Variable:B -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:2"]
 Variable:P1 -> _
 NumericValue:3
 AssignmentOperator:= =_ -> _
 Variable:B -> _
 NumericValue:2
 BinaryOperatorEqual:=(_,_) -> ?
 Variable:P1 -> _
 NumericValue:30
 AssignmentOperator:= =_ -> _
520 PRINT:PRINT "PLAYER";B;" - 3 LIVE PIECES."
 CarriageControl:NL
 TextValue:"PLAYER"
 CarriageControl:;
 Variable:B -> _
 CarriageControl:;
 TextValue:" - 3 LIVE PIECES."
 CarriageControl:NL
535 FOR K1=1 TO 3: GOSUB 700
 control: Variable:K1 -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3"]
 LineNumber:700
540 N(X(B),Y(B))=P1: NEXT K1
 Variable:B -> _
 Variable:X(_) -> _
 Variable:B -> _
 Variable:Y(_) -> _
 Variable:N(_,_) -> _
 Variable:P1 -> _
 AssignmentOperator:= _ -> _
 Variable:K1 -> _
542 NEXT B
 Variable:B -> _
559 GOSUB 90
 LineNumber:90
560 PRINT: GOSUB 50
 CarriageControl:NL
 LineNumber:50
570 IF M2=0 THEN IF M3=0 THEN 574
 Variable:M2 -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 Variable:M3 -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:574
571 IF M3=0 THEN B=1: GOTO 575
 Variable:M3 -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 Variable:B -> _
 NumericValue:1
 AssignmentOperator:= =_ -> _
 LineNumber:575
572 IF M2=0 THEN B=2: GOTO 575
 Variable:M2 -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 Variable:B -> _
 NumericValue:2
 AssignmentOperator:= =_ -> _
 LineNumber:575
573 GOTO 580
 LineNumber:580
574 PRINT: PRINT "A DRAW":GOTO 800
 CarriageControl:NL
 TextValue:"A DRAW"
 CarriageControl:NL
 LineNumber:800
575 PRINT: PRINT "PLAYER";B;"IS THE WINNER":GOTO 800
 CarriageControl:NL
 TextValue:"PLAYER"
 CarriageControl:;
 Variable:B -> _
 CarriageControl:;
 TextValue:"IS THE WINNER"
 CarriageControl:NL
 LineNumber:800
580 FOR B=1 TO 2: PRINT: PRINT: PRINT "PLAYER";B;: GOSUB 700
 control: Variable:B -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:2"]
 CarriageControl:NL
 CarriageControl:NL
 TextValue:"PLAYER"
 CarriageControl:;
 Variable:B -> _
 CarriageControl:;
 LineNumber:700
581 IF B=99 THEN 560
 Variable:B -> _
 NumericValue:99
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:560
582 NEXT B
 Variable:B -> _
586 N(X(1),Y(1))=100: N(X(2),Y(2))=1000
 NumericValue:1
 Variable:X(_) -> _
 NumericValue:1
 Variable:Y(_) -> _
 Variable:N(_,_) -> _
 NumericValue:100
 AssignmentOperator:= =_ -> _
 NumericValue:2
 Variable:X(_) -> _
 NumericValue:2
 Variable:Y(_) -> _
 Variable:N(_,_) -> _
 NumericValue:1000
 AssignmentOperator:= =_ -> _
596 GOTO 560
 LineNumber:560
700 PRINT "X,Y":PRINT"XXXXXX";CHR$(13);"$$$$$$";CHR$(13);"&&&&&&";
 WARNING: Inconsistent GOSUB origins
 TextValue:"X,Y"
 CarriageControl:NL
 TextValue:"XXXXXX"
 CarriageControl:;
 NumericValue:13
 FunctionChr:CHR$(_) -> =$
 CarriageControl:;
 TextValue:"$$$$$$"
 CarriageControl:;
 NumericValue:13
 FunctionChr:CHR$(_) -> =$
 CarriageControl:;
 TextValue:"&&&&&&"
 CarriageControl:;
701 PRINT CHR$(13);: INPUT Y(B),X(B)
 NumericValue:13
 FunctionChr:CHR$(_) -> =$
 CarriageControl:;
 Variable:B -> _
 Variable:Y(_) -> _
 Variable:B -> _
 Variable:X(_) -> _
705 IF X(B)<=5 THEN IF X(B)>0 THEN 708
 Variable:B -> _
 Variable:X(_) -> _
 NumericValue:5
 BinaryOperatorLessEqual:<=(_,_) -> ?
 Variable:B -> _
 Variable:X(_) -> _
 NumericValue:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:708
706 GOTO 750
 LineNumber:750
708 IF Y(B)<=5 THEN IF Y(B)>0 THEN 715
 Variable:B -> _
 Variable:Y(_) -> _
 NumericValue:5
 BinaryOperatorLessEqual:<=(_,_) -> ?
 Variable:B -> _
 Variable:Y(_) -> _
 NumericValue:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:715
710 GOTO 750
 LineNumber:750
715 IF N(X(B),Y(B))<>0 THEN 750
 Variable:B -> _
 Variable:X(_) -> _
 Variable:B -> _
 Variable:Y(_) -> _
 Variable:N(_,_) -> _
 NumericValue:0
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:750
720 IF B=1 THEN RETURN
 Variable:B -> _
 NumericValue:1
 BinaryOperatorEqual:=(_,_) -> ?
 
725 IF X(1)=X(2) THEN IF Y(1)=Y(2) THEN 740
 NumericValue:1
 Variable:X(_) -> _
 NumericValue:2
 Variable:X(_) -> _
 BinaryOperatorEqual:=(_,_) -> ?
 NumericValue:1
 Variable:Y(_) -> _
 NumericValue:2
 Variable:Y(_) -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:740
730 RETURN
 
740 PRINT "SAME COORD.  SET TO 0"
 TextValue:"SAME COORD.  SET TO 0"
 CarriageControl:NL
741 N(X(B)+1,Y(B)+1)=0: B=99: RETURN
 Variable:B -> _
 Variable:X(_) -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:B -> _
 Variable:Y(_) -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:N(_,_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 Variable:B -> _
 NumericValue:99
 AssignmentOperator:= =_ -> _
 
750 PRINT "ILLEGAL COORDS. RETYPE": GOTO 700
 TextValue:"ILLEGAL COORDS. RETYPE"
 CarriageControl:NL
 LineNumber:700
800 END
 WARNING: Terminating statement in FOR/NEXT
 

