Statistics:

Number of lines: 54
Number of valid statements: 92
Number of comments: 3
Number of executable statements: 92

Complexity:

Comment density: 0.033
Comprehension effort: 256
McCabe complexity: 27
Halstead complexity:
 length: 284
 volume: 1258.352
 difficulty: 27.167
 effort: 34185.229
 language: 1.705
 intelligence: 46.320
 time: 31.653

(0 4) 2 PRINT TAB(33); "GOMOKO"
  Origs: :start
  Dests: 4:auto
(0 4) 4 PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 2:auto
  Dests: 6:auto
(0 2) 6 PRINT
(0 2)   PRINT
(0 2)   PRINT
  Origs: 4:auto
  Dests: 8:auto
(0 2) 8 DIM A(19, 19)
  Origs: 6:auto
  Dests: 10:auto
(0 2) 10 PRINT "WELCOME TO THE ORIENTAL GAME OF GOMOKO."
  Origs: 8:auto
  Dests: 20:auto
(0 2) 20 PRINT
(0 2)    PRINT "THE GAME IS PLAYED ON AN N BY N GRID OF A SIZE"
  Origs: 10:auto
  Dests: 30:auto
(0 2) 30 PRINT "THAT YOU SPECIFY.  DURING YOUR PLAY, YOU MAY COVER ONE GRID"
  Origs: 20:auto
  Dests: 40:auto
(0 2) 40 PRINT "INTERSECTION WITH A MARKER. THE OBJECT OF THE GAME IS TO GET"
  Origs: 30:auto
  Dests: 50:auto
(0 2) 50 PRINT "5 ADJACENT MARKERS IN A ROW -- HORIZONTALLY, VERTICALLY, OR"
  Origs: 40:auto
  Dests: 60:auto
(0 2) 60 PRINT "DIAGONALLY.  ON THE BOARD DIAGRAM, YOUR MOVES ARE MARKED"
  Origs: 50:auto
  Dests: 70:auto
(0 2) 70 PRINT "WITH A '1' AND THE COMPUTER MOVES WITH A '2'."
  Origs: 60:auto
  Dests: 80:auto
(0 2) 80 PRINT
(0 2)    PRINT "THE COMPUTER DOES NOT KEEP TRACK OF WHO HAS WON."
  Origs: 70:auto
  Dests: 90:auto
(0 2) 90 PRINT "TO END THE GAME, TYPE -1,-1 FOR YOUR MOVE."
(0 2)    PRINT
  Origs: 80:auto
  Dests: 110:auto
(0 2) 110 PRINT "WHAT IS YOUR BOARD SIZE (MIN 7/ MAX 19)";
(1 2)     INPUT N
  Origs: 90:auto, 120:goto, 990:ifthen
  Dests: 115:auto
(1 4) 115 IF N > 6 THEN 117
  Origs: 110:auto
  Dests: 116:auto, 117:ifthen
(0 2) 116 GOTO 120
  Origs: 115:auto
  Dests: 120:goto
(1 4) 117 IF N < 20 THEN 210
  Origs: 115:ifthen
  Dests: 120:auto, 210:ifthen
(0 2) 120 PRINT "I SAID, THE MINIMUM IS 7, THE MAXIMUM IS 19."
(0 3)     GOTO 110
  Origs: 116:goto, 117:auto
  Dests: 110:goto
(1 3) 210 FOR I = 1 TO N
(1 3)     FOR J = 1 TO N
(0 3)     A(I, J) = 0
(0 1)     NEXT J
(0 1)     NEXT I
  Origs: 117:ifthen
  Dests: 300:auto
(0 2) 300 PRINT
(0 2)     PRINT "WE ALTERNATE MOVES.  YOU GO FIRST..."
(0 2)     PRINT
  Origs: 210:auto
  Dests: 310:auto
(0 2) 310 PRINT "YOUR PLAY (I,J)";
(2 3)     INPUT I, J
  Origs: 300:auto, 340:goto, 420:goto, 660:goto
  Dests: 315:auto
(0 2) 315 PRINT
  Origs: 310:auto
  Dests: 320:auto
(1 6) 320 IF I = -1 THEN 980
  Origs: 315:auto
  Dests: 330:auto, 980:ifthen
(0 3) 330 X = I
(0 3)     Y = J
(0 2)     GOSUB 910
(1 4)     IF L = 1 THEN 410
  Origs: 320:auto
  Dests: 340:auto, 410:ifthen, 910:gosub
(0 2) 340 PRINT "ILLEGAL MOVE.  TRY AGAIN..."
(0 3)     GOTO 310
  Origs: 330:auto
  Dests: 310:goto
(1 4) 410 IF A(I, J) = 0 THEN 440
  Origs: 330:ifthen
  Dests: 420:auto, 440:ifthen
(0 2) 420 PRINT "SQUARE OCCUPIED.  TRY AGAIN..."
(0 3)     GOTO 310
  Origs: 410:auto
  Dests: 310:goto
(0 3) 440 A(I, J) = 1
  Origs: 410:ifthen
  Dests: 510:auto
(0 1) 500 REM *** COMPUTER TRIES AN INTELLIGENT MOVE ***
  Origs: 
  Dests: 
(1 4) 510 FOR E = -1 TO 1
(1 4)     FOR F = -1 TO 1
(1 8)     IF E + F - E * F = 0 THEN 590
  Origs: 440:auto
  Dests: 540:auto, 590:fornext, 590:ifthen
(0 4) 540 X = I + F
(0 4)     Y = J + F
(0 2)     GOSUB 910
  Origs: 510:auto
  Dests: 570:auto, 910:gosub
(1 4) 570 IF L = 0 THEN 590
  Origs: 540:auto
  Dests: 580:auto, 590:ifthen
(1 4) 580 IF A(X, Y) = 1 THEN 710
  Origs: 570:auto
  Dests: 590:auto, 710:ifthen
(0 1) 590 NEXT F
(0 1)     NEXT E
  Origs: 510:fornext, 510:ifthen, 570:ifthen, 580:auto
  Dests: 610:auto
(0 1) 600 REM *** COMPUTER TRIES A RANDOM MOVE ***
  Origs: 
  Dests: 
(0 4) 610 X = INT(N * RND(1) + 1)
(0 4)     Y = INT(N * RND(1) + 1)
(0 2)     GOSUB 910
(1 5)     IF L = 0 THEN 610
  Origs: 590:auto, 650:ifthen, 750:ifthen
  Dests: 650:auto, 910:gosub
(1 5) 650 IF A(X, Y) <> 0 THEN 610
  Origs: 610:auto, 760:goto
  Dests: 610:ifthen, 660:auto
(0 3) 660 A(X, Y) = 2
(0 2)     GOSUB 810
(0 3)     GOTO 310
  Origs: 650:auto
  Dests: 310:goto, 810:gosub
(0 4) 710 X = I - E
(0 4)     Y = J - F
(0 2)     GOSUB 910
  Origs: 580:ifthen
  Dests: 750:auto, 910:gosub
(1 5) 750 IF L = 0 THEN 610
  Origs: 710:auto
  Dests: 610:ifthen, 760:auto
(0 3) 760 GOTO 650
  Origs: 750:auto
  Dests: 650:goto
(0 1) 800 REM *** PRINT THE BOARD ***
  Origs: 
  Dests: 
(1 3) 810 FOR I = 1 TO N
(1 3)     FOR J = 1 TO N
(0 2)     PRINT A(I, J);
  Origs: 660:gosub
  Dests: 840:auto, 840:fornext
(0 1) 840 NEXT J
(0 2)     PRINT
(0 1)     NEXT I
(0 2)     PRINT
(0 1)     RETURN
  Origs: 810:auto, 810:fornext
  Dests: 
(0 3) 910 L = 1
(1 4)     IF X < 1 THEN 970
  Origs: 330:gosub, 540:gosub, 610:gosub, 710:gosub
  Dests: 920:auto, 970:ifthen
(1 4) 920 IF X > N THEN 970
  Origs: 910:auto
  Dests: 930:auto, 970:ifthen
(1 4) 930 IF Y < 1 THEN 970
  Origs: 920:auto
  Dests: 940:auto, 970:ifthen
(1 4) 940 IF Y > N THEN 970
  Origs: 930:auto
  Dests: 950:auto, 970:ifthen
(0 1) 950 RETURN
  Origs: 940:auto
  Dests: 
(0 3) 970 L = 0
(0 1)     RETURN
  Origs: 910:ifthen, 920:ifthen, 930:ifthen, 940:ifthen
  Dests: 
(0 2) 980 PRINT
(0 2)     PRINT "THANKS FOR THE GAME!!"
  Origs: 320:ifthen
  Dests: 985:auto
(0 2) 985 PRINT "PLAY AGAIN (1 FOR YES, 0 FOR NO)";
(1 2)     INPUT Q
  Origs: 980:auto
  Dests: 990:auto
(1 5) 990 IF Q = 1 THEN 110
  Origs: 985:auto
  Dests: 110:ifthen, 999:auto
(0 1) 999 END
  Origs: 990:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

