2 PRINT TAB(33);"GOMOKO"
 NumericValue:33
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"GOMOKO"
 CarriageControl:NL
4 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericValue:15
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
6 PRINT:PRINT:PRINT
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
8 DIM A(19,19)
 NumericValue:19
 NumericValue:19
 Declaration:A(,) -> .(,)
10 PRINT "WELCOME TO THE ORIENTAL GAME OF GOMOKO."
 TextValue:"WELCOME TO THE ORIENTAL GAME OF GOMOKO."
 CarriageControl:NL
20 PRINT: PRINT "THE GAME IS PLAYED ON AN N BY N GRID OF A SIZE"
 CarriageControl:NL
 TextValue:"THE GAME IS PLAYED ON AN N BY N GRID OF A SIZE"
 CarriageControl:NL
30 PRINT "THAT YOU SPECIFY.  DURING YOUR PLAY, YOU MAY COVER ONE GRID"
 TextValue:"THAT YOU SPECIFY.  DURING YOUR PLAY, YOU MAY COVER ONE GRID"
 CarriageControl:NL
40 PRINT "INTERSECTION WITH A MARKER. THE OBJECT OF THE GAME IS TO GET"
 TextValue:"INTERSECTION WITH A MARKER. THE OBJECT OF THE GAME IS TO GET"
 CarriageControl:NL
50 PRINT "5 ADJACENT MARKERS IN A ROW -- HORIZONTALLY, VERTICALLY, OR"
 TextValue:"5 ADJACENT MARKERS IN A ROW -- HORIZONTALLY, VERTICALLY, OR"
 CarriageControl:NL
60 PRINT "DIAGONALLY.  ON THE BOARD DIAGRAM, YOUR MOVES ARE MARKED"
 TextValue:"DIAGONALLY.  ON THE BOARD DIAGRAM, YOUR MOVES ARE MARKED"
 CarriageControl:NL
70 PRINT "WITH A '1' AND THE COMPUTER MOVES WITH A '2'."
 TextValue:"WITH A '1' AND THE COMPUTER MOVES WITH A '2'."
 CarriageControl:NL
80 PRINT: PRINT "THE COMPUTER DOES NOT KEEP TRACK OF WHO HAS WON."
 CarriageControl:NL
 TextValue:"THE COMPUTER DOES NOT KEEP TRACK OF WHO HAS WON."
 CarriageControl:NL
90 PRINT "TO END THE GAME, TYPE -1,-1 FOR YOUR MOVE.": PRINT
 TextValue:"TO END THE GAME, TYPE -1,-1 FOR YOUR MOVE."
 CarriageControl:NL
 CarriageControl:NL
110 PRINT "WHAT IS YOUR BOARD SIZE (MIN 7/ MAX 19)";: INPUT N
 TextValue:"WHAT IS YOUR BOARD SIZE (MIN 7/ MAX 19)"
 CarriageControl:;
 Variable:N -> .
115 IF N>6 THEN 117
 Variable:N -> .
 NumericValue:6
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:117
116 GOTO 120
 LineNumber:120
117 IF N<20 THEN 210
 Variable:N -> .
 NumericValue:20
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:210
120 PRINT "I SAID, THE MINIMUM IS 7, THE MAXIMUM IS 19.": GOTO 110
 TextValue:"I SAID, THE MINIMUM IS 7, THE MAXIMUM IS 19."
 CarriageControl:NL
 LineNumber:110
210 FOR I=1 TO N:FOR J=1 TO N: A(I,J)=0: NEXT J: NEXT I
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
 Variable:I -> .
 Variable:J -> .
 Variable:A(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 Variable:J -> .
 Variable:I -> .
300 PRINT: PRINT "WE ALTERNATE MOVES.  YOU GO FIRST...": PRINT
 CarriageControl:NL
 TextValue:"WE ALTERNATE MOVES.  YOU GO FIRST..."
 CarriageControl:NL
 CarriageControl:NL
310 PRINT "YOUR PLAY (I,J)";: INPUT I,J
 TextValue:"YOUR PLAY (I,J)"
 CarriageControl:;
 Variable:I -> .
 Variable:J -> .
315 PRINT
 CarriageControl:NL
320 IF I=-1 THEN 980
 Variable:I -> .
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:980
330 X=I: Y=J: GOSUB 910: IF L=1 THEN 410
 Variable:X -> .
 Variable:I -> .
 AssignmentOperator:= . -> .
 Variable:Y -> .
 Variable:J -> .
 AssignmentOperator:= . -> .
 LineNumber:910
 Variable:L -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:410
340 PRINT "ILLEGAL MOVE.  TRY AGAIN...": GOTO 310
 TextValue:"ILLEGAL MOVE.  TRY AGAIN..."
 CarriageControl:NL
 LineNumber:310
410 IF A(I,J)=0 THEN 440
 Variable:I -> .
 Variable:J -> .
 Variable:A(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:440
420 PRINT "SQUARE OCCUPIED.  TRY AGAIN...": GOTO 310
 TextValue:"SQUARE OCCUPIED.  TRY AGAIN..."
 CarriageControl:NL
 LineNumber:310
440 A(I,J)=1
 Variable:I -> .
 Variable:J -> .
 Variable:A(.,.) -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
500 REM *** COMPUTER TRIES AN INTELLIGENT MOVE ***
 Remark:*** COMPUTER TRIES AN INTELLIGENT MOVE ***
510 FOR E=-1 TO 1: FOR F=-1 TO 1: IF E+F-E*F=0 THEN 590
 control: Variable:E -> .
 start:   ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
 end:     ["NumericValue:1"]
 control: Variable:F -> .
 start:   ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
 end:     ["NumericValue:1"]
 Variable:E -> .
 Variable:F -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:E -> .
 Variable:F -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:590
540 X=I+F: Y=J+F: GOSUB 910
 Variable:X -> .
 Variable:I -> .
 Variable:F -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Y -> .
 Variable:J -> .
 Variable:F -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 LineNumber:910
570 IF L=0 THEN 590
 Variable:L -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:590
580 IF A(X,Y)=1 THEN 710
 WARNING: Transfer in/out of FOR/NEXT 710
 Variable:X -> .
 Variable:Y -> .
 Variable:A(.,.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:710
590 NEXT F: NEXT E
 Variable:F -> .
 Variable:E -> .
600 REM *** COMPUTER TRIES A RANDOM MOVE ***
 Remark:*** COMPUTER TRIES A RANDOM MOVE ***
610 X=INT(N*RND(1)+1): Y=INT(N*RND(1)+1): GOSUB 910: IF L=0 THEN 610
 WARNING: Line exceeds PRETTY width limit 80
 Variable:X -> .
 Variable:N -> .
 NumericValue:1
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
 Variable:Y -> .
 Variable:N -> .
 NumericValue:1
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
 LineNumber:910
 Variable:L -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:610
650 IF A(X,Y)<>0 THEN 610
 Variable:X -> .
 Variable:Y -> .
 Variable:A(.,.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:610
660 A(X,Y)=2: GOSUB 810: GOTO 310
 Variable:X -> .
 Variable:Y -> .
 Variable:A(.,.) -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
 LineNumber:810
 LineNumber:310
710 X=I-E: Y=J-F: GOSUB 910
 Variable:X -> .
 Variable:I -> .
 Variable:E -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Y -> .
 Variable:J -> .
 Variable:F -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 LineNumber:910
750 IF L=0 THEN 610
 Variable:L -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:610
760 GOTO 650
 LineNumber:650
800 REM *** PRINT THE BOARD ***
 Remark:*** PRINT THE BOARD ***
810 FOR I=1 TO N: FOR J=1 TO N: PRINT A(I,J);
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
 Variable:I -> .
 Variable:J -> .
 Variable:A(.,.) -> .
 CarriageControl:;
840 NEXT J: PRINT: NEXT I: PRINT: RETURN
 Variable:J -> .
 CarriageControl:NL
 Variable:I -> .
 CarriageControl:NL
 
910 L=1: IF X<1 THEN 970
 Variable:L -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
 Variable:X -> .
 NumericValue:1
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:970
920 IF X>N THEN 970
 Variable:X -> .
 Variable:N -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:970
930 IF Y<1 THEN 970
 Variable:Y -> .
 NumericValue:1
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:970
940 IF Y>N THEN 970
 Variable:Y -> .
 Variable:N -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:970
950 RETURN
 
970 L=0: RETURN
 Variable:L -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 
980 PRINT: PRINT "THANKS FOR THE GAME!!"
 CarriageControl:NL
 TextValue:"THANKS FOR THE GAME!!"
 CarriageControl:NL
985 PRINT "PLAY AGAIN (1 FOR YES, 0 FOR NO)";: INPUT Q
 TextValue:"PLAY AGAIN (1 FOR YES, 0 FOR NO)"
 CarriageControl:;
 Variable:Q -> .
990 IF Q=1 THEN 110
 Variable:Q -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:110
999 END
 

