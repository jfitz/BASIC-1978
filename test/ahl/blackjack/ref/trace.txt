2: PRINT TAB(31); "BLACK JACK"
                               BLACK JACK
4: PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
               CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY
6: PRINT

6.1: PRINT

6.2: PRINT

10: DEF FNA(Q) = Q + 11 * (Q >= 22)
20: DIM P(15, 12), Q(15), C(52), D(52), T(8), S(7), B(15)
30: DIM R(15)
40: REM --P(I,J) IS THE JTH CARD IN HAND I, Q(I) IS TOTAL OF HAND I
50: REM --C IS THE DECK BEING DEALT FROM, D IS THE DISCARD PILE,
60: REM --T(I) IS THE TOTAL FOR PLAYER I, S(I) IS THE TOTAL THIS HAND FOR
70: REM --PLAYER I, B(I) IS TH BET FOR HAND I
80: REM --R(I) IS THE LENGTH OF P(I,*)
90: GOTO 1500
1500: REM --PROGRAM STARTS HERE
1510: REM --INITIALIZE
1520: D$ = "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 D$ = "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
1530: I$ = "H,S,D,C"
 I$ = "H,S,D,C"
1540: FOR I = 1 TO 13
 I = 1
 terminated:false
1550: FOR J = 4 * I - 3 TO 4 * I
 I: 1
 J = 1
 4*I-3 = 1
 4*I = 4
 terminated:false
1560: D(J) = I
 J: 1
 I: 1
 D(1) = 1
1570: NEXT J
 J: 1
 terminated:false
 J = 2
1560: D(J) = I
 J: 2
 I: 1
 D(2) = 1
1570: NEXT J
 J: 2
 terminated:false
 J = 3
1560: D(J) = I
 J: 3
 I: 1
 D(3) = 1
1570: NEXT J
 J: 3
 terminated:false
 J = 4
1560: D(J) = I
 J: 4
 I: 1
 D(4) = 1
1570: NEXT J
 J: 4
 terminated:true
1580: NEXT I
 I: 1
 terminated:false
 I = 2
1550: FOR J = 4 * I - 3 TO 4 * I
 I: 2
 J = 5
 4*I-3 = 5
 4*I = 8
 terminated:false
1560: D(J) = I
 J: 5
 I: 2
 D(5) = 2
1570: NEXT J
 J: 5
 terminated:false
 J = 6
1560: D(J) = I
 J: 6
 I: 2
 D(6) = 2
1570: NEXT J
 J: 6
 terminated:false
 J = 7
1560: D(J) = I
 J: 7
 I: 2
 D(7) = 2
1570: NEXT J
 J: 7
 terminated:false
 J = 8
1560: D(J) = I
 J: 8
 I: 2
 D(8) = 2
1570: NEXT J
 J: 8
 terminated:true
1580: NEXT I
 I: 2
 terminated:false
 I = 3
1550: FOR J = 4 * I - 3 TO 4 * I
 I: 3
 J = 9
 4*I-3 = 9
 4*I = 12
 terminated:false
1560: D(J) = I
 J: 9
 I: 3
 D(9) = 3
1570: NEXT J
 J: 9
 terminated:false
 J = 10
1560: D(J) = I
 J: 10
 I: 3
 D(10) = 3
1570: NEXT J
 J: 10
 terminated:false
 J = 11
1560: D(J) = I
 J: 11
 I: 3
 D(11) = 3
1570: NEXT J
 J: 11
 terminated:false
 J = 12
1560: D(J) = I
 J: 12
 I: 3
 D(12) = 3
1570: NEXT J
 J: 12
 terminated:true
1580: NEXT I
 I: 3
 terminated:false
 I = 4
1550: FOR J = 4 * I - 3 TO 4 * I
 I: 4
 J = 13
 4*I-3 = 13
 4*I = 16
 terminated:false
1560: D(J) = I
 J: 13
 I: 4
 D(13) = 4
1570: NEXT J
 J: 13
 terminated:false
 J = 14
1560: D(J) = I
 J: 14
 I: 4
 D(14) = 4
1570: NEXT J
 J: 14
 terminated:false
 J = 15
1560: D(J) = I
 J: 15
 I: 4
 D(15) = 4
1570: NEXT J
 J: 15
 terminated:false
 J = 16
1560: D(J) = I
 J: 16
 I: 4
 D(16) = 4
1570: NEXT J
 J: 16
 terminated:true
1580: NEXT I
 I: 4
 terminated:false
 I = 5
1550: FOR J = 4 * I - 3 TO 4 * I
 I: 5
 J = 17
 4*I-3 = 17
 4*I = 20
 terminated:false
1560: D(J) = I
 J: 17
 I: 5
 D(17) = 5
1570: NEXT J
 J: 17
 terminated:false
 J = 18
1560: D(J) = I
 J: 18
 I: 5
 D(18) = 5
1570: NEXT J
 J: 18
 terminated:false
 J = 19
1560: D(J) = I
 J: 19
 I: 5
 D(19) = 5
1570: NEXT J
 J: 19
 terminated:false
 J = 20
1560: D(J) = I
 J: 20
 I: 5
 D(20) = 5
1570: NEXT J
 J: 20
 terminated:true
1580: NEXT I
 I: 5
 terminated:false
 I = 6
1550: FOR J = 4 * I - 3 TO 4 * I
 I: 6
 J = 21
 4*I-3 = 21
 4*I = 24
 terminated:false
1560: D(J) = I
 J: 21
 I: 6
 D(21) = 6
1570: NEXT J
 J: 21
 terminated:false
 J = 22
1560: D(J) = I
 J: 22
 I: 6
 D(22) = 6
1570: NEXT J
 J: 22
 terminated:false
 J = 23
1560: D(J) = I
 J: 23
 I: 6
 D(23) = 6
1570: NEXT J
 J: 23
 terminated:false
 J = 24
1560: D(J) = I
 J: 24
 I: 6
 D(24) = 6
1570: NEXT J
 J: 24
 terminated:true
1580: NEXT I
 I: 6
 terminated:false
 I = 7
1550: FOR J = 4 * I - 3 TO 4 * I
 I: 7
 J = 25
 4*I-3 = 25
 4*I = 28
 terminated:false
1560: D(J) = I
 J: 25
 I: 7
 D(25) = 7
1570: NEXT J
 J: 25
 terminated:false
 J = 26
1560: D(J) = I
 J: 26
 I: 7
 D(26) = 7
1570: NEXT J
 J: 26
 terminated:false
 J = 27
1560: D(J) = I
 J: 27
 I: 7
 D(27) = 7
1570: NEXT J
 J: 27
 terminated:false
 J = 28
1560: D(J) = I
 J: 28
 I: 7
 D(28) = 7
1570: NEXT J
 J: 28
 terminated:true
1580: NEXT I
 I: 7
 terminated:false
 I = 8
1550: FOR J = 4 * I - 3 TO 4 * I
 I: 8
 J = 29
 4*I-3 = 29
 4*I = 32
 terminated:false
1560: D(J) = I
 J: 29
 I: 8
 D(29) = 8
1570: NEXT J
 J: 29
 terminated:false
 J = 30
1560: D(J) = I
 J: 30
 I: 8
 D(30) = 8
1570: NEXT J
 J: 30
 terminated:false
 J = 31
1560: D(J) = I
 J: 31
 I: 8
 D(31) = 8
1570: NEXT J
 J: 31
 terminated:false
 J = 32
1560: D(J) = I
 J: 32
 I: 8
 D(32) = 8
1570: NEXT J
 J: 32
 terminated:true
1580: NEXT I
 I: 8
 terminated:false
 I = 9
1550: FOR J = 4 * I - 3 TO 4 * I
 I: 9
 J = 33
 4*I-3 = 33
 4*I = 36
 terminated:false
1560: D(J) = I
 J: 33
 I: 9
 D(33) = 9
1570: NEXT J
 J: 33
 terminated:false
 J = 34
1560: D(J) = I
 J: 34
 I: 9
 D(34) = 9
1570: NEXT J
 J: 34
 terminated:false
 J = 35
1560: D(J) = I
 J: 35
 I: 9
 D(35) = 9
1570: NEXT J
 J: 35
 terminated:false
 J = 36
1560: D(J) = I
 J: 36
 I: 9
 D(36) = 9
1570: NEXT J
 J: 36
 terminated:true
1580: NEXT I
 I: 9
 terminated:false
 I = 10
1550: FOR J = 4 * I - 3 TO 4 * I
 I: 10
 J = 37
 4*I-3 = 37
 4*I = 40
 terminated:false
1560: D(J) = I
 J: 37
 I: 10
 D(37) = 10
1570: NEXT J
 J: 37
 terminated:false
 J = 38
1560: D(J) = I
 J: 38
 I: 10
 D(38) = 10
1570: NEXT J
 J: 38
 terminated:false
 J = 39
1560: D(J) = I
 J: 39
 I: 10
 D(39) = 10
1570: NEXT J
 J: 39
 terminated:false
 J = 40
1560: D(J) = I
 J: 40
 I: 10
 D(40) = 10
1570: NEXT J
 J: 40
 terminated:true
1580: NEXT I
 I: 10
 terminated:false
 I = 11
1550: FOR J = 4 * I - 3 TO 4 * I
 I: 11
 J = 41
 4*I-3 = 41
 4*I = 44
 terminated:false
1560: D(J) = I
 J: 41
 I: 11
 D(41) = 11
1570: NEXT J
 J: 41
 terminated:false
 J = 42
1560: D(J) = I
 J: 42
 I: 11
 D(42) = 11
1570: NEXT J
 J: 42
 terminated:false
 J = 43
1560: D(J) = I
 J: 43
 I: 11
 D(43) = 11
1570: NEXT J
 J: 43
 terminated:false
 J = 44
1560: D(J) = I
 J: 44
 I: 11
 D(44) = 11
1570: NEXT J
 J: 44
 terminated:true
1580: NEXT I
 I: 11
 terminated:false
 I = 12
1550: FOR J = 4 * I - 3 TO 4 * I
 I: 12
 J = 45
 4*I-3 = 45
 4*I = 48
 terminated:false
1560: D(J) = I
 J: 45
 I: 12
 D(45) = 12
1570: NEXT J
 J: 45
 terminated:false
 J = 46
1560: D(J) = I
 J: 46
 I: 12
 D(46) = 12
1570: NEXT J
 J: 46
 terminated:false
 J = 47
1560: D(J) = I
 J: 47
 I: 12
 D(47) = 12
1570: NEXT J
 J: 47
 terminated:false
 J = 48
1560: D(J) = I
 J: 48
 I: 12
 D(48) = 12
1570: NEXT J
 J: 48
 terminated:true
1580: NEXT I
 I: 12
 terminated:false
 I = 13
1550: FOR J = 4 * I - 3 TO 4 * I
 I: 13
 J = 49
 4*I-3 = 49
 4*I = 52
 terminated:false
1560: D(J) = I
 J: 49
 I: 13
 D(49) = 13
1570: NEXT J
 J: 49
 terminated:false
 J = 50
1560: D(J) = I
 J: 50
 I: 13
 D(50) = 13
1570: NEXT J
 J: 50
 terminated:false
 J = 51
1560: D(J) = I
 J: 51
 I: 13
 D(51) = 13
1570: NEXT J
 J: 51
 terminated:false
 J = 52
1560: D(J) = I
 J: 52
 I: 13
 D(52) = 13
1570: NEXT J
 J: 52
 terminated:true
1580: NEXT I
 I: 13
 terminated:true
1590: D = 52
 D = 52
1600: C = 53
 C = 53
1610: PRINT "DO YOU WANT INSTRUCTIONS";
DO YOU WANT INSTRUCTIONS
1620: INPUT H$
? NO
 H$ = "NO"
1630: IF LEFT$(H$, 1) = "N" OR LEFT$(H$, 1) = "n" THEN 1760
 H$: "NO"
 LEFT$(H$,1)="N"ORLEFT$(H$,1)="n": true
1760: PRINT "NUMBER OF PLAYERS";
NUMBER OF PLAYERS
1770: INPUT N
? 2
 N = 2
1775: PRINT

1780: IF N < 1 OR N > 7 OR N > INT(N) THEN 1760
 N: 2
 N<1ORN>7ORN>INT(N): false
1790: FOR I = 1 TO 8
 I = 1
 terminated:false
1790.1: T(I) = 0
 I: 1
 T(1) = 0
1790.2: NEXT I
 I: 1
 terminated:false
 I = 2
1790.1: T(I) = 0
 I: 2
 T(2) = 0
1790.2: NEXT I
 I: 2
 terminated:false
 I = 3
1790.1: T(I) = 0
 I: 3
 T(3) = 0
1790.2: NEXT I
 I: 3
 terminated:false
 I = 4
1790.1: T(I) = 0
 I: 4
 T(4) = 0
1790.2: NEXT I
 I: 4
 terminated:false
 I = 5
1790.1: T(I) = 0
 I: 5
 T(5) = 0
1790.2: NEXT I
 I: 5
 terminated:false
 I = 6
1790.1: T(I) = 0
 I: 6
 T(6) = 0
1790.2: NEXT I
 I: 6
 terminated:false
 I = 7
1790.1: T(I) = 0
 I: 7
 T(7) = 0
1790.2: NEXT I
 I: 7
 terminated:false
 I = 8
1790.1: T(I) = 0
 I: 8
 T(8) = 0
1790.2: NEXT I
 I: 8
 terminated:true
1800: D1 = N + 1
 N: 2
 D1 = 3
1810: IF 2 * D1 + C >= 52 THEN GOSUB 120
 D1: 3
 C: 53
 2*D1+C>=52: true
120: PRINT "RESHUFFLING"
RESHUFFLING
130: FOR D = D TO 1 STEP -1
 D: 52
 D = 52
 D = 52
 -1 = -1
 terminated:false
140: C = C - 1
 C: 53
 C = 52
150: C(C) = D(D)
 C: 52
 D: 52
 D(52): 13
 C(52) = 13
160: NEXT D
 D: 52
 terminated:false
 D = 51
140: C = C - 1
 C: 52
 C = 51
150: C(C) = D(D)
 C: 51
 D: 51
 D(51): 13
 C(51) = 13
160: NEXT D
 D: 51
 terminated:false
 D = 50
140: C = C - 1
 C: 51
 C = 50
150: C(C) = D(D)
 C: 50
 D: 50
 D(50): 13
 C(50) = 13
160: NEXT D
 D: 50
 terminated:false
 D = 49
140: C = C - 1
 C: 50
 C = 49
150: C(C) = D(D)
 C: 49
 D: 49
 D(49): 13
 C(49) = 13
160: NEXT D
 D: 49
 terminated:false
 D = 48
140: C = C - 1
 C: 49
 C = 48
150: C(C) = D(D)
 C: 48
 D: 48
 D(48): 12
 C(48) = 12
160: NEXT D
 D: 48
 terminated:false
 D = 47
140: C = C - 1
 C: 48
 C = 47
150: C(C) = D(D)
 C: 47
 D: 47
 D(47): 12
 C(47) = 12
160: NEXT D
 D: 47
 terminated:false
 D = 46
140: C = C - 1
 C: 47
 C = 46
150: C(C) = D(D)
 C: 46
 D: 46
 D(46): 12
 C(46) = 12
160: NEXT D
 D: 46
 terminated:false
 D = 45
140: C = C - 1
 C: 46
 C = 45
150: C(C) = D(D)
 C: 45
 D: 45
 D(45): 12
 C(45) = 12
160: NEXT D
 D: 45
 terminated:false
 D = 44
140: C = C - 1
 C: 45
 C = 44
150: C(C) = D(D)
 C: 44
 D: 44
 D(44): 11
 C(44) = 11
160: NEXT D
 D: 44
 terminated:false
 D = 43
140: C = C - 1
 C: 44
 C = 43
150: C(C) = D(D)
 C: 43
 D: 43
 D(43): 11
 C(43) = 11
160: NEXT D
 D: 43
 terminated:false
 D = 42
140: C = C - 1
 C: 43
 C = 42
150: C(C) = D(D)
 C: 42
 D: 42
 D(42): 11
 C(42) = 11
160: NEXT D
 D: 42
 terminated:false
 D = 41
140: C = C - 1
 C: 42
 C = 41
150: C(C) = D(D)
 C: 41
 D: 41
 D(41): 11
 C(41) = 11
160: NEXT D
 D: 41
 terminated:false
 D = 40
140: C = C - 1
 C: 41
 C = 40
150: C(C) = D(D)
 C: 40
 D: 40
 D(40): 10
 C(40) = 10
160: NEXT D
 D: 40
 terminated:false
 D = 39
140: C = C - 1
 C: 40
 C = 39
150: C(C) = D(D)
 C: 39
 D: 39
 D(39): 10
 C(39) = 10
160: NEXT D
 D: 39
 terminated:false
 D = 38
140: C = C - 1
 C: 39
 C = 38
150: C(C) = D(D)
 C: 38
 D: 38
 D(38): 10
 C(38) = 10
160: NEXT D
 D: 38
 terminated:false
 D = 37
140: C = C - 1
 C: 38
 C = 37
150: C(C) = D(D)
 C: 37
 D: 37
 D(37): 10
 C(37) = 10
160: NEXT D
 D: 37
 terminated:false
 D = 36
140: C = C - 1
 C: 37
 C = 36
150: C(C) = D(D)
 C: 36
 D: 36
 D(36): 9
 C(36) = 9
160: NEXT D
 D: 36
 terminated:false
 D = 35
140: C = C - 1
 C: 36
 C = 35
150: C(C) = D(D)
 C: 35
 D: 35
 D(35): 9
 C(35) = 9
160: NEXT D
 D: 35
 terminated:false
 D = 34
140: C = C - 1
 C: 35
 C = 34
150: C(C) = D(D)
 C: 34
 D: 34
 D(34): 9
 C(34) = 9
160: NEXT D
 D: 34
 terminated:false
 D = 33
140: C = C - 1
 C: 34
 C = 33
150: C(C) = D(D)
 C: 33
 D: 33
 D(33): 9
 C(33) = 9
160: NEXT D
 D: 33
 terminated:false
 D = 32
140: C = C - 1
 C: 33
 C = 32
150: C(C) = D(D)
 C: 32
 D: 32
 D(32): 8
 C(32) = 8
160: NEXT D
 D: 32
 terminated:false
 D = 31
140: C = C - 1
 C: 32
 C = 31
150: C(C) = D(D)
 C: 31
 D: 31
 D(31): 8
 C(31) = 8
160: NEXT D
 D: 31
 terminated:false
 D = 30
140: C = C - 1
 C: 31
 C = 30
150: C(C) = D(D)
 C: 30
 D: 30
 D(30): 8
 C(30) = 8
160: NEXT D
 D: 30
 terminated:false
 D = 29
140: C = C - 1
 C: 30
 C = 29
150: C(C) = D(D)
 C: 29
 D: 29
 D(29): 8
 C(29) = 8
160: NEXT D
 D: 29
 terminated:false
 D = 28
140: C = C - 1
 C: 29
 C = 28
150: C(C) = D(D)
 C: 28
 D: 28
 D(28): 7
 C(28) = 7
160: NEXT D
 D: 28
 terminated:false
 D = 27
140: C = C - 1
 C: 28
 C = 27
150: C(C) = D(D)
 C: 27
 D: 27
 D(27): 7
 C(27) = 7
160: NEXT D
 D: 27
 terminated:false
 D = 26
140: C = C - 1
 C: 27
 C = 26
150: C(C) = D(D)
 C: 26
 D: 26
 D(26): 7
 C(26) = 7
160: NEXT D
 D: 26
 terminated:false
 D = 25
140: C = C - 1
 C: 26
 C = 25
150: C(C) = D(D)
 C: 25
 D: 25
 D(25): 7
 C(25) = 7
160: NEXT D
 D: 25
 terminated:false
 D = 24
140: C = C - 1
 C: 25
 C = 24
150: C(C) = D(D)
 C: 24
 D: 24
 D(24): 6
 C(24) = 6
160: NEXT D
 D: 24
 terminated:false
 D = 23
140: C = C - 1
 C: 24
 C = 23
150: C(C) = D(D)
 C: 23
 D: 23
 D(23): 6
 C(23) = 6
160: NEXT D
 D: 23
 terminated:false
 D = 22
140: C = C - 1
 C: 23
 C = 22
150: C(C) = D(D)
 C: 22
 D: 22
 D(22): 6
 C(22) = 6
160: NEXT D
 D: 22
 terminated:false
 D = 21
140: C = C - 1
 C: 22
 C = 21
150: C(C) = D(D)
 C: 21
 D: 21
 D(21): 6
 C(21) = 6
160: NEXT D
 D: 21
 terminated:false
 D = 20
140: C = C - 1
 C: 21
 C = 20
150: C(C) = D(D)
 C: 20
 D: 20
 D(20): 5
 C(20) = 5
160: NEXT D
 D: 20
 terminated:false
 D = 19
140: C = C - 1
 C: 20
 C = 19
150: C(C) = D(D)
 C: 19
 D: 19
 D(19): 5
 C(19) = 5
160: NEXT D
 D: 19
 terminated:false
 D = 18
140: C = C - 1
 C: 19
 C = 18
150: C(C) = D(D)
 C: 18
 D: 18
 D(18): 5
 C(18) = 5
160: NEXT D
 D: 18
 terminated:false
 D = 17
140: C = C - 1
 C: 18
 C = 17
150: C(C) = D(D)
 C: 17
 D: 17
 D(17): 5
 C(17) = 5
160: NEXT D
 D: 17
 terminated:false
 D = 16
140: C = C - 1
 C: 17
 C = 16
150: C(C) = D(D)
 C: 16
 D: 16
 D(16): 4
 C(16) = 4
160: NEXT D
 D: 16
 terminated:false
 D = 15
140: C = C - 1
 C: 16
 C = 15
150: C(C) = D(D)
 C: 15
 D: 15
 D(15): 4
 C(15) = 4
160: NEXT D
 D: 15
 terminated:false
 D = 14
140: C = C - 1
 C: 15
 C = 14
150: C(C) = D(D)
 C: 14
 D: 14
 D(14): 4
 C(14) = 4
160: NEXT D
 D: 14
 terminated:false
 D = 13
140: C = C - 1
 C: 14
 C = 13
150: C(C) = D(D)
 C: 13
 D: 13
 D(13): 4
 C(13) = 4
160: NEXT D
 D: 13
 terminated:false
 D = 12
140: C = C - 1
 C: 13
 C = 12
150: C(C) = D(D)
 C: 12
 D: 12
 D(12): 3
 C(12) = 3
160: NEXT D
 D: 12
 terminated:false
 D = 11
140: C = C - 1
 C: 12
 C = 11
150: C(C) = D(D)
 C: 11
 D: 11
 D(11): 3
 C(11) = 3
160: NEXT D
 D: 11
 terminated:false
 D = 10
140: C = C - 1
 C: 11
 C = 10
150: C(C) = D(D)
 C: 10
 D: 10
 D(10): 3
 C(10) = 3
160: NEXT D
 D: 10
 terminated:false
 D = 9
140: C = C - 1
 C: 10
 C = 9
150: C(C) = D(D)
 C: 9
 D: 9
 D(9): 3
 C(9) = 3
160: NEXT D
 D: 9
 terminated:false
 D = 8
140: C = C - 1
 C: 9
 C = 8
150: C(C) = D(D)
 C: 8
 D: 8
 D(8): 2
 C(8) = 2
160: NEXT D
 D: 8
 terminated:false
 D = 7
140: C = C - 1
 C: 8
 C = 7
150: C(C) = D(D)
 C: 7
 D: 7
 D(7): 2
 C(7) = 2
160: NEXT D
 D: 7
 terminated:false
 D = 6
140: C = C - 1
 C: 7
 C = 6
150: C(C) = D(D)
 C: 6
 D: 6
 D(6): 2
 C(6) = 2
160: NEXT D
 D: 6
 terminated:false
 D = 5
140: C = C - 1
 C: 6
 C = 5
150: C(C) = D(D)
 C: 5
 D: 5
 D(5): 2
 C(5) = 2
160: NEXT D
 D: 5
 terminated:false
 D = 4
140: C = C - 1
 C: 5
 C = 4
150: C(C) = D(D)
 C: 4
 D: 4
 D(4): 1
 C(4) = 1
160: NEXT D
 D: 4
 terminated:false
 D = 3
140: C = C - 1
 C: 4
 C = 3
150: C(C) = D(D)
 C: 3
 D: 3
 D(3): 1
 C(3) = 1
160: NEXT D
 D: 3
 terminated:false
 D = 2
140: C = C - 1
 C: 3
 C = 2
150: C(C) = D(D)
 C: 2
 D: 2
 D(2): 1
 C(2) = 1
160: NEXT D
 D: 2
 terminated:false
 D = 1
140: C = C - 1
 C: 2
 C = 1
150: C(C) = D(D)
 C: 1
 D: 1
 D(1): 1
 C(1) = 1
160: NEXT D
 D: 1
 terminated:true
170: FOR C1 = 52 TO C STEP -1
 C: 1
 C1 = 52
 C = 1
 -1 = -1
 terminated:false
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 52
 C: 1
 C2 = 22
190: C3 = C(C2)
 C2: 22
 C(22): 6
 C3 = 6
200: C(C2) = C(C1)
 C2: 22
 C1: 52
 C(52): 13
 C(22) = 13
210: C(C1) = C3
 C1: 52
 C3: 6
 C(52) = 6
220: NEXT C1
 C1: 52
 terminated:false
 C1 = 51
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 51
 C: 1
 C2 = 37
190: C3 = C(C2)
 C2: 37
 C(37): 10
 C3 = 10
200: C(C2) = C(C1)
 C2: 37
 C1: 51
 C(51): 13
 C(37) = 13
210: C(C1) = C3
 C1: 51
 C3: 10
 C(51) = 10
220: NEXT C1
 C1: 51
 terminated:false
 C1 = 50
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 50
 C: 1
 C2 = 1
190: C3 = C(C2)
 C2: 1
 C(1): 1
 C3 = 1
200: C(C2) = C(C1)
 C2: 1
 C1: 50
 C(50): 13
 C(1) = 13
210: C(C1) = C3
 C1: 50
 C3: 1
 C(50) = 1
220: NEXT C1
 C1: 50
 terminated:false
 C1 = 49
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 49
 C: 1
 C2 = 15
190: C3 = C(C2)
 C2: 15
 C(15): 4
 C3 = 4
200: C(C2) = C(C1)
 C2: 15
 C1: 49
 C(49): 13
 C(15) = 13
210: C(C1) = C3
 C1: 49
 C3: 4
 C(49) = 4
220: NEXT C1
 C1: 49
 terminated:false
 C1 = 48
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 48
 C: 1
 C2 = 8
190: C3 = C(C2)
 C2: 8
 C(8): 2
 C3 = 2
200: C(C2) = C(C1)
 C2: 8
 C1: 48
 C(48): 12
 C(8) = 12
210: C(C1) = C3
 C1: 48
 C3: 2
 C(48) = 2
220: NEXT C1
 C1: 48
 terminated:false
 C1 = 47
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 47
 C: 1
 C2 = 5
190: C3 = C(C2)
 C2: 5
 C(5): 2
 C3 = 2
200: C(C2) = C(C1)
 C2: 5
 C1: 47
 C(47): 12
 C(5) = 12
210: C(C1) = C3
 C1: 47
 C3: 2
 C(47) = 2
220: NEXT C1
 C1: 47
 terminated:false
 C1 = 46
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 46
 C: 1
 C2 = 9
190: C3 = C(C2)
 C2: 9
 C(9): 3
 C3 = 3
200: C(C2) = C(C1)
 C2: 9
 C1: 46
 C(46): 12
 C(9) = 12
210: C(C1) = C3
 C1: 46
 C3: 3
 C(46) = 3
220: NEXT C1
 C1: 46
 terminated:false
 C1 = 45
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 45
 C: 1
 C2 = 16
190: C3 = C(C2)
 C2: 16
 C(16): 4
 C3 = 4
200: C(C2) = C(C1)
 C2: 16
 C1: 45
 C(45): 12
 C(16) = 12
210: C(C1) = C3
 C1: 45
 C3: 4
 C(45) = 4
220: NEXT C1
 C1: 45
 terminated:false
 C1 = 44
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 44
 C: 1
 C2 = 18
190: C3 = C(C2)
 C2: 18
 C(18): 5
 C3 = 5
200: C(C2) = C(C1)
 C2: 18
 C1: 44
 C(44): 11
 C(18) = 11
210: C(C1) = C3
 C1: 44
 C3: 5
 C(44) = 5
220: NEXT C1
 C1: 44
 terminated:false
 C1 = 43
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 43
 C: 1
 C2 = 24
190: C3 = C(C2)
 C2: 24
 C(24): 6
 C3 = 6
200: C(C2) = C(C1)
 C2: 24
 C1: 43
 C(43): 11
 C(24) = 11
210: C(C1) = C3
 C1: 43
 C3: 6
 C(43) = 6
220: NEXT C1
 C1: 43
 terminated:false
 C1 = 42
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 42
 C: 1
 C2 = 18
190: C3 = C(C2)
 C2: 18
 C(18): 11
 C3 = 11
200: C(C2) = C(C1)
 C2: 18
 C1: 42
 C(42): 11
 C(18) = 11
210: C(C1) = C3
 C1: 42
 C3: 11
 C(42) = 11
220: NEXT C1
 C1: 42
 terminated:false
 C1 = 41
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 41
 C: 1
 C2 = 29
190: C3 = C(C2)
 C2: 29
 C(29): 8
 C3 = 8
200: C(C2) = C(C1)
 C2: 29
 C1: 41
 C(41): 11
 C(29) = 11
210: C(C1) = C3
 C1: 41
 C3: 8
 C(41) = 8
220: NEXT C1
 C1: 41
 terminated:false
 C1 = 40
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 40
 C: 1
 C2 = 9
190: C3 = C(C2)
 C2: 9
 C(9): 12
 C3 = 12
200: C(C2) = C(C1)
 C2: 9
 C1: 40
 C(40): 10
 C(9) = 10
210: C(C1) = C3
 C1: 40
 C3: 12
 C(40) = 12
220: NEXT C1
 C1: 40
 terminated:false
 C1 = 39
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 39
 C: 1
 C2 = 35
190: C3 = C(C2)
 C2: 35
 C(35): 9
 C3 = 9
200: C(C2) = C(C1)
 C2: 35
 C1: 39
 C(39): 10
 C(35) = 10
210: C(C1) = C3
 C1: 39
 C3: 9
 C(39) = 9
220: NEXT C1
 C1: 39
 terminated:false
 C1 = 38
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 38
 C: 1
 C2 = 2
190: C3 = C(C2)
 C2: 2
 C(2): 1
 C3 = 1
200: C(C2) = C(C1)
 C2: 2
 C1: 38
 C(38): 10
 C(2) = 10
210: C(C1) = C3
 C1: 38
 C3: 1
 C(38) = 1
220: NEXT C1
 C1: 38
 terminated:false
 C1 = 37
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 37
 C: 1
 C2 = 25
190: C3 = C(C2)
 C2: 25
 C(25): 7
 C3 = 7
200: C(C2) = C(C1)
 C2: 25
 C1: 37
 C(37): 13
 C(25) = 13
210: C(C1) = C3
 C1: 37
 C3: 7
 C(37) = 7
220: NEXT C1
 C1: 37
 terminated:false
 C1 = 36
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 36
 C: 1
 C2 = 16
190: C3 = C(C2)
 C2: 16
 C(16): 12
 C3 = 12
200: C(C2) = C(C1)
 C2: 16
 C1: 36
 C(36): 9
 C(16) = 9
210: C(C1) = C3
 C1: 36
 C3: 12
 C(36) = 12
220: NEXT C1
 C1: 36
 terminated:false
 C1 = 35
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 35
 C: 1
 C2 = 20
190: C3 = C(C2)
 C2: 20
 C(20): 5
 C3 = 5
200: C(C2) = C(C1)
 C2: 20
 C1: 35
 C(35): 10
 C(20) = 10
210: C(C1) = C3
 C1: 35
 C3: 5
 C(35) = 5
220: NEXT C1
 C1: 35
 terminated:false
 C1 = 34
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 34
 C: 1
 C2 = 5
190: C3 = C(C2)
 C2: 5
 C(5): 12
 C3 = 12
200: C(C2) = C(C1)
 C2: 5
 C1: 34
 C(34): 9
 C(5) = 9
210: C(C1) = C3
 C1: 34
 C3: 12
 C(34) = 12
220: NEXT C1
 C1: 34
 terminated:false
 C1 = 33
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 33
 C: 1
 C2 = 7
190: C3 = C(C2)
 C2: 7
 C(7): 2
 C3 = 2
200: C(C2) = C(C1)
 C2: 7
 C1: 33
 C(33): 9
 C(7) = 9
210: C(C1) = C3
 C1: 33
 C3: 2
 C(33) = 2
220: NEXT C1
 C1: 33
 terminated:false
 C1 = 32
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 32
 C: 1
 C2 = 26
190: C3 = C(C2)
 C2: 26
 C(26): 7
 C3 = 7
200: C(C2) = C(C1)
 C2: 26
 C1: 32
 C(32): 8
 C(26) = 8
210: C(C1) = C3
 C1: 32
 C3: 7
 C(32) = 7
220: NEXT C1
 C1: 32
 terminated:false
 C1 = 31
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 31
 C: 1
 C2 = 31
190: C3 = C(C2)
 C2: 31
 C(31): 8
 C3 = 8
200: C(C2) = C(C1)
 C2: 31
 C1: 31
 C(31): 8
 C(31) = 8
210: C(C1) = C3
 C1: 31
 C3: 8
 C(31) = 8
220: NEXT C1
 C1: 31
 terminated:false
 C1 = 30
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 30
 C: 1
 C2 = 10
190: C3 = C(C2)
 C2: 10
 C(10): 3
 C3 = 3
200: C(C2) = C(C1)
 C2: 10
 C1: 30
 C(30): 8
 C(10) = 8
210: C(C1) = C3
 C1: 30
 C3: 3
 C(30) = 3
220: NEXT C1
 C1: 30
 terminated:false
 C1 = 29
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 29
 C: 1
 C2 = 21
190: C3 = C(C2)
 C2: 21
 C(21): 6
 C3 = 6
200: C(C2) = C(C1)
 C2: 21
 C1: 29
 C(29): 11
 C(21) = 11
210: C(C1) = C3
 C1: 29
 C3: 6
 C(29) = 6
220: NEXT C1
 C1: 29
 terminated:false
 C1 = 28
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 28
 C: 1
 C2 = 25
190: C3 = C(C2)
 C2: 25
 C(25): 13
 C3 = 13
200: C(C2) = C(C1)
 C2: 25
 C1: 28
 C(28): 7
 C(25) = 7
210: C(C1) = C3
 C1: 28
 C3: 13
 C(28) = 13
220: NEXT C1
 C1: 28
 terminated:false
 C1 = 27
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 27
 C: 1
 C2 = 25
190: C3 = C(C2)
 C2: 25
 C(25): 7
 C3 = 7
200: C(C2) = C(C1)
 C2: 25
 C1: 27
 C(27): 7
 C(25) = 7
210: C(C1) = C3
 C1: 27
 C3: 7
 C(27) = 7
220: NEXT C1
 C1: 27
 terminated:false
 C1 = 26
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 26
 C: 1
 C2 = 3
190: C3 = C(C2)
 C2: 3
 C(3): 1
 C3 = 1
200: C(C2) = C(C1)
 C2: 3
 C1: 26
 C(26): 8
 C(3) = 8
210: C(C1) = C3
 C1: 26
 C3: 1
 C(26) = 1
220: NEXT C1
 C1: 26
 terminated:false
 C1 = 25
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 25
 C: 1
 C2 = 1
190: C3 = C(C2)
 C2: 1
 C(1): 13
 C3 = 13
200: C(C2) = C(C1)
 C2: 1
 C1: 25
 C(25): 7
 C(1) = 7
210: C(C1) = C3
 C1: 25
 C3: 13
 C(25) = 13
220: NEXT C1
 C1: 25
 terminated:false
 C1 = 24
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 24
 C: 1
 C2 = 5
190: C3 = C(C2)
 C2: 5
 C(5): 9
 C3 = 9
200: C(C2) = C(C1)
 C2: 5
 C1: 24
 C(24): 11
 C(5) = 11
210: C(C1) = C3
 C1: 24
 C3: 9
 C(24) = 9
220: NEXT C1
 C1: 24
 terminated:false
 C1 = 23
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 23
 C: 1
 C2 = 21
190: C3 = C(C2)
 C2: 21
 C(21): 11
 C3 = 11
200: C(C2) = C(C1)
 C2: 21
 C1: 23
 C(23): 6
 C(21) = 6
210: C(C1) = C3
 C1: 23
 C3: 11
 C(23) = 11
220: NEXT C1
 C1: 23
 terminated:false
 C1 = 22
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 22
 C: 1
 C2 = 3
190: C3 = C(C2)
 C2: 3
 C(3): 8
 C3 = 8
200: C(C2) = C(C1)
 C2: 3
 C1: 22
 C(22): 13
 C(3) = 13
210: C(C1) = C3
 C1: 22
 C3: 8
 C(22) = 8
220: NEXT C1
 C1: 22
 terminated:false
 C1 = 21
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 21
 C: 1
 C2 = 9
190: C3 = C(C2)
 C2: 9
 C(9): 10
 C3 = 10
200: C(C2) = C(C1)
 C2: 9
 C1: 21
 C(21): 6
 C(9) = 6
210: C(C1) = C3
 C1: 21
 C3: 10
 C(21) = 10
220: NEXT C1
 C1: 21
 terminated:false
 C1 = 20
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 20
 C: 1
 C2 = 20
190: C3 = C(C2)
 C2: 20
 C(20): 10
 C3 = 10
200: C(C2) = C(C1)
 C2: 20
 C1: 20
 C(20): 10
 C(20) = 10
210: C(C1) = C3
 C1: 20
 C3: 10
 C(20) = 10
220: NEXT C1
 C1: 20
 terminated:false
 C1 = 19
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 19
 C: 1
 C2 = 11
190: C3 = C(C2)
 C2: 11
 C(11): 3
 C3 = 3
200: C(C2) = C(C1)
 C2: 11
 C1: 19
 C(19): 5
 C(11) = 5
210: C(C1) = C3
 C1: 19
 C3: 3
 C(19) = 3
220: NEXT C1
 C1: 19
 terminated:false
 C1 = 18
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 18
 C: 1
 C2 = 13
190: C3 = C(C2)
 C2: 13
 C(13): 4
 C3 = 4
200: C(C2) = C(C1)
 C2: 13
 C1: 18
 C(18): 11
 C(13) = 11
210: C(C1) = C3
 C1: 18
 C3: 4
 C(18) = 4
220: NEXT C1
 C1: 18
 terminated:false
 C1 = 17
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 17
 C: 1
 C2 = 6
190: C3 = C(C2)
 C2: 6
 C(6): 2
 C3 = 2
200: C(C2) = C(C1)
 C2: 6
 C1: 17
 C(17): 5
 C(6) = 5
210: C(C1) = C3
 C1: 17
 C3: 2
 C(17) = 2
220: NEXT C1
 C1: 17
 terminated:false
 C1 = 16
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 16
 C: 1
 C2 = 11
190: C3 = C(C2)
 C2: 11
 C(11): 5
 C3 = 5
200: C(C2) = C(C1)
 C2: 11
 C1: 16
 C(16): 9
 C(11) = 9
210: C(C1) = C3
 C1: 16
 C3: 5
 C(16) = 5
220: NEXT C1
 C1: 16
 terminated:false
 C1 = 15
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 15
 C: 1
 C2 = 13
190: C3 = C(C2)
 C2: 13
 C(13): 11
 C3 = 11
200: C(C2) = C(C1)
 C2: 13
 C1: 15
 C(15): 13
 C(13) = 13
210: C(C1) = C3
 C1: 15
 C3: 11
 C(15) = 11
220: NEXT C1
 C1: 15
 terminated:false
 C1 = 14
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 14
 C: 1
 C2 = 1
190: C3 = C(C2)
 C2: 1
 C(1): 7
 C3 = 7
200: C(C2) = C(C1)
 C2: 1
 C1: 14
 C(14): 4
 C(1) = 4
210: C(C1) = C3
 C1: 14
 C3: 7
 C(14) = 7
220: NEXT C1
 C1: 14
 terminated:false
 C1 = 13
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 13
 C: 1
 C2 = 10
190: C3 = C(C2)
 C2: 10
 C(10): 8
 C3 = 8
200: C(C2) = C(C1)
 C2: 10
 C1: 13
 C(13): 13
 C(10) = 13
210: C(C1) = C3
 C1: 13
 C3: 8
 C(13) = 8
220: NEXT C1
 C1: 13
 terminated:false
 C1 = 12
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 12
 C: 1
 C2 = 12
190: C3 = C(C2)
 C2: 12
 C(12): 3
 C3 = 3
200: C(C2) = C(C1)
 C2: 12
 C1: 12
 C(12): 3
 C(12) = 3
210: C(C1) = C3
 C1: 12
 C3: 3
 C(12) = 3
220: NEXT C1
 C1: 12
 terminated:false
 C1 = 11
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 11
 C: 1
 C2 = 9
190: C3 = C(C2)
 C2: 9
 C(9): 6
 C3 = 6
200: C(C2) = C(C1)
 C2: 9
 C1: 11
 C(11): 9
 C(9) = 9
210: C(C1) = C3
 C1: 11
 C3: 6
 C(11) = 6
220: NEXT C1
 C1: 11
 terminated:false
 C1 = 10
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 10
 C: 1
 C2 = 3
190: C3 = C(C2)
 C2: 3
 C(3): 13
 C3 = 13
200: C(C2) = C(C1)
 C2: 3
 C1: 10
 C(10): 13
 C(3) = 13
210: C(C1) = C3
 C1: 10
 C3: 13
 C(10) = 13
220: NEXT C1
 C1: 10
 terminated:false
 C1 = 9
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 9
 C: 1
 C2 = 8
190: C3 = C(C2)
 C2: 8
 C(8): 12
 C3 = 12
200: C(C2) = C(C1)
 C2: 8
 C1: 9
 C(9): 9
 C(8) = 9
210: C(C1) = C3
 C1: 9
 C3: 12
 C(9) = 12
220: NEXT C1
 C1: 9
 terminated:false
 C1 = 8
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 8
 C: 1
 C2 = 1
190: C3 = C(C2)
 C2: 1
 C(1): 4
 C3 = 4
200: C(C2) = C(C1)
 C2: 1
 C1: 8
 C(8): 9
 C(1) = 9
210: C(C1) = C3
 C1: 8
 C3: 4
 C(8) = 4
220: NEXT C1
 C1: 8
 terminated:false
 C1 = 7
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 7
 C: 1
 C2 = 4
190: C3 = C(C2)
 C2: 4
 C(4): 1
 C3 = 1
200: C(C2) = C(C1)
 C2: 4
 C1: 7
 C(7): 9
 C(4) = 9
210: C(C1) = C3
 C1: 7
 C3: 1
 C(7) = 1
220: NEXT C1
 C1: 7
 terminated:false
 C1 = 6
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 6
 C: 1
 C2 = 6
190: C3 = C(C2)
 C2: 6
 C(6): 5
 C3 = 5
200: C(C2) = C(C1)
 C2: 6
 C1: 6
 C(6): 5
 C(6) = 5
210: C(C1) = C3
 C1: 6
 C3: 5
 C(6) = 5
220: NEXT C1
 C1: 6
 terminated:false
 C1 = 5
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 5
 C: 1
 C2 = 2
190: C3 = C(C2)
 C2: 2
 C(2): 10
 C3 = 10
200: C(C2) = C(C1)
 C2: 2
 C1: 5
 C(5): 11
 C(2) = 11
210: C(C1) = C3
 C1: 5
 C3: 10
 C(5) = 10
220: NEXT C1
 C1: 5
 terminated:false
 C1 = 4
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 4
 C: 1
 C2 = 2
190: C3 = C(C2)
 C2: 2
 C(2): 11
 C3 = 11
200: C(C2) = C(C1)
 C2: 2
 C1: 4
 C(4): 9
 C(2) = 9
210: C(C1) = C3
 C1: 4
 C3: 11
 C(4) = 11
220: NEXT C1
 C1: 4
 terminated:false
 C1 = 3
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 3
 C: 1
 C2 = 1
190: C3 = C(C2)
 C2: 1
 C(1): 9
 C3 = 9
200: C(C2) = C(C1)
 C2: 1
 C1: 3
 C(3): 13
 C(1) = 13
210: C(C1) = C3
 C1: 3
 C3: 9
 C(3) = 9
220: NEXT C1
 C1: 3
 terminated:false
 C1 = 2
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 2
 C: 1
 C2 = 1
190: C3 = C(C2)
 C2: 1
 C(1): 13
 C3 = 13
200: C(C2) = C(C1)
 C2: 1
 C1: 2
 C(2): 9
 C(1) = 9
210: C(C1) = C3
 C1: 2
 C3: 13
 C(2) = 13
220: NEXT C1
 C1: 2
 terminated:false
 C1 = 1
180: C2 = INT(RND(1) * (C1 - C + 1)) + C
 C1: 1
 C: 1
 C2 = 1
190: C3 = C(C2)
 C2: 1
 C(1): 9
 C3 = 9
200: C(C2) = C(C1)
 C2: 1
 C1: 1
 C(1): 9
 C(1) = 9
210: C(C1) = C3
 C1: 1
 C3: 9
 C(1) = 9
220: NEXT C1
 C1: 1
 terminated:true
230: X = C(C)
 C: 1
 C(1): 9
 X = 9
240: C = C + 1
 C: 1
 C = 2
250: RETURN
1820: IF C = 2 THEN C = C - 1
 C: 2
 C = 1
 C=2: true
1830: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
1830.1: Z(I) = 0
 I: 1
 Z(1) = 0
1830.2: NEXT I
 I: 1
 terminated:false
 I = 2
1830.1: Z(I) = 0
 I: 2
 Z(2) = 0
1830.2: NEXT I
 I: 2
 terminated:true
1840: FOR I = 1 TO 15
 I = 1
 terminated:false
1840.1: B(I) = 0
 I: 1
 B(1) = 0
1840.2: NEXT I
 I: 1
 terminated:false
 I = 2
1840.1: B(I) = 0
 I: 2
 B(2) = 0
1840.2: NEXT I
 I: 2
 terminated:false
 I = 3
1840.1: B(I) = 0
 I: 3
 B(3) = 0
1840.2: NEXT I
 I: 3
 terminated:false
 I = 4
1840.1: B(I) = 0
 I: 4
 B(4) = 0
1840.2: NEXT I
 I: 4
 terminated:false
 I = 5
1840.1: B(I) = 0
 I: 5
 B(5) = 0
1840.2: NEXT I
 I: 5
 terminated:false
 I = 6
1840.1: B(I) = 0
 I: 6
 B(6) = 0
1840.2: NEXT I
 I: 6
 terminated:false
 I = 7
1840.1: B(I) = 0
 I: 7
 B(7) = 0
1840.2: NEXT I
 I: 7
 terminated:false
 I = 8
1840.1: B(I) = 0
 I: 8
 B(8) = 0
1840.2: NEXT I
 I: 8
 terminated:false
 I = 9
1840.1: B(I) = 0
 I: 9
 B(9) = 0
1840.2: NEXT I
 I: 9
 terminated:false
 I = 10
1840.1: B(I) = 0
 I: 10
 B(10) = 0
1840.2: NEXT I
 I: 10
 terminated:false
 I = 11
1840.1: B(I) = 0
 I: 11
 B(11) = 0
1840.2: NEXT I
 I: 11
 terminated:false
 I = 12
1840.1: B(I) = 0
 I: 12
 B(12) = 0
1840.2: NEXT I
 I: 12
 terminated:false
 I = 13
1840.1: B(I) = 0
 I: 13
 B(13) = 0
1840.2: NEXT I
 I: 13
 terminated:false
 I = 14
1840.1: B(I) = 0
 I: 14
 B(14) = 0
1840.2: NEXT I
 I: 14
 terminated:false
 I = 15
1840.1: B(I) = 0
 I: 15
 B(15) = 0
1840.2: NEXT I
 I: 15
 terminated:true
1850: FOR I = 1 TO 15
 I = 1
 terminated:false
1850.1: Q(I) = 0
 I: 1
 Q(1) = 0
1850.2: NEXT I
 I: 1
 terminated:false
 I = 2
1850.1: Q(I) = 0
 I: 2
 Q(2) = 0
1850.2: NEXT I
 I: 2
 terminated:false
 I = 3
1850.1: Q(I) = 0
 I: 3
 Q(3) = 0
1850.2: NEXT I
 I: 3
 terminated:false
 I = 4
1850.1: Q(I) = 0
 I: 4
 Q(4) = 0
1850.2: NEXT I
 I: 4
 terminated:false
 I = 5
1850.1: Q(I) = 0
 I: 5
 Q(5) = 0
1850.2: NEXT I
 I: 5
 terminated:false
 I = 6
1850.1: Q(I) = 0
 I: 6
 Q(6) = 0
1850.2: NEXT I
 I: 6
 terminated:false
 I = 7
1850.1: Q(I) = 0
 I: 7
 Q(7) = 0
1850.2: NEXT I
 I: 7
 terminated:false
 I = 8
1850.1: Q(I) = 0
 I: 8
 Q(8) = 0
1850.2: NEXT I
 I: 8
 terminated:false
 I = 9
1850.1: Q(I) = 0
 I: 9
 Q(9) = 0
1850.2: NEXT I
 I: 9
 terminated:false
 I = 10
1850.1: Q(I) = 0
 I: 10
 Q(10) = 0
1850.2: NEXT I
 I: 10
 terminated:false
 I = 11
1850.1: Q(I) = 0
 I: 11
 Q(11) = 0
1850.2: NEXT I
 I: 11
 terminated:false
 I = 12
1850.1: Q(I) = 0
 I: 12
 Q(12) = 0
1850.2: NEXT I
 I: 12
 terminated:false
 I = 13
1850.1: Q(I) = 0
 I: 13
 Q(13) = 0
1850.2: NEXT I
 I: 13
 terminated:false
 I = 14
1850.1: Q(I) = 0
 I: 14
 Q(14) = 0
1850.2: NEXT I
 I: 14
 terminated:false
 I = 15
1850.1: Q(I) = 0
 I: 15
 Q(15) = 0
1850.2: NEXT I
 I: 15
 terminated:true
1860: FOR I = 1 TO 7
 I = 1
 terminated:false
1860.1: S(I) = 0
 I: 1
 S(1) = 0
1860.2: NEXT I
 I: 1
 terminated:false
 I = 2
1860.1: S(I) = 0
 I: 2
 S(2) = 0
1860.2: NEXT I
 I: 2
 terminated:false
 I = 3
1860.1: S(I) = 0
 I: 3
 S(3) = 0
1860.2: NEXT I
 I: 3
 terminated:false
 I = 4
1860.1: S(I) = 0
 I: 4
 S(4) = 0
1860.2: NEXT I
 I: 4
 terminated:false
 I = 5
1860.1: S(I) = 0
 I: 5
 S(5) = 0
1860.2: NEXT I
 I: 5
 terminated:false
 I = 6
1860.1: S(I) = 0
 I: 6
 S(6) = 0
1860.2: NEXT I
 I: 6
 terminated:false
 I = 7
1860.1: S(I) = 0
 I: 7
 S(7) = 0
1860.2: NEXT I
 I: 7
 terminated:true
1870: FOR I = 1 TO 15
 I = 1
 terminated:false
1870.1: R(I) = 0
 I: 1
 R(1) = 0
1870.2: NEXT I
 I: 1
 terminated:false
 I = 2
1870.1: R(I) = 0
 I: 2
 R(2) = 0
1870.2: NEXT I
 I: 2
 terminated:false
 I = 3
1870.1: R(I) = 0
 I: 3
 R(3) = 0
1870.2: NEXT I
 I: 3
 terminated:false
 I = 4
1870.1: R(I) = 0
 I: 4
 R(4) = 0
1870.2: NEXT I
 I: 4
 terminated:false
 I = 5
1870.1: R(I) = 0
 I: 5
 R(5) = 0
1870.2: NEXT I
 I: 5
 terminated:false
 I = 6
1870.1: R(I) = 0
 I: 6
 R(6) = 0
1870.2: NEXT I
 I: 6
 terminated:false
 I = 7
1870.1: R(I) = 0
 I: 7
 R(7) = 0
1870.2: NEXT I
 I: 7
 terminated:false
 I = 8
1870.1: R(I) = 0
 I: 8
 R(8) = 0
1870.2: NEXT I
 I: 8
 terminated:false
 I = 9
1870.1: R(I) = 0
 I: 9
 R(9) = 0
1870.2: NEXT I
 I: 9
 terminated:false
 I = 10
1870.1: R(I) = 0
 I: 10
 R(10) = 0
1870.2: NEXT I
 I: 10
 terminated:false
 I = 11
1870.1: R(I) = 0
 I: 11
 R(11) = 0
1870.2: NEXT I
 I: 11
 terminated:false
 I = 12
1870.1: R(I) = 0
 I: 12
 R(12) = 0
1870.2: NEXT I
 I: 12
 terminated:false
 I = 13
1870.1: R(I) = 0
 I: 13
 R(13) = 0
1870.2: NEXT I
 I: 13
 terminated:false
 I = 14
1870.1: R(I) = 0
 I: 14
 R(14) = 0
1870.2: NEXT I
 I: 14
 terminated:false
 I = 15
1870.1: R(I) = 0
 I: 15
 R(15) = 0
1870.2: NEXT I
 I: 15
 terminated:true
1880: PRINT "BETS:"
BETS:
1890: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
1890.1: PRINT "#"; I;
#
 I: 1
 1 
1890.2: INPUT Z(I)
 I: 1
? 50
 Z(1) = 50
1890.3: NEXT I
 I: 1
 terminated:false
 I = 2
1890.1: PRINT "#"; I;
#
 I: 2
 2 
1890.2: INPUT Z(I)
 I: 2
? 45
 Z(2) = 45
1890.3: NEXT I
 I: 2
 terminated:true
1900: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
1910: IF Z(I) <= 0 OR Z(I) > 500 THEN 1880
 I: 1
 Z(1): 50
 Z(I)<=0ORZ(I)>500: false
1920: B(I) = Z(I)
 I: 1
 Z(1): 50
 B(1) = 50
1930: NEXT I
 I: 1
 terminated:false
 I = 2
1910: IF Z(I) <= 0 OR Z(I) > 500 THEN 1880
 I: 2
 Z(2): 45
 Z(I)<=0ORZ(I)>500: false
1920: B(I) = Z(I)
 I: 2
 Z(2): 45
 B(2) = 45
1930: NEXT I
 I: 2
 terminated:true
1940: PRINT "PLAYER  ";
PLAYER  
1950: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
1960: PRINT TAB(I * 7); I;
 I: 1
        1 
1970: NEXT I
 I: 1
 terminated:false
 I = 2
1960: PRINT TAB(I * 7); I;
 I: 2
               2 
1970: NEXT I
 I: 2
 terminated:true
1980: PRINT TAB((N + 1) * 7) "DEALER"
 N: 2
                     DEALER
1990: FOR J = 1 TO 2
 J = 1
 terminated:false
2000: PRINT TAB(7);
       
2010: FOR I = 1 TO D1
 D1: 3
 I = 1
 D1 = 3
 terminated:false
2020: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 1
 C<51: true
230: X = C(C)
 C: 1
 C(1): 9
 X = 9
240: C = C + 1
 C: 1
 C = 2
250: RETURN
2030: P(I, J) = X
 I: 1
 J: 1
 X: 9
 P(1,1) = 9
2040: IF J = 1 OR I <= N THEN GOSUB 750
 J: 1
 I: 1
 N: 2
 J=1ORI<=N: true
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 9
 9
770: PRINT "   ";
   
780: RETURN
2050: NEXT I
 I: 1
 terminated:false
 I = 2
2020: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 2
 C<51: true
230: X = C(C)
 C: 2
 C(2): 13
 X = 13
240: C = C + 1
 C: 2
 C = 3
250: RETURN
2030: P(I, J) = X
 I: 2
 J: 1
 X: 13
 P(2,1) = 13
2040: IF J = 1 OR I <= N THEN GOSUB 750
 J: 1
 I: 2
 N: 2
 J=1ORI<=N: true
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 13
 K
770: PRINT "   ";
   
780: RETURN
2050: NEXT I
 I: 2
 terminated:false
 I = 3
2020: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 3
 C<51: true
230: X = C(C)
 C: 3
 C(3): 9
 X = 9
240: C = C + 1
 C: 3
 C = 4
250: RETURN
2030: P(I, J) = X
 I: 3
 J: 1
 X: 9
 P(3,1) = 9
2040: IF J = 1 OR I <= N THEN GOSUB 750
 J: 1
 I: 3
 N: 2
 J=1ORI<=N: true
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 9
 9
770: PRINT "   ";
   
780: RETURN
2050: NEXT I
 I: 3
 terminated:true
2060: PRINT

2070: NEXT J
 J: 1
 terminated:false
 J = 2
2000: PRINT TAB(7);
       
2010: FOR I = 1 TO D1
 D1: 3
 I = 1
 D1 = 3
 terminated:false
2020: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 4
 C<51: true
230: X = C(C)
 C: 4
 C(4): 11
 X = 11
240: C = C + 1
 C: 4
 C = 5
250: RETURN
2030: P(I, J) = X
 I: 1
 J: 2
 X: 11
 P(1,2) = 11
2040: IF J = 1 OR I <= N THEN GOSUB 750
 J: 2
 I: 1
 N: 2
 J=1ORI<=N: true
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 11
 J
770: PRINT "   ";
   
780: RETURN
2050: NEXT I
 I: 1
 terminated:false
 I = 2
2020: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 5
 C<51: true
230: X = C(C)
 C: 5
 C(5): 10
 X = 10
240: C = C + 1
 C: 5
 C = 6
250: RETURN
2030: P(I, J) = X
 I: 2
 J: 2
 X: 10
 P(2,2) = 10
2040: IF J = 1 OR I <= N THEN GOSUB 750
 J: 2
 I: 2
 N: 2
 J=1ORI<=N: true
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 10
10
770: PRINT "   ";
   
780: RETURN
2050: NEXT I
 I: 2
 terminated:false
 I = 3
2020: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 6
 C<51: true
230: X = C(C)
 C: 6
 C(6): 5
 X = 5
240: C = C + 1
 C: 6
 C = 7
250: RETURN
2030: P(I, J) = X
 I: 3
 J: 2
 X: 5
 P(3,2) = 5
2040: IF J = 1 OR I <= N THEN GOSUB 750
 J: 2
 I: 3
 N: 2
 J=1ORI<=N: false
2050: NEXT I
 I: 3
 terminated:true
2060: PRINT

2070: NEXT J
 J: 2
 terminated:true
2080: FOR I = 1 TO D1
 D1: 3
 I = 1
 D1 = 3
 terminated:false
2090: R(I) = 2
 I: 1
 R(1) = 2
2100: NEXT I
 I: 1
 terminated:false
 I = 2
2090: R(I) = 2
 I: 2
 R(2) = 2
2100: NEXT I
 I: 2
 terminated:false
 I = 3
2090: R(I) = 2
 I: 3
 R(3) = 2
2100: NEXT I
 I: 3
 terminated:true
2110: REM --TEST FOR INSURANCE
2120: IF P(D1, 1) > 1 THEN 2240
 D1: 3
 P(3,1): 9
 P(D1,1)>1: true
2240: REM --TEST FOR DEALER BLACKJACK
2250: L1 = 1
 L1 = 1
2250.1: L2 = 1
 L2 = 1
2252: IF P(D1, 1) = 1 AND P(D1, 2) > 9 THEN L1 = 0
 D1: 3
 P(3,1): 9
 P(3,2): 5
 P(D1,1)=1ANDP(D1,2)>9: false
2252.1: L2 = 0
 L2 = 0
2253: IF P(D1, 2) = 1 AND P(D1, 1) > 9 THEN L1 = 0
 D1: 3
 P(3,2): 5
 P(3,1): 9
 P(D1,2)=1ANDP(D1,1)>9: false
2253.1: L2 = 0
 L2 = 0
2254: IF L1 <> 0 OR L2 <> 0 THEN 2320
 L1: 1
 L2: 0
 L1<>0ORL2<>0: true
2320: REM --NO DEALER BLACKJACK
2330: IF P(D1, 1) > 1 AND P(D1, 1) < 10 THEN 2350
 D1: 3
 P(3,1): 9
 P(D1,1)>1ANDP(D1,1)<10: true
2350: REM --NOW PLAY THE HANDS
2360: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
2370: PRINT "PLAYER"; I;
PLAYER
 I: 1
 1 
2380: H1 = 7
 H1 = 7
2390: GOSUB 1410
1410: REM  I$ DEFINED ELSEWHERE
1420: INPUT H$
? H
 H$ = "H"
1420.1: H$ = LEFT$(H$, 1)
 H$: "H"
 H$ = "H"
1430: FOR H = 1 TO H1 STEP 2
 H1: 7
 H = 1
 H1 = 7
 terminated:false
1440: IF H$ = MID$(I$, H, 1) THEN 1480
 H$: "H"
 I$: "H,S,D,C"
 H: 1
 H$=MID$(I$,H,1): true
1480: H = (H + 1) / 2
 H: 1
 H = 1
1490: RETURN
2400: ON H GOTO 2550, 2410, 2510, 2600
 H: 1
 H = 1
2550: REM --PLAYER WANTS TO BE HIT
2560: GOSUB 300
300: REM --SUBROUTINE TO EVALUATE HAND I.  TOTAL IS PUT INTO
310: REM --Q(I). TOTALS HAVE THE FOLLOWING MEANING:
320: REM --  2-10...HARD 2-10
330: REM -- 11-21...SOFT 11-21
340: REM -- 22-32...HARD 11-21
350: REM --  33+....BUSTED
360: Q = 0
 Q = 0
370: FOR Q2 = 1 TO R(I)
 I: 1
 R(1): 2
 Q2 = 1
 R(I) = 2
 terminated:false
380: X = P(I, Q2)
 I: 1
 Q2: 1
 P(1,1): 9
 X = 9
390: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 9
 X1 = 9
510.1: IF X1 > 10 THEN X1 = 10
 X1: 9
 X1>10: false
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 0
 X1: 9
 Q1 = 9
530: IF Q >= 11 THEN 590
 Q: 0
 Q>=11: false
540: IF X > 1 THEN 570
 X: 9
 X>1: true
570: Q = Q1 - 11 * (Q1 >= 11)
 Q1: 9
 Q = 9
580: RETURN
400: NEXT Q2
 Q2: 1
 terminated:false
 Q2 = 2
380: X = P(I, Q2)
 I: 1
 Q2: 2
 P(1,2): 11
 X = 11
390: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 11
 X1 = 11
510.1: IF X1 > 10 THEN X1 = 10
 X1: 11
 X1 = 10
 X1>10: true
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 9
 X1: 10
 Q1 = 19
530: IF Q >= 11 THEN 590
 Q: 9
 Q>=11: false
540: IF X > 1 THEN 570
 X: 11
 X>1: true
570: Q = Q1 - 11 * (Q1 >= 11)
 Q1: 19
 Q = 30
580: RETURN
400: NEXT Q2
 Q2: 2
 terminated:true
410: Q(I) = Q
 I: 1
 Q: 30
 Q(1) = 30
420: RETURN
2570: H1 = 3
 H1 = 3
2580: GOSUB 950
950: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 7
 C<51: true
230: X = C(C)
 C: 7
 C(7): 1
 X = 1
240: C = C + 1
 C: 7
 C = 8
250: RETURN
960: PRINT "RECEIVED A";
RECEIVED A
970: GOSUB 700
700: REM --CARD PRINTING SUBROUTINE
710: REM  D$ DEFINED ELSEWHERE
720: PRINT MID$(D$, 3 * X - 2, 3);
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 1
  A
730: PRINT "  ";
  
740: RETURN
980: GOSUB 1100
1100: REM --SUBROUTINE TO ADD A CARD TO ROW I
1110: R(I) = R(I) + 1
 I: 1
 R(1): 2
 R(1) = 3
1120: P(I, R(I)) = X
 I: 1
 R(1): 3
 X: 1
 P(1,3) = 1
1130: Q = Q(I)
 I: 1
 Q(1): 30
 Q = 30
1140: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 1
 X1 = 1
510.1: IF X1 > 10 THEN X1 = 10
 X1: 1
 X1>10: false
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 30
 X1: 1
 Q1 = 31
530: IF Q >= 11 THEN 590
 Q: 30
 Q>=11: true
590: Q = Q1 - (Q <= 21 AND Q1 > 21)
 Q1: 31
 Q: 30
 Q = 31
600: IF Q < 33 THEN 620
 Q: 31
 Q<33: true
620: RETURN
1150: Q(I) = Q
 I: 1
 Q: 31
 Q(1) = 31
1160: IF Q >= 0 THEN 1190
 Q: 31
 Q>=0: true
1190: RETURN
990: IF Q < 0 THEN 940
 Q: 31
 Q<0: false
1000: PRINT "HIT";
HIT
1010: GOTO 830
830: GOSUB 1410
1410: REM  I$ DEFINED ELSEWHERE
1420: INPUT H$
? S
 H$ = "S"
1420.1: H$ = LEFT$(H$, 1)
 H$: "S"
 H$ = "S"
1430: FOR H = 1 TO H1 STEP 2
 H1: 3
 H = 1
 H1 = 3
 terminated:false
1440: IF H$ = MID$(I$, H, 1) THEN 1480
 H$: "S"
 I$: "H,S,D,C"
 H: 1
 H$=MID$(I$,H,1): false
1450: NEXT H
 H: 1
 terminated:false
 H = 3
1440: IF H$ = MID$(I$, H, 1) THEN 1480
 H$: "S"
 I$: "H,S,D,C"
 H: 3
 H$=MID$(I$,H,1): true
1480: H = (H + 1) / 2
 H: 3
 H = 2
1490: RETURN
840: H1 = 3
 H1 = 3
850: ON H GOTO 950, 930
 H: 2
 H = 2
930: GOSUB 1320
1320: AA = Q(I)
 I: 1
 Q(1): 31
 AA = 31
1320.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: 31
 AA = 20
3400.1: RETURN
1325: PRINT "TOTAL IS"; AA
TOTAL IS
 AA: 20
 20
1330: RETURN
940: RETURN
2590: GOTO 2900
2900: NEXT I
 I: 1
 terminated:false
 I = 2
2370: PRINT "PLAYER"; I;
PLAYER
 I: 2
 2 
2380: H1 = 7
 H1 = 7
2390: GOSUB 1410
1410: REM  I$ DEFINED ELSEWHERE
1420: INPUT H$
? S
 H$ = "S"
1420.1: H$ = LEFT$(H$, 1)
 H$: "S"
 H$ = "S"
1430: FOR H = 1 TO H1 STEP 2
 H1: 7
 H = 1
 H1 = 7
 terminated:false
1440: IF H$ = MID$(I$, H, 1) THEN 1480
 H$: "S"
 I$: "H,S,D,C"
 H: 1
 H$=MID$(I$,H,1): false
1450: NEXT H
 H: 1
 terminated:false
 H = 3
1440: IF H$ = MID$(I$, H, 1) THEN 1480
 H$: "S"
 I$: "H,S,D,C"
 H: 3
 H$=MID$(I$,H,1): true
1480: H = (H + 1) / 2
 H: 3
 H = 2
1490: RETURN
2400: ON H GOTO 2550, 2410, 2510, 2600
 H: 2
 H = 2
2410: REM --PLAYER WANTS TO STAND
2420: GOSUB 300
300: REM --SUBROUTINE TO EVALUATE HAND I.  TOTAL IS PUT INTO
310: REM --Q(I). TOTALS HAVE THE FOLLOWING MEANING:
320: REM --  2-10...HARD 2-10
330: REM -- 11-21...SOFT 11-21
340: REM -- 22-32...HARD 11-21
350: REM --  33+....BUSTED
360: Q = 0
 Q = 0
370: FOR Q2 = 1 TO R(I)
 I: 2
 R(2): 2
 Q2 = 1
 R(I) = 2
 terminated:false
380: X = P(I, Q2)
 I: 2
 Q2: 1
 P(2,1): 13
 X = 13
390: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 13
 X1 = 13
510.1: IF X1 > 10 THEN X1 = 10
 X1: 13
 X1 = 10
 X1>10: true
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 0
 X1: 10
 Q1 = 10
530: IF Q >= 11 THEN 590
 Q: 0
 Q>=11: false
540: IF X > 1 THEN 570
 X: 13
 X>1: true
570: Q = Q1 - 11 * (Q1 >= 11)
 Q1: 10
 Q = 10
580: RETURN
400: NEXT Q2
 Q2: 1
 terminated:false
 Q2 = 2
380: X = P(I, Q2)
 I: 2
 Q2: 2
 P(2,2): 10
 X = 10
390: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 10
 X1 = 10
510.1: IF X1 > 10 THEN X1 = 10
 X1: 10
 X1>10: false
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 10
 X1: 10
 Q1 = 20
530: IF Q >= 11 THEN 590
 Q: 10
 Q>=11: false
540: IF X > 1 THEN 570
 X: 10
 X>1: true
570: Q = Q1 - 11 * (Q1 >= 11)
 Q1: 20
 Q = 31
580: RETURN
400: NEXT Q2
 Q2: 2
 terminated:true
410: Q(I) = Q
 I: 2
 Q: 31
 Q(2) = 31
420: RETURN
2430: IF Q(I) <> 21 THEN 2490
 I: 2
 Q(2): 31
 Q(I)<>21: true
2490: GOSUB 1320
1320: AA = Q(I)
 I: 2
 Q(2): 31
 AA = 31
1320.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: 31
 AA = 20
3400.1: RETURN
1325: PRINT "TOTAL IS"; AA
TOTAL IS
 AA: 20
 20
1330: RETURN
2500: GOTO 2900
2900: NEXT I
 I: 2
 terminated:true
2910: GOSUB 300
300: REM --SUBROUTINE TO EVALUATE HAND I.  TOTAL IS PUT INTO
310: REM --Q(I). TOTALS HAVE THE FOLLOWING MEANING:
320: REM --  2-10...HARD 2-10
330: REM -- 11-21...SOFT 11-21
340: REM -- 22-32...HARD 11-21
350: REM --  33+....BUSTED
360: Q = 0
 Q = 0
370: FOR Q2 = 1 TO R(I)
 I: 2
 R(2): 2
 Q2 = 1
 R(I) = 2
 terminated:false
380: X = P(I, Q2)
 I: 2
 Q2: 1
 P(2,1): 13
 X = 13
390: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 13
 X1 = 13
510.1: IF X1 > 10 THEN X1 = 10
 X1: 13
 X1 = 10
 X1>10: true
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 0
 X1: 10
 Q1 = 10
530: IF Q >= 11 THEN 590
 Q: 0
 Q>=11: false
540: IF X > 1 THEN 570
 X: 13
 X>1: true
570: Q = Q1 - 11 * (Q1 >= 11)
 Q1: 10
 Q = 10
580: RETURN
400: NEXT Q2
 Q2: 1
 terminated:false
 Q2 = 2
380: X = P(I, Q2)
 I: 2
 Q2: 2
 P(2,2): 10
 X = 10
390: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 10
 X1 = 10
510.1: IF X1 > 10 THEN X1 = 10
 X1: 10
 X1>10: false
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 10
 X1: 10
 Q1 = 20
530: IF Q >= 11 THEN 590
 Q: 10
 Q>=11: false
540: IF X > 1 THEN 570
 X: 10
 X>1: true
570: Q = Q1 - 11 * (Q1 >= 11)
 Q1: 20
 Q = 31
580: RETURN
400: NEXT Q2
 Q2: 2
 terminated:true
410: Q(I) = Q
 I: 2
 Q: 31
 Q(2) = 31
420: RETURN
2920: REM --TEST FOR PLAYING DEALER'S HAND
2930: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
2940: IF R(I) > 0 OR R(I + D1) > 0 THEN 3010
 I: 1
 R(1): 3
 D1: 3
 R(4): 0
 R(I)>0ORR(I+D1)>0: true
3010: PRINT "DEALER HAS A"; MID$(D$, 3 * P(D1, 2) - 2, 3); " CONCEALED ";
DEALER HAS A
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 D1: 3
 P(3,2): 5
  5 CONCEALED 
3020: I = D1
 D1: 3
 I = 3
3030: AA = Q(I)
 I: 3
 Q(3): 0
 AA = 0
3030.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: 0
 AA = 0
3400.1: RETURN
3035: PRINT "FOR A TOTAL OF"; AA
FOR A TOTAL OF
 AA: 0
 0
3040: IF AA > 16 THEN 3130
 AA: 0
 AA>16: false
3050: PRINT "DRAWS";
DRAWS
3060: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 8
 C<51: true
230: X = C(C)
 C: 8
 C(8): 4
 X = 4
240: C = C + 1
 C: 8
 C = 9
250: RETURN
3070: GOSUB 750
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 4
 4
770: PRINT "   ";
   
780: RETURN
3080: GOSUB 1100
1100: REM --SUBROUTINE TO ADD A CARD TO ROW I
1110: R(I) = R(I) + 1
 I: 3
 R(3): 2
 R(3) = 3
1120: P(I, R(I)) = X
 I: 3
 R(3): 3
 X: 4
 P(3,3) = 4
1130: Q = Q(I)
 I: 3
 Q(3): 0
 Q = 0
1140: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 4
 X1 = 4
510.1: IF X1 > 10 THEN X1 = 10
 X1: 4
 X1>10: false
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 0
 X1: 4
 Q1 = 4
530: IF Q >= 11 THEN 590
 Q: 0
 Q>=11: false
540: IF X > 1 THEN 570
 X: 4
 X>1: true
570: Q = Q1 - 11 * (Q1 >= 11)
 Q1: 4
 Q = 4
580: RETURN
1150: Q(I) = Q
 I: 3
 Q: 4
 Q(3) = 4
1160: IF Q >= 0 THEN 1190
 Q: 4
 Q>=0: true
1190: RETURN
3090: AA = Q
 Q: 4
 AA = 4
3090.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: 4
 AA = 4
3400.1: RETURN
3095: IF Q > 0 AND AA < 17 THEN 3060
 Q: 4
 AA: 4
 Q>0ANDAA<17: true
3060: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 9
 C<51: true
230: X = C(C)
 C: 9
 C(9): 12
 X = 12
240: C = C + 1
 C: 9
 C = 10
250: RETURN
3070: GOSUB 750
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 12
 Q
770: PRINT "   ";
   
780: RETURN
3080: GOSUB 1100
1100: REM --SUBROUTINE TO ADD A CARD TO ROW I
1110: R(I) = R(I) + 1
 I: 3
 R(3): 3
 R(3) = 4
1120: P(I, R(I)) = X
 I: 3
 R(3): 4
 X: 12
 P(3,4) = 12
1130: Q = Q(I)
 I: 3
 Q(3): 4
 Q = 4
1140: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 12
 X1 = 12
510.1: IF X1 > 10 THEN X1 = 10
 X1: 12
 X1 = 10
 X1>10: true
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 4
 X1: 10
 Q1 = 14
530: IF Q >= 11 THEN 590
 Q: 4
 Q>=11: false
540: IF X > 1 THEN 570
 X: 12
 X>1: true
570: Q = Q1 - 11 * (Q1 >= 11)
 Q1: 14
 Q = 25
580: RETURN
1150: Q(I) = Q
 I: 3
 Q: 25
 Q(3) = 25
1160: IF Q >= 0 THEN 1190
 Q: 25
 Q>=0: true
1190: RETURN
3090: AA = Q
 Q: 25
 AA = 25
3090.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: 25
 AA = 14
3400.1: RETURN
3095: IF Q > 0 AND AA < 17 THEN 3060
 Q: 25
 AA: 14
 Q>0ANDAA<17: true
3060: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 10
 C<51: true
230: X = C(C)
 C: 10
 C(10): 13
 X = 13
240: C = C + 1
 C: 10
 C = 11
250: RETURN
3070: GOSUB 750
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 13
 K
770: PRINT "   ";
   
780: RETURN
3080: GOSUB 1100
1100: REM --SUBROUTINE TO ADD A CARD TO ROW I
1110: R(I) = R(I) + 1
 I: 3
 R(3): 4
 R(3) = 5
1120: P(I, R(I)) = X
 I: 3
 R(3): 5
 X: 13
 P(3,5) = 13
1130: Q = Q(I)
 I: 3
 Q(3): 25
 Q = 25
1140: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 13
 X1 = 13
510.1: IF X1 > 10 THEN X1 = 10
 X1: 13
 X1 = 10
 X1>10: true
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 25
 X1: 10
 Q1 = 35
530: IF Q >= 11 THEN 590
 Q: 25
 Q>=11: true
590: Q = Q1 - (Q <= 21 AND Q1 > 21)
 Q1: 35
 Q: 25
 Q = 35
600: IF Q < 33 THEN 620
 Q: 35
 Q<33: false
610: Q = -1
 Q = -1
620: RETURN
1150: Q(I) = Q
 I: 3
 Q: -1
 Q(3) = -1
1160: IF Q >= 0 THEN 1190
 Q: -1
 Q>=0: false
1170: PRINT "...BUSTED"
...BUSTED
1180: GOSUB 1200
1200: REM --SUBROUTINE TO DISCARD ROW I
1210: IF R(I) <> 0 THEN 1230
 I: 3
 R(3): 5
 R(I)<>0: true
1230: D = D + 1
 D: 1
 D = 2
1240: D(D) = P(I, R(I))
 D: 2
 I: 3
 R(3): 5
 P(3,5): 13
 D(2) = 13
1250: R(I) = R(I) - 1
 I: 3
 R(3): 5
 R(3) = 4
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 3
 R(3): 4
 R(I)<>0: true
1230: D = D + 1
 D: 2
 D = 3
1240: D(D) = P(I, R(I))
 D: 3
 I: 3
 R(3): 4
 P(3,4): 12
 D(3) = 12
1250: R(I) = R(I) - 1
 I: 3
 R(3): 4
 R(3) = 3
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 3
 R(3): 3
 R(I)<>0: true
1230: D = D + 1
 D: 3
 D = 4
1240: D(D) = P(I, R(I))
 D: 4
 I: 3
 R(3): 3
 P(3,3): 4
 D(4) = 4
1250: R(I) = R(I) - 1
 I: 3
 R(3): 3
 R(3) = 2
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 3
 R(3): 2
 R(I)<>0: true
1230: D = D + 1
 D: 4
 D = 5
1240: D(D) = P(I, R(I))
 D: 5
 I: 3
 R(3): 2
 P(3,2): 5
 D(5) = 5
1250: R(I) = R(I) - 1
 I: 3
 R(3): 2
 R(3) = 1
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 3
 R(3): 1
 R(I)<>0: true
1230: D = D + 1
 D: 5
 D = 6
1240: D(D) = P(I, R(I))
 D: 6
 I: 3
 R(3): 1
 P(3,1): 9
 D(6) = 9
1250: R(I) = R(I) - 1
 I: 3
 R(3): 1
 R(3) = 0
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 3
 R(3): 0
 R(I)<>0: false
1220: RETURN
1190: RETURN
3090: AA = Q
 Q: -1
 AA = -1
3090.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: -1
 AA = -1
3400.1: RETURN
3095: IF Q > 0 AND AA < 17 THEN 3060
 Q: -1
 AA: -1
 Q>0ANDAA<17: false
3100: Q(I) = Q - (Q < 0) / 2
 I: 3
 Q: -1
 Q(3) = -0.5
3110: IF Q < 0 THEN 3140
 Q: -1
 Q<0: true
3140: REM --TALLY THE RESULT
3150: REM
3160: Z$ = "LOSES PUSHES WINS "
 Z$ = "LOSES PUSHES WINS "
3165: PRINT

3170: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
3180: AA = Q(I)
 I: 1
 Q(1): 31
 AA = 31
3180.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: 31
 AA = 20
3400.1: RETURN
3182: AB = Q(I + D1)
 I: 1
 D1: 3
 Q(4): 0
 AB = 0
3182.1: GOSUB 3410
3410: AB = AB + 11 * (AB >= 22)
 AB: 0
 AB = 0
3410.1: RETURN
3184: AC = Q(D1)
 D1: 3
 Q(3): -0.5
 AC = -0.5
3184.1: GOSUB 3420
3420: AC = AC + 11 * (AC >= 22)
 AC: -0.5
 AC = -0.5
3420.1: RETURN
3186: S(I) = S(I) + B(I) * SGN(AA - AC) + B(I + D1) * SGN(AB - AC)
 I: 1
 S(1): 0
 B(1): 50
 AA: 20
 AC: -0.5
 D1: 3
 B(4): 0
 AB: 0
 S(1) = 50
3188: B(I + D1) = 0
 I: 1
 D1: 3
 B(4) = 0
3200: PRINT "PLAYER"; I;
PLAYER
 I: 1
 1 
3210: PRINT MID$(Z$, SGN(S(I)) * 6 + 7, 6); " ";
 Z$: "LOSES PUSHES WINS "
 I: 1
 S(1): 50
 WINS  
3220: IF S(I) <> 0 THEN 3250
 I: 1
 S(1): 50
 S(I)<>0: true
3250: PRINT ABS(S(I));
 I: 1
 S(1): 50
 50 
3260: T(I) = T(I) + S(I)
 I: 1
 T(1): 0
 S(1): 50
 T(1) = 50
3270: PRINT "TOTAL="; T(I)
TOTAL=
 I: 1
 T(1): 50
 50
3280: GOSUB 1200
1200: REM --SUBROUTINE TO DISCARD ROW I
1210: IF R(I) <> 0 THEN 1230
 I: 1
 R(1): 3
 R(I)<>0: true
1230: D = D + 1
 D: 6
 D = 7
1240: D(D) = P(I, R(I))
 D: 7
 I: 1
 R(1): 3
 P(1,3): 1
 D(7) = 1
1250: R(I) = R(I) - 1
 I: 1
 R(1): 3
 R(1) = 2
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 1
 R(1): 2
 R(I)<>0: true
1230: D = D + 1
 D: 7
 D = 8
1240: D(D) = P(I, R(I))
 D: 8
 I: 1
 R(1): 2
 P(1,2): 11
 D(8) = 11
1250: R(I) = R(I) - 1
 I: 1
 R(1): 2
 R(1) = 1
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 1
 R(1): 1
 R(I)<>0: true
1230: D = D + 1
 D: 8
 D = 9
1240: D(D) = P(I, R(I))
 D: 9
 I: 1
 R(1): 1
 P(1,1): 9
 D(9) = 9
1250: R(I) = R(I) - 1
 I: 1
 R(1): 1
 R(1) = 0
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 1
 R(1): 0
 R(I)<>0: false
1220: RETURN
3290: T(D1) = T(D1) - S(I)
 D1: 3
 T(3): 0
 I: 1
 S(1): 50
 T(3) = -50
3300: I = I + D1
 I: 1
 D1: 3
 I = 4
3310: GOSUB 1200
1200: REM --SUBROUTINE TO DISCARD ROW I
1210: IF R(I) <> 0 THEN 1230
 I: 4
 R(4): 0
 R(I)<>0: false
1220: RETURN
3320: I = I - D1
 I: 4
 D1: 3
 I = 1
3330: NEXT I
 I: 1
 terminated:false
 I = 2
3180: AA = Q(I)
 I: 2
 Q(2): 31
 AA = 31
3180.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: 31
 AA = 20
3400.1: RETURN
3182: AB = Q(I + D1)
 I: 2
 D1: 3
 Q(5): 0
 AB = 0
3182.1: GOSUB 3410
3410: AB = AB + 11 * (AB >= 22)
 AB: 0
 AB = 0
3410.1: RETURN
3184: AC = Q(D1)
 D1: 3
 Q(3): -0.5
 AC = -0.5
3184.1: GOSUB 3420
3420: AC = AC + 11 * (AC >= 22)
 AC: -0.5
 AC = -0.5
3420.1: RETURN
3186: S(I) = S(I) + B(I) * SGN(AA - AC) + B(I + D1) * SGN(AB - AC)
 I: 2
 S(2): 0
 B(2): 45
 AA: 20
 AC: -0.5
 D1: 3
 B(5): 0
 AB: 0
 S(2) = 45
3188: B(I + D1) = 0
 I: 2
 D1: 3
 B(5) = 0
3200: PRINT "PLAYER"; I;
PLAYER
 I: 2
 2 
3210: PRINT MID$(Z$, SGN(S(I)) * 6 + 7, 6); " ";
 Z$: "LOSES PUSHES WINS "
 I: 2
 S(2): 45
 WINS  
3220: IF S(I) <> 0 THEN 3250
 I: 2
 S(2): 45
 S(I)<>0: true
3250: PRINT ABS(S(I));
 I: 2
 S(2): 45
 45 
3260: T(I) = T(I) + S(I)
 I: 2
 T(2): 0
 S(2): 45
 T(2) = 45
3270: PRINT "TOTAL="; T(I)
TOTAL=
 I: 2
 T(2): 45
 45
3280: GOSUB 1200
1200: REM --SUBROUTINE TO DISCARD ROW I
1210: IF R(I) <> 0 THEN 1230
 I: 2
 R(2): 2
 R(I)<>0: true
1230: D = D + 1
 D: 9
 D = 10
1240: D(D) = P(I, R(I))
 D: 10
 I: 2
 R(2): 2
 P(2,2): 10
 D(10) = 10
1250: R(I) = R(I) - 1
 I: 2
 R(2): 2
 R(2) = 1
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 2
 R(2): 1
 R(I)<>0: true
1230: D = D + 1
 D: 10
 D = 11
1240: D(D) = P(I, R(I))
 D: 11
 I: 2
 R(2): 1
 P(2,1): 13
 D(11) = 13
1250: R(I) = R(I) - 1
 I: 2
 R(2): 1
 R(2) = 0
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 2
 R(2): 0
 R(I)<>0: false
1220: RETURN
3290: T(D1) = T(D1) - S(I)
 D1: 3
 T(3): -50
 I: 2
 S(2): 45
 T(3) = -95
3300: I = I + D1
 I: 2
 D1: 3
 I = 5
3310: GOSUB 1200
1200: REM --SUBROUTINE TO DISCARD ROW I
1210: IF R(I) <> 0 THEN 1230
 I: 5
 R(5): 0
 R(I)<>0: false
1220: RETURN
3320: I = I - D1
 I: 5
 D1: 3
 I = 2
3330: NEXT I
 I: 2
 terminated:true
3340: PRINT "DEALER'S TOTAL="; T(D1)
DEALER'S TOTAL=
 D1: 3
 T(3): -95
-95
3345: PRINT

3350: GOSUB 1200
1200: REM --SUBROUTINE TO DISCARD ROW I
1210: IF R(I) <> 0 THEN 1230
 I: 2
 R(2): 0
 R(I)<>0: false
1220: RETURN
3360: GOTO 1810
1810: IF 2 * D1 + C >= 52 THEN GOSUB 120
 D1: 3
 C: 11
 2*D1+C>=52: false
1820: IF C = 2 THEN C = C - 1
 C: 11
 C=2: false
1830: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
1830.1: Z(I) = 0
 I: 1
 Z(1) = 0
1830.2: NEXT I
 I: 1
 terminated:false
 I = 2
1830.1: Z(I) = 0
 I: 2
 Z(2) = 0
1830.2: NEXT I
 I: 2
 terminated:true
1840: FOR I = 1 TO 15
 I = 1
 terminated:false
1840.1: B(I) = 0
 I: 1
 B(1) = 0
1840.2: NEXT I
 I: 1
 terminated:false
 I = 2
1840.1: B(I) = 0
 I: 2
 B(2) = 0
1840.2: NEXT I
 I: 2
 terminated:false
 I = 3
1840.1: B(I) = 0
 I: 3
 B(3) = 0
1840.2: NEXT I
 I: 3
 terminated:false
 I = 4
1840.1: B(I) = 0
 I: 4
 B(4) = 0
1840.2: NEXT I
 I: 4
 terminated:false
 I = 5
1840.1: B(I) = 0
 I: 5
 B(5) = 0
1840.2: NEXT I
 I: 5
 terminated:false
 I = 6
1840.1: B(I) = 0
 I: 6
 B(6) = 0
1840.2: NEXT I
 I: 6
 terminated:false
 I = 7
1840.1: B(I) = 0
 I: 7
 B(7) = 0
1840.2: NEXT I
 I: 7
 terminated:false
 I = 8
1840.1: B(I) = 0
 I: 8
 B(8) = 0
1840.2: NEXT I
 I: 8
 terminated:false
 I = 9
1840.1: B(I) = 0
 I: 9
 B(9) = 0
1840.2: NEXT I
 I: 9
 terminated:false
 I = 10
1840.1: B(I) = 0
 I: 10
 B(10) = 0
1840.2: NEXT I
 I: 10
 terminated:false
 I = 11
1840.1: B(I) = 0
 I: 11
 B(11) = 0
1840.2: NEXT I
 I: 11
 terminated:false
 I = 12
1840.1: B(I) = 0
 I: 12
 B(12) = 0
1840.2: NEXT I
 I: 12
 terminated:false
 I = 13
1840.1: B(I) = 0
 I: 13
 B(13) = 0
1840.2: NEXT I
 I: 13
 terminated:false
 I = 14
1840.1: B(I) = 0
 I: 14
 B(14) = 0
1840.2: NEXT I
 I: 14
 terminated:false
 I = 15
1840.1: B(I) = 0
 I: 15
 B(15) = 0
1840.2: NEXT I
 I: 15
 terminated:true
1850: FOR I = 1 TO 15
 I = 1
 terminated:false
1850.1: Q(I) = 0
 I: 1
 Q(1) = 0
1850.2: NEXT I
 I: 1
 terminated:false
 I = 2
1850.1: Q(I) = 0
 I: 2
 Q(2) = 0
1850.2: NEXT I
 I: 2
 terminated:false
 I = 3
1850.1: Q(I) = 0
 I: 3
 Q(3) = 0
1850.2: NEXT I
 I: 3
 terminated:false
 I = 4
1850.1: Q(I) = 0
 I: 4
 Q(4) = 0
1850.2: NEXT I
 I: 4
 terminated:false
 I = 5
1850.1: Q(I) = 0
 I: 5
 Q(5) = 0
1850.2: NEXT I
 I: 5
 terminated:false
 I = 6
1850.1: Q(I) = 0
 I: 6
 Q(6) = 0
1850.2: NEXT I
 I: 6
 terminated:false
 I = 7
1850.1: Q(I) = 0
 I: 7
 Q(7) = 0
1850.2: NEXT I
 I: 7
 terminated:false
 I = 8
1850.1: Q(I) = 0
 I: 8
 Q(8) = 0
1850.2: NEXT I
 I: 8
 terminated:false
 I = 9
1850.1: Q(I) = 0
 I: 9
 Q(9) = 0
1850.2: NEXT I
 I: 9
 terminated:false
 I = 10
1850.1: Q(I) = 0
 I: 10
 Q(10) = 0
1850.2: NEXT I
 I: 10
 terminated:false
 I = 11
1850.1: Q(I) = 0
 I: 11
 Q(11) = 0
1850.2: NEXT I
 I: 11
 terminated:false
 I = 12
1850.1: Q(I) = 0
 I: 12
 Q(12) = 0
1850.2: NEXT I
 I: 12
 terminated:false
 I = 13
1850.1: Q(I) = 0
 I: 13
 Q(13) = 0
1850.2: NEXT I
 I: 13
 terminated:false
 I = 14
1850.1: Q(I) = 0
 I: 14
 Q(14) = 0
1850.2: NEXT I
 I: 14
 terminated:false
 I = 15
1850.1: Q(I) = 0
 I: 15
 Q(15) = 0
1850.2: NEXT I
 I: 15
 terminated:true
1860: FOR I = 1 TO 7
 I = 1
 terminated:false
1860.1: S(I) = 0
 I: 1
 S(1) = 0
1860.2: NEXT I
 I: 1
 terminated:false
 I = 2
1860.1: S(I) = 0
 I: 2
 S(2) = 0
1860.2: NEXT I
 I: 2
 terminated:false
 I = 3
1860.1: S(I) = 0
 I: 3
 S(3) = 0
1860.2: NEXT I
 I: 3
 terminated:false
 I = 4
1860.1: S(I) = 0
 I: 4
 S(4) = 0
1860.2: NEXT I
 I: 4
 terminated:false
 I = 5
1860.1: S(I) = 0
 I: 5
 S(5) = 0
1860.2: NEXT I
 I: 5
 terminated:false
 I = 6
1860.1: S(I) = 0
 I: 6
 S(6) = 0
1860.2: NEXT I
 I: 6
 terminated:false
 I = 7
1860.1: S(I) = 0
 I: 7
 S(7) = 0
1860.2: NEXT I
 I: 7
 terminated:true
1870: FOR I = 1 TO 15
 I = 1
 terminated:false
1870.1: R(I) = 0
 I: 1
 R(1) = 0
1870.2: NEXT I
 I: 1
 terminated:false
 I = 2
1870.1: R(I) = 0
 I: 2
 R(2) = 0
1870.2: NEXT I
 I: 2
 terminated:false
 I = 3
1870.1: R(I) = 0
 I: 3
 R(3) = 0
1870.2: NEXT I
 I: 3
 terminated:false
 I = 4
1870.1: R(I) = 0
 I: 4
 R(4) = 0
1870.2: NEXT I
 I: 4
 terminated:false
 I = 5
1870.1: R(I) = 0
 I: 5
 R(5) = 0
1870.2: NEXT I
 I: 5
 terminated:false
 I = 6
1870.1: R(I) = 0
 I: 6
 R(6) = 0
1870.2: NEXT I
 I: 6
 terminated:false
 I = 7
1870.1: R(I) = 0
 I: 7
 R(7) = 0
1870.2: NEXT I
 I: 7
 terminated:false
 I = 8
1870.1: R(I) = 0
 I: 8
 R(8) = 0
1870.2: NEXT I
 I: 8
 terminated:false
 I = 9
1870.1: R(I) = 0
 I: 9
 R(9) = 0
1870.2: NEXT I
 I: 9
 terminated:false
 I = 10
1870.1: R(I) = 0
 I: 10
 R(10) = 0
1870.2: NEXT I
 I: 10
 terminated:false
 I = 11
1870.1: R(I) = 0
 I: 11
 R(11) = 0
1870.2: NEXT I
 I: 11
 terminated:false
 I = 12
1870.1: R(I) = 0
 I: 12
 R(12) = 0
1870.2: NEXT I
 I: 12
 terminated:false
 I = 13
1870.1: R(I) = 0
 I: 13
 R(13) = 0
1870.2: NEXT I
 I: 13
 terminated:false
 I = 14
1870.1: R(I) = 0
 I: 14
 R(14) = 0
1870.2: NEXT I
 I: 14
 terminated:false
 I = 15
1870.1: R(I) = 0
 I: 15
 R(15) = 0
1870.2: NEXT I
 I: 15
 terminated:true
1880: PRINT "BETS:"
BETS:
1890: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
1890.1: PRINT "#"; I;
#
 I: 1
 1 
1890.2: INPUT Z(I)
 I: 1
? 50
 Z(1) = 50
1890.3: NEXT I
 I: 1
 terminated:false
 I = 2
1890.1: PRINT "#"; I;
#
 I: 2
 2 
1890.2: INPUT Z(I)
 I: 2
? 45
 Z(2) = 45
1890.3: NEXT I
 I: 2
 terminated:true
1900: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
1910: IF Z(I) <= 0 OR Z(I) > 500 THEN 1880
 I: 1
 Z(1): 50
 Z(I)<=0ORZ(I)>500: false
1920: B(I) = Z(I)
 I: 1
 Z(1): 50
 B(1) = 50
1930: NEXT I
 I: 1
 terminated:false
 I = 2
1910: IF Z(I) <= 0 OR Z(I) > 500 THEN 1880
 I: 2
 Z(2): 45
 Z(I)<=0ORZ(I)>500: false
1920: B(I) = Z(I)
 I: 2
 Z(2): 45
 B(2) = 45
1930: NEXT I
 I: 2
 terminated:true
1940: PRINT "PLAYER  ";
PLAYER  
1950: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
1960: PRINT TAB(I * 7); I;
 I: 1
        1 
1970: NEXT I
 I: 1
 terminated:false
 I = 2
1960: PRINT TAB(I * 7); I;
 I: 2
               2 
1970: NEXT I
 I: 2
 terminated:true
1980: PRINT TAB((N + 1) * 7) "DEALER"
 N: 2
                     DEALER
1990: FOR J = 1 TO 2
 J = 1
 terminated:false
2000: PRINT TAB(7);
       
2010: FOR I = 1 TO D1
 D1: 3
 I = 1
 D1 = 3
 terminated:false
2020: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 11
 C<51: true
230: X = C(C)
 C: 11
 C(11): 6
 X = 6
240: C = C + 1
 C: 11
 C = 12
250: RETURN
2030: P(I, J) = X
 I: 1
 J: 1
 X: 6
 P(1,1) = 6
2040: IF J = 1 OR I <= N THEN GOSUB 750
 J: 1
 I: 1
 N: 2
 J=1ORI<=N: true
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 6
 6
770: PRINT "   ";
   
780: RETURN
2050: NEXT I
 I: 1
 terminated:false
 I = 2
2020: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 12
 C<51: true
230: X = C(C)
 C: 12
 C(12): 3
 X = 3
240: C = C + 1
 C: 12
 C = 13
250: RETURN
2030: P(I, J) = X
 I: 2
 J: 1
 X: 3
 P(2,1) = 3
2040: IF J = 1 OR I <= N THEN GOSUB 750
 J: 1
 I: 2
 N: 2
 J=1ORI<=N: true
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 3
 3
770: PRINT "   ";
   
780: RETURN
2050: NEXT I
 I: 2
 terminated:false
 I = 3
2020: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 13
 C<51: true
230: X = C(C)
 C: 13
 C(13): 8
 X = 8
240: C = C + 1
 C: 13
 C = 14
250: RETURN
2030: P(I, J) = X
 I: 3
 J: 1
 X: 8
 P(3,1) = 8
2040: IF J = 1 OR I <= N THEN GOSUB 750
 J: 1
 I: 3
 N: 2
 J=1ORI<=N: true
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 8
 8
770: PRINT "   ";
   
780: RETURN
2050: NEXT I
 I: 3
 terminated:true
2060: PRINT

2070: NEXT J
 J: 1
 terminated:false
 J = 2
2000: PRINT TAB(7);
       
2010: FOR I = 1 TO D1
 D1: 3
 I = 1
 D1 = 3
 terminated:false
2020: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 14
 C<51: true
230: X = C(C)
 C: 14
 C(14): 7
 X = 7
240: C = C + 1
 C: 14
 C = 15
250: RETURN
2030: P(I, J) = X
 I: 1
 J: 2
 X: 7
 P(1,2) = 7
2040: IF J = 1 OR I <= N THEN GOSUB 750
 J: 2
 I: 1
 N: 2
 J=1ORI<=N: true
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 7
 7
770: PRINT "   ";
   
780: RETURN
2050: NEXT I
 I: 1
 terminated:false
 I = 2
2020: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 15
 C<51: true
230: X = C(C)
 C: 15
 C(15): 11
 X = 11
240: C = C + 1
 C: 15
 C = 16
250: RETURN
2030: P(I, J) = X
 I: 2
 J: 2
 X: 11
 P(2,2) = 11
2040: IF J = 1 OR I <= N THEN GOSUB 750
 J: 2
 I: 2
 N: 2
 J=1ORI<=N: true
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 11
 J
770: PRINT "   ";
   
780: RETURN
2050: NEXT I
 I: 2
 terminated:false
 I = 3
2020: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 16
 C<51: true
230: X = C(C)
 C: 16
 C(16): 5
 X = 5
240: C = C + 1
 C: 16
 C = 17
250: RETURN
2030: P(I, J) = X
 I: 3
 J: 2
 X: 5
 P(3,2) = 5
2040: IF J = 1 OR I <= N THEN GOSUB 750
 J: 2
 I: 3
 N: 2
 J=1ORI<=N: false
2050: NEXT I
 I: 3
 terminated:true
2060: PRINT

2070: NEXT J
 J: 2
 terminated:true
2080: FOR I = 1 TO D1
 D1: 3
 I = 1
 D1 = 3
 terminated:false
2090: R(I) = 2
 I: 1
 R(1) = 2
2100: NEXT I
 I: 1
 terminated:false
 I = 2
2090: R(I) = 2
 I: 2
 R(2) = 2
2100: NEXT I
 I: 2
 terminated:false
 I = 3
2090: R(I) = 2
 I: 3
 R(3) = 2
2100: NEXT I
 I: 3
 terminated:true
2110: REM --TEST FOR INSURANCE
2120: IF P(D1, 1) > 1 THEN 2240
 D1: 3
 P(3,1): 8
 P(D1,1)>1: true
2240: REM --TEST FOR DEALER BLACKJACK
2250: L1 = 1
 L1 = 1
2250.1: L2 = 1
 L2 = 1
2252: IF P(D1, 1) = 1 AND P(D1, 2) > 9 THEN L1 = 0
 D1: 3
 P(3,1): 8
 P(3,2): 5
 P(D1,1)=1ANDP(D1,2)>9: false
2252.1: L2 = 0
 L2 = 0
2253: IF P(D1, 2) = 1 AND P(D1, 1) > 9 THEN L1 = 0
 D1: 3
 P(3,2): 5
 P(3,1): 8
 P(D1,2)=1ANDP(D1,1)>9: false
2253.1: L2 = 0
 L2 = 0
2254: IF L1 <> 0 OR L2 <> 0 THEN 2320
 L1: 1
 L2: 0
 L1<>0ORL2<>0: true
2320: REM --NO DEALER BLACKJACK
2330: IF P(D1, 1) > 1 AND P(D1, 1) < 10 THEN 2350
 D1: 3
 P(3,1): 8
 P(D1,1)>1ANDP(D1,1)<10: true
2350: REM --NOW PLAY THE HANDS
2360: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
2370: PRINT "PLAYER"; I;
PLAYER
 I: 1
 1 
2380: H1 = 7
 H1 = 7
2390: GOSUB 1410
1410: REM  I$ DEFINED ELSEWHERE
1420: INPUT H$
? H
 H$ = "H"
1420.1: H$ = LEFT$(H$, 1)
 H$: "H"
 H$ = "H"
1430: FOR H = 1 TO H1 STEP 2
 H1: 7
 H = 1
 H1 = 7
 terminated:false
1440: IF H$ = MID$(I$, H, 1) THEN 1480
 H$: "H"
 I$: "H,S,D,C"
 H: 1
 H$=MID$(I$,H,1): true
1480: H = (H + 1) / 2
 H: 1
 H = 1
1490: RETURN
2400: ON H GOTO 2550, 2410, 2510, 2600
 H: 1
 H = 1
2550: REM --PLAYER WANTS TO BE HIT
2560: GOSUB 300
300: REM --SUBROUTINE TO EVALUATE HAND I.  TOTAL IS PUT INTO
310: REM --Q(I). TOTALS HAVE THE FOLLOWING MEANING:
320: REM --  2-10...HARD 2-10
330: REM -- 11-21...SOFT 11-21
340: REM -- 22-32...HARD 11-21
350: REM --  33+....BUSTED
360: Q = 0
 Q = 0
370: FOR Q2 = 1 TO R(I)
 I: 1
 R(1): 2
 Q2 = 1
 R(I) = 2
 terminated:false
380: X = P(I, Q2)
 I: 1
 Q2: 1
 P(1,1): 6
 X = 6
390: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 6
 X1 = 6
510.1: IF X1 > 10 THEN X1 = 10
 X1: 6
 X1>10: false
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 0
 X1: 6
 Q1 = 6
530: IF Q >= 11 THEN 590
 Q: 0
 Q>=11: false
540: IF X > 1 THEN 570
 X: 6
 X>1: true
570: Q = Q1 - 11 * (Q1 >= 11)
 Q1: 6
 Q = 6
580: RETURN
400: NEXT Q2
 Q2: 1
 terminated:false
 Q2 = 2
380: X = P(I, Q2)
 I: 1
 Q2: 2
 P(1,2): 7
 X = 7
390: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 7
 X1 = 7
510.1: IF X1 > 10 THEN X1 = 10
 X1: 7
 X1>10: false
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 6
 X1: 7
 Q1 = 13
530: IF Q >= 11 THEN 590
 Q: 6
 Q>=11: false
540: IF X > 1 THEN 570
 X: 7
 X>1: true
570: Q = Q1 - 11 * (Q1 >= 11)
 Q1: 13
 Q = 24
580: RETURN
400: NEXT Q2
 Q2: 2
 terminated:true
410: Q(I) = Q
 I: 1
 Q: 24
 Q(1) = 24
420: RETURN
2570: H1 = 3
 H1 = 3
2580: GOSUB 950
950: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 17
 C<51: true
230: X = C(C)
 C: 17
 C(17): 2
 X = 2
240: C = C + 1
 C: 17
 C = 18
250: RETURN
960: PRINT "RECEIVED A";
RECEIVED A
970: GOSUB 700
700: REM --CARD PRINTING SUBROUTINE
710: REM  D$ DEFINED ELSEWHERE
720: PRINT MID$(D$, 3 * X - 2, 3);
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 2
  2
730: PRINT "  ";
  
740: RETURN
980: GOSUB 1100
1100: REM --SUBROUTINE TO ADD A CARD TO ROW I
1110: R(I) = R(I) + 1
 I: 1
 R(1): 2
 R(1) = 3
1120: P(I, R(I)) = X
 I: 1
 R(1): 3
 X: 2
 P(1,3) = 2
1130: Q = Q(I)
 I: 1
 Q(1): 24
 Q = 24
1140: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 2
 X1 = 2
510.1: IF X1 > 10 THEN X1 = 10
 X1: 2
 X1>10: false
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 24
 X1: 2
 Q1 = 26
530: IF Q >= 11 THEN 590
 Q: 24
 Q>=11: true
590: Q = Q1 - (Q <= 21 AND Q1 > 21)
 Q1: 26
 Q: 24
 Q = 26
600: IF Q < 33 THEN 620
 Q: 26
 Q<33: true
620: RETURN
1150: Q(I) = Q
 I: 1
 Q: 26
 Q(1) = 26
1160: IF Q >= 0 THEN 1190
 Q: 26
 Q>=0: true
1190: RETURN
990: IF Q < 0 THEN 940
 Q: 26
 Q<0: false
1000: PRINT "HIT";
HIT
1010: GOTO 830
830: GOSUB 1410
1410: REM  I$ DEFINED ELSEWHERE
1420: INPUT H$
? H
 H$ = "H"
1420.1: H$ = LEFT$(H$, 1)
 H$: "H"
 H$ = "H"
1430: FOR H = 1 TO H1 STEP 2
 H1: 3
 H = 1
 H1 = 3
 terminated:false
1440: IF H$ = MID$(I$, H, 1) THEN 1480
 H$: "H"
 I$: "H,S,D,C"
 H: 1
 H$=MID$(I$,H,1): true
1480: H = (H + 1) / 2
 H: 1
 H = 1
1490: RETURN
840: H1 = 3
 H1 = 3
850: ON H GOTO 950, 930
 H: 1
 H = 1
950: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 18
 C<51: true
230: X = C(C)
 C: 18
 C(18): 4
 X = 4
240: C = C + 1
 C: 18
 C = 19
250: RETURN
960: PRINT "RECEIVED A";
RECEIVED A
970: GOSUB 700
700: REM --CARD PRINTING SUBROUTINE
710: REM  D$ DEFINED ELSEWHERE
720: PRINT MID$(D$, 3 * X - 2, 3);
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 4
  4
730: PRINT "  ";
  
740: RETURN
980: GOSUB 1100
1100: REM --SUBROUTINE TO ADD A CARD TO ROW I
1110: R(I) = R(I) + 1
 I: 1
 R(1): 3
 R(1) = 4
1120: P(I, R(I)) = X
 I: 1
 R(1): 4
 X: 4
 P(1,4) = 4
1130: Q = Q(I)
 I: 1
 Q(1): 26
 Q = 26
1140: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 4
 X1 = 4
510.1: IF X1 > 10 THEN X1 = 10
 X1: 4
 X1>10: false
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 26
 X1: 4
 Q1 = 30
530: IF Q >= 11 THEN 590
 Q: 26
 Q>=11: true
590: Q = Q1 - (Q <= 21 AND Q1 > 21)
 Q1: 30
 Q: 26
 Q = 30
600: IF Q < 33 THEN 620
 Q: 30
 Q<33: true
620: RETURN
1150: Q(I) = Q
 I: 1
 Q: 30
 Q(1) = 30
1160: IF Q >= 0 THEN 1190
 Q: 30
 Q>=0: true
1190: RETURN
990: IF Q < 0 THEN 940
 Q: 30
 Q<0: false
1000: PRINT "HIT";
HIT
1010: GOTO 830
830: GOSUB 1410
1410: REM  I$ DEFINED ELSEWHERE
1420: INPUT H$
? S
 H$ = "S"
1420.1: H$ = LEFT$(H$, 1)
 H$: "S"
 H$ = "S"
1430: FOR H = 1 TO H1 STEP 2
 H1: 3
 H = 1
 H1 = 3
 terminated:false
1440: IF H$ = MID$(I$, H, 1) THEN 1480
 H$: "S"
 I$: "H,S,D,C"
 H: 1
 H$=MID$(I$,H,1): false
1450: NEXT H
 H: 1
 terminated:false
 H = 3
1440: IF H$ = MID$(I$, H, 1) THEN 1480
 H$: "S"
 I$: "H,S,D,C"
 H: 3
 H$=MID$(I$,H,1): true
1480: H = (H + 1) / 2
 H: 3
 H = 2
1490: RETURN
840: H1 = 3
 H1 = 3
850: ON H GOTO 950, 930
 H: 2
 H = 2
930: GOSUB 1320
1320: AA = Q(I)
 I: 1
 Q(1): 30
 AA = 30
1320.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: 30
 AA = 19
3400.1: RETURN
1325: PRINT "TOTAL IS"; AA
TOTAL IS
 AA: 19
 19
1330: RETURN
940: RETURN
2590: GOTO 2900
2900: NEXT I
 I: 1
 terminated:false
 I = 2
2370: PRINT "PLAYER"; I;
PLAYER
 I: 2
 2 
2380: H1 = 7
 H1 = 7
2390: GOSUB 1410
1410: REM  I$ DEFINED ELSEWHERE
1420: INPUT H$
? H
 H$ = "H"
1420.1: H$ = LEFT$(H$, 1)
 H$: "H"
 H$ = "H"
1430: FOR H = 1 TO H1 STEP 2
 H1: 7
 H = 1
 H1 = 7
 terminated:false
1440: IF H$ = MID$(I$, H, 1) THEN 1480
 H$: "H"
 I$: "H,S,D,C"
 H: 1
 H$=MID$(I$,H,1): true
1480: H = (H + 1) / 2
 H: 1
 H = 1
1490: RETURN
2400: ON H GOTO 2550, 2410, 2510, 2600
 H: 1
 H = 1
2550: REM --PLAYER WANTS TO BE HIT
2560: GOSUB 300
300: REM --SUBROUTINE TO EVALUATE HAND I.  TOTAL IS PUT INTO
310: REM --Q(I). TOTALS HAVE THE FOLLOWING MEANING:
320: REM --  2-10...HARD 2-10
330: REM -- 11-21...SOFT 11-21
340: REM -- 22-32...HARD 11-21
350: REM --  33+....BUSTED
360: Q = 0
 Q = 0
370: FOR Q2 = 1 TO R(I)
 I: 2
 R(2): 2
 Q2 = 1
 R(I) = 2
 terminated:false
380: X = P(I, Q2)
 I: 2
 Q2: 1
 P(2,1): 3
 X = 3
390: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 3
 X1 = 3
510.1: IF X1 > 10 THEN X1 = 10
 X1: 3
 X1>10: false
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 0
 X1: 3
 Q1 = 3
530: IF Q >= 11 THEN 590
 Q: 0
 Q>=11: false
540: IF X > 1 THEN 570
 X: 3
 X>1: true
570: Q = Q1 - 11 * (Q1 >= 11)
 Q1: 3
 Q = 3
580: RETURN
400: NEXT Q2
 Q2: 1
 terminated:false
 Q2 = 2
380: X = P(I, Q2)
 I: 2
 Q2: 2
 P(2,2): 11
 X = 11
390: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 11
 X1 = 11
510.1: IF X1 > 10 THEN X1 = 10
 X1: 11
 X1 = 10
 X1>10: true
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 3
 X1: 10
 Q1 = 13
530: IF Q >= 11 THEN 590
 Q: 3
 Q>=11: false
540: IF X > 1 THEN 570
 X: 11
 X>1: true
570: Q = Q1 - 11 * (Q1 >= 11)
 Q1: 13
 Q = 24
580: RETURN
400: NEXT Q2
 Q2: 2
 terminated:true
410: Q(I) = Q
 I: 2
 Q: 24
 Q(2) = 24
420: RETURN
2570: H1 = 3
 H1 = 3
2580: GOSUB 950
950: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 19
 C<51: true
230: X = C(C)
 C: 19
 C(19): 3
 X = 3
240: C = C + 1
 C: 19
 C = 20
250: RETURN
960: PRINT "RECEIVED A";
RECEIVED A
970: GOSUB 700
700: REM --CARD PRINTING SUBROUTINE
710: REM  D$ DEFINED ELSEWHERE
720: PRINT MID$(D$, 3 * X - 2, 3);
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 3
  3
730: PRINT "  ";
  
740: RETURN
980: GOSUB 1100
1100: REM --SUBROUTINE TO ADD A CARD TO ROW I
1110: R(I) = R(I) + 1
 I: 2
 R(2): 2
 R(2) = 3
1120: P(I, R(I)) = X
 I: 2
 R(2): 3
 X: 3
 P(2,3) = 3
1130: Q = Q(I)
 I: 2
 Q(2): 24
 Q = 24
1140: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 3
 X1 = 3
510.1: IF X1 > 10 THEN X1 = 10
 X1: 3
 X1>10: false
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 24
 X1: 3
 Q1 = 27
530: IF Q >= 11 THEN 590
 Q: 24
 Q>=11: true
590: Q = Q1 - (Q <= 21 AND Q1 > 21)
 Q1: 27
 Q: 24
 Q = 27
600: IF Q < 33 THEN 620
 Q: 27
 Q<33: true
620: RETURN
1150: Q(I) = Q
 I: 2
 Q: 27
 Q(2) = 27
1160: IF Q >= 0 THEN 1190
 Q: 27
 Q>=0: true
1190: RETURN
990: IF Q < 0 THEN 940
 Q: 27
 Q<0: false
1000: PRINT "HIT";
HIT
1010: GOTO 830
830: GOSUB 1410
1410: REM  I$ DEFINED ELSEWHERE
1420: INPUT H$
? H
 H$ = "H"
1420.1: H$ = LEFT$(H$, 1)
 H$: "H"
 H$ = "H"
1430: FOR H = 1 TO H1 STEP 2
 H1: 3
 H = 1
 H1 = 3
 terminated:false
1440: IF H$ = MID$(I$, H, 1) THEN 1480
 H$: "H"
 I$: "H,S,D,C"
 H: 1
 H$=MID$(I$,H,1): true
1480: H = (H + 1) / 2
 H: 1
 H = 1
1490: RETURN
840: H1 = 3
 H1 = 3
850: ON H GOTO 950, 930
 H: 1
 H = 1
950: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 20
 C<51: true
230: X = C(C)
 C: 20
 C(20): 10
 X = 10
240: C = C + 1
 C: 20
 C = 21
250: RETURN
960: PRINT "RECEIVED A";
RECEIVED A
970: GOSUB 700
700: REM --CARD PRINTING SUBROUTINE
710: REM  D$ DEFINED ELSEWHERE
720: PRINT MID$(D$, 3 * X - 2, 3);
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 10
 10
730: PRINT "  ";
  
740: RETURN
980: GOSUB 1100
1100: REM --SUBROUTINE TO ADD A CARD TO ROW I
1110: R(I) = R(I) + 1
 I: 2
 R(2): 3
 R(2) = 4
1120: P(I, R(I)) = X
 I: 2
 R(2): 4
 X: 10
 P(2,4) = 10
1130: Q = Q(I)
 I: 2
 Q(2): 27
 Q = 27
1140: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 10
 X1 = 10
510.1: IF X1 > 10 THEN X1 = 10
 X1: 10
 X1>10: false
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 27
 X1: 10
 Q1 = 37
530: IF Q >= 11 THEN 590
 Q: 27
 Q>=11: true
590: Q = Q1 - (Q <= 21 AND Q1 > 21)
 Q1: 37
 Q: 27
 Q = 37
600: IF Q < 33 THEN 620
 Q: 37
 Q<33: false
610: Q = -1
 Q = -1
620: RETURN
1150: Q(I) = Q
 I: 2
 Q: -1
 Q(2) = -1
1160: IF Q >= 0 THEN 1190
 Q: -1
 Q>=0: false
1170: PRINT "...BUSTED"
...BUSTED
1180: GOSUB 1200
1200: REM --SUBROUTINE TO DISCARD ROW I
1210: IF R(I) <> 0 THEN 1230
 I: 2
 R(2): 4
 R(I)<>0: true
1230: D = D + 1
 D: 11
 D = 12
1240: D(D) = P(I, R(I))
 D: 12
 I: 2
 R(2): 4
 P(2,4): 10
 D(12) = 10
1250: R(I) = R(I) - 1
 I: 2
 R(2): 4
 R(2) = 3
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 2
 R(2): 3
 R(I)<>0: true
1230: D = D + 1
 D: 12
 D = 13
1240: D(D) = P(I, R(I))
 D: 13
 I: 2
 R(2): 3
 P(2,3): 3
 D(13) = 3
1250: R(I) = R(I) - 1
 I: 2
 R(2): 3
 R(2) = 2
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 2
 R(2): 2
 R(I)<>0: true
1230: D = D + 1
 D: 13
 D = 14
1240: D(D) = P(I, R(I))
 D: 14
 I: 2
 R(2): 2
 P(2,2): 11
 D(14) = 11
1250: R(I) = R(I) - 1
 I: 2
 R(2): 2
 R(2) = 1
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 2
 R(2): 1
 R(I)<>0: true
1230: D = D + 1
 D: 14
 D = 15
1240: D(D) = P(I, R(I))
 D: 15
 I: 2
 R(2): 1
 P(2,1): 3
 D(15) = 3
1250: R(I) = R(I) - 1
 I: 2
 R(2): 1
 R(2) = 0
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 2
 R(2): 0
 R(I)<>0: false
1220: RETURN
1190: RETURN
990: IF Q < 0 THEN 940
 Q: -1
 Q<0: true
940: RETURN
2590: GOTO 2900
2900: NEXT I
 I: 2
 terminated:true
2910: GOSUB 300
300: REM --SUBROUTINE TO EVALUATE HAND I.  TOTAL IS PUT INTO
310: REM --Q(I). TOTALS HAVE THE FOLLOWING MEANING:
320: REM --  2-10...HARD 2-10
330: REM -- 11-21...SOFT 11-21
340: REM -- 22-32...HARD 11-21
350: REM --  33+....BUSTED
360: Q = 0
 Q = 0
370: FOR Q2 = 1 TO R(I)
 I: 2
 R(2): 0
 Q2 = 1
 R(I) = 0
 terminated:true
400: NEXT Q2
 Q2: 1
 terminated:true
410: Q(I) = Q
 I: 2
 Q: 0
 Q(2) = 0
420: RETURN
2920: REM --TEST FOR PLAYING DEALER'S HAND
2930: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
2940: IF R(I) > 0 OR R(I + D1) > 0 THEN 3010
 I: 1
 R(1): 4
 D1: 3
 R(4): 0
 R(I)>0ORR(I+D1)>0: true
3010: PRINT "DEALER HAS A"; MID$(D$, 3 * P(D1, 2) - 2, 3); " CONCEALED ";
DEALER HAS A
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 D1: 3
 P(3,2): 5
  5 CONCEALED 
3020: I = D1
 D1: 3
 I = 3
3030: AA = Q(I)
 I: 3
 Q(3): 0
 AA = 0
3030.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: 0
 AA = 0
3400.1: RETURN
3035: PRINT "FOR A TOTAL OF"; AA
FOR A TOTAL OF
 AA: 0
 0
3040: IF AA > 16 THEN 3130
 AA: 0
 AA>16: false
3050: PRINT "DRAWS";
DRAWS
3060: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 21
 C<51: true
230: X = C(C)
 C: 21
 C(21): 10
 X = 10
240: C = C + 1
 C: 21
 C = 22
250: RETURN
3070: GOSUB 750
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 10
10
770: PRINT "   ";
   
780: RETURN
3080: GOSUB 1100
1100: REM --SUBROUTINE TO ADD A CARD TO ROW I
1110: R(I) = R(I) + 1
 I: 3
 R(3): 2
 R(3) = 3
1120: P(I, R(I)) = X
 I: 3
 R(3): 3
 X: 10
 P(3,3) = 10
1130: Q = Q(I)
 I: 3
 Q(3): 0
 Q = 0
1140: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 10
 X1 = 10
510.1: IF X1 > 10 THEN X1 = 10
 X1: 10
 X1>10: false
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 0
 X1: 10
 Q1 = 10
530: IF Q >= 11 THEN 590
 Q: 0
 Q>=11: false
540: IF X > 1 THEN 570
 X: 10
 X>1: true
570: Q = Q1 - 11 * (Q1 >= 11)
 Q1: 10
 Q = 10
580: RETURN
1150: Q(I) = Q
 I: 3
 Q: 10
 Q(3) = 10
1160: IF Q >= 0 THEN 1190
 Q: 10
 Q>=0: true
1190: RETURN
3090: AA = Q
 Q: 10
 AA = 10
3090.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: 10
 AA = 10
3400.1: RETURN
3095: IF Q > 0 AND AA < 17 THEN 3060
 Q: 10
 AA: 10
 Q>0ANDAA<17: true
3060: GOSUB 100
100: REM --SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110: IF C < 51 THEN 230
 C: 22
 C<51: true
230: X = C(C)
 C: 22
 C(22): 8
 X = 8
240: C = C + 1
 C: 22
 C = 23
250: RETURN
3070: GOSUB 750
750: REM --ALTERNATIVE PRINTING ROUTINE
760: PRINT " "; MID$(D$, 3 * X - 1, 2);
 
 D$: "  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 X: 8
 8
770: PRINT "   ";
   
780: RETURN
3080: GOSUB 1100
1100: REM --SUBROUTINE TO ADD A CARD TO ROW I
1110: R(I) = R(I) + 1
 I: 3
 R(3): 3
 R(3) = 4
1120: P(I, R(I)) = X
 I: 3
 R(3): 4
 X: 8
 P(3,4) = 8
1130: Q = Q(I)
 I: 3
 Q(3): 10
 Q = 10
1140: GOSUB 500
500: REM --SUBROUTINE TO ADD CARD X TO TOTAL Q.
510: X1 = X
 X: 8
 X1 = 8
510.1: IF X1 > 10 THEN X1 = 10
 X1: 8
 X1>10: false
510.2: REM  SAME AS X1=10 MIN X
520: Q1 = Q + X1
 Q: 10
 X1: 8
 Q1 = 18
530: IF Q >= 11 THEN 590
 Q: 10
 Q>=11: false
540: IF X > 1 THEN 570
 X: 8
 X>1: true
570: Q = Q1 - 11 * (Q1 >= 11)
 Q1: 18
 Q = 29
580: RETURN
1150: Q(I) = Q
 I: 3
 Q: 29
 Q(3) = 29
1160: IF Q >= 0 THEN 1190
 Q: 29
 Q>=0: true
1190: RETURN
3090: AA = Q
 Q: 29
 AA = 29
3090.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: 29
 AA = 18
3400.1: RETURN
3095: IF Q > 0 AND AA < 17 THEN 3060
 Q: 29
 AA: 18
 Q>0ANDAA<17: false
3100: Q(I) = Q - (Q < 0) / 2
 I: 3
 Q: 29
 Q(3) = 29
3110: IF Q < 0 THEN 3140
 Q: 29
 Q<0: false
3120: AA = Q
 Q: 29
 AA = 29
3120.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: 29
 AA = 18
3400.1: RETURN
3125: PRINT "---TOTAL IS"; AA
---TOTAL IS
 AA: 18
 18
3130: PRINT

3140: REM --TALLY THE RESULT
3150: REM
3160: Z$ = "LOSES PUSHES WINS "
 Z$ = "LOSES PUSHES WINS "
3165: PRINT

3170: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
3180: AA = Q(I)
 I: 1
 Q(1): 30
 AA = 30
3180.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: 30
 AA = 19
3400.1: RETURN
3182: AB = Q(I + D1)
 I: 1
 D1: 3
 Q(4): 0
 AB = 0
3182.1: GOSUB 3410
3410: AB = AB + 11 * (AB >= 22)
 AB: 0
 AB = 0
3410.1: RETURN
3184: AC = Q(D1)
 D1: 3
 Q(3): 29
 AC = 29
3184.1: GOSUB 3420
3420: AC = AC + 11 * (AC >= 22)
 AC: 29
 AC = 18
3420.1: RETURN
3186: S(I) = S(I) + B(I) * SGN(AA - AC) + B(I + D1) * SGN(AB - AC)
 I: 1
 S(1): 0
 B(1): 50
 AA: 19
 AC: 18
 D1: 3
 B(4): 0
 AB: 0
 S(1) = 50
3188: B(I + D1) = 0
 I: 1
 D1: 3
 B(4) = 0
3200: PRINT "PLAYER"; I;
PLAYER
 I: 1
 1 
3210: PRINT MID$(Z$, SGN(S(I)) * 6 + 7, 6); " ";
 Z$: "LOSES PUSHES WINS "
 I: 1
 S(1): 50
 WINS  
3220: IF S(I) <> 0 THEN 3250
 I: 1
 S(1): 50
 S(I)<>0: true
3250: PRINT ABS(S(I));
 I: 1
 S(1): 50
 50 
3260: T(I) = T(I) + S(I)
 I: 1
 T(1): 50
 S(1): 50
 T(1) = 100
3270: PRINT "TOTAL="; T(I)
TOTAL=
 I: 1
 T(1): 100
 100
3280: GOSUB 1200
1200: REM --SUBROUTINE TO DISCARD ROW I
1210: IF R(I) <> 0 THEN 1230
 I: 1
 R(1): 4
 R(I)<>0: true
1230: D = D + 1
 D: 15
 D = 16
1240: D(D) = P(I, R(I))
 D: 16
 I: 1
 R(1): 4
 P(1,4): 4
 D(16) = 4
1250: R(I) = R(I) - 1
 I: 1
 R(1): 4
 R(1) = 3
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 1
 R(1): 3
 R(I)<>0: true
1230: D = D + 1
 D: 16
 D = 17
1240: D(D) = P(I, R(I))
 D: 17
 I: 1
 R(1): 3
 P(1,3): 2
 D(17) = 2
1250: R(I) = R(I) - 1
 I: 1
 R(1): 3
 R(1) = 2
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 1
 R(1): 2
 R(I)<>0: true
1230: D = D + 1
 D: 17
 D = 18
1240: D(D) = P(I, R(I))
 D: 18
 I: 1
 R(1): 2
 P(1,2): 7
 D(18) = 7
1250: R(I) = R(I) - 1
 I: 1
 R(1): 2
 R(1) = 1
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 1
 R(1): 1
 R(I)<>0: true
1230: D = D + 1
 D: 18
 D = 19
1240: D(D) = P(I, R(I))
 D: 19
 I: 1
 R(1): 1
 P(1,1): 6
 D(19) = 6
1250: R(I) = R(I) - 1
 I: 1
 R(1): 1
 R(1) = 0
1260: GOTO 1210
1210: IF R(I) <> 0 THEN 1230
 I: 1
 R(1): 0
 R(I)<>0: false
1220: RETURN
3290: T(D1) = T(D1) - S(I)
 D1: 3
 T(3): -95
 I: 1
 S(1): 50
 T(3) = -145
3300: I = I + D1
 I: 1
 D1: 3
 I = 4
3310: GOSUB 1200
1200: REM --SUBROUTINE TO DISCARD ROW I
1210: IF R(I) <> 0 THEN 1230
 I: 4
 R(4): 0
 R(I)<>0: false
1220: RETURN
3320: I = I - D1
 I: 4
 D1: 3
 I = 1
3330: NEXT I
 I: 1
 terminated:false
 I = 2
3180: AA = Q(I)
 I: 2
 Q(2): 0
 AA = 0
3180.1: GOSUB 3400
3400: AA = AA + 11 * (AA >= 22)
 AA: 0
 AA = 0
3400.1: RETURN
3182: AB = Q(I + D1)
 I: 2
 D1: 3
 Q(5): 0
 AB = 0
3182.1: GOSUB 3410
3410: AB = AB + 11 * (AB >= 22)
 AB: 0
 AB = 0
3410.1: RETURN
3184: AC = Q(D1)
 D1: 3
 Q(3): 29
 AC = 29
3184.1: GOSUB 3420
3420: AC = AC + 11 * (AC >= 22)
 AC: 29
 AC = 18
3420.1: RETURN
3186: S(I) = S(I) + B(I) * SGN(AA - AC) + B(I + D1) * SGN(AB - AC)
 I: 2
 S(2): 0
 B(2): 45
 AA: 0
 AC: 18
 D1: 3
 B(5): 0
 AB: 0
 S(2) = -45
3188: B(I + D1) = 0
 I: 2
 D1: 3
 B(5) = 0
3200: PRINT "PLAYER"; I;
PLAYER
 I: 2
 2 
3210: PRINT MID$(Z$, SGN(S(I)) * 6 + 7, 6); " ";
 Z$: "LOSES PUSHES WINS "
 I: 2
 S(2): -45
LOSES  
3220: IF S(I) <> 0 THEN 3250
 I: 2
 S(2): -45
 S(I)<>0: true
3250: PRINT ABS(S(I));
 I: 2
 S(2): -45
 45 
3260: T(I) = T(I) + S(I)
 I: 2
 T(2): 45
 S(2): -45
 T(2) = 0
3270: PRINT "TOTAL="; T(I)
TOTAL=
 I: 2
 T(2): 0
 0
3280: GOSUB 1200
1200: REM --SUBROUTINE TO DISCARD ROW I
1210: IF R(I) <> 0 THEN 1230
 I: 2
 R(2): 0
 R(I)<>0: false
1220: RETURN
3290: T(D1) = T(D1) - S(I)
 D1: 3
 T(3): -145
 I: 2
 S(2): -45
 T(3) = -100
3300: I = I + D1
 I: 2
 D1: 3
 I = 5
3310: GOSUB 1200
1200: REM --SUBROUTINE TO DISCARD ROW I
1210: IF R(I) <> 0 THEN 1230
 I: 5
 R(5): 0
 R(I)<>0: false
1220: RETURN
3320: I = I - D1
 I: 5
 D1: 3
 I = 2
3330: NEXT I
 I: 2
 terminated:true
3340: PRINT "DEALER'S TOTAL="; T(D1)
DEALER'S TOTAL=
 D1: 3
 T(3): -100
-100
3345: PRINT

3350: GOSUB 1200
1200: REM --SUBROUTINE TO DISCARD ROW I
1210: IF R(I) <> 0 THEN 1230
 I: 2
 R(2): 0
 R(I)<>0: false
1220: RETURN
3360: GOTO 1810
1810: IF 2 * D1 + C >= 52 THEN GOSUB 120
 D1: 3
 C: 23
 2*D1+C>=52: false
1820: IF C = 2 THEN C = C - 1
 C: 23
 C=2: false
1830: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
1830.1: Z(I) = 0
 I: 1
 Z(1) = 0
1830.2: NEXT I
 I: 1
 terminated:false
 I = 2
1830.1: Z(I) = 0
 I: 2
 Z(2) = 0
1830.2: NEXT I
 I: 2
 terminated:true
1840: FOR I = 1 TO 15
 I = 1
 terminated:false
1840.1: B(I) = 0
 I: 1
 B(1) = 0
1840.2: NEXT I
 I: 1
 terminated:false
 I = 2
1840.1: B(I) = 0
 I: 2
 B(2) = 0
1840.2: NEXT I
 I: 2
 terminated:false
 I = 3
1840.1: B(I) = 0
 I: 3
 B(3) = 0
1840.2: NEXT I
 I: 3
 terminated:false
 I = 4
1840.1: B(I) = 0
 I: 4
 B(4) = 0
1840.2: NEXT I
 I: 4
 terminated:false
 I = 5
1840.1: B(I) = 0
 I: 5
 B(5) = 0
1840.2: NEXT I
 I: 5
 terminated:false
 I = 6
1840.1: B(I) = 0
 I: 6
 B(6) = 0
1840.2: NEXT I
 I: 6
 terminated:false
 I = 7
1840.1: B(I) = 0
 I: 7
 B(7) = 0
1840.2: NEXT I
 I: 7
 terminated:false
 I = 8
1840.1: B(I) = 0
 I: 8
 B(8) = 0
1840.2: NEXT I
 I: 8
 terminated:false
 I = 9
1840.1: B(I) = 0
 I: 9
 B(9) = 0
1840.2: NEXT I
 I: 9
 terminated:false
 I = 10
1840.1: B(I) = 0
 I: 10
 B(10) = 0
1840.2: NEXT I
 I: 10
 terminated:false
 I = 11
1840.1: B(I) = 0
 I: 11
 B(11) = 0
1840.2: NEXT I
 I: 11
 terminated:false
 I = 12
1840.1: B(I) = 0
 I: 12
 B(12) = 0
1840.2: NEXT I
 I: 12
 terminated:false
 I = 13
1840.1: B(I) = 0
 I: 13
 B(13) = 0
1840.2: NEXT I
 I: 13
 terminated:false
 I = 14
1840.1: B(I) = 0
 I: 14
 B(14) = 0
1840.2: NEXT I
 I: 14
 terminated:false
 I = 15
1840.1: B(I) = 0
 I: 15
 B(15) = 0
1840.2: NEXT I
 I: 15
 terminated:true
1850: FOR I = 1 TO 15
 I = 1
 terminated:false
1850.1: Q(I) = 0
 I: 1
 Q(1) = 0
1850.2: NEXT I
 I: 1
 terminated:false
 I = 2
1850.1: Q(I) = 0
 I: 2
 Q(2) = 0
1850.2: NEXT I
 I: 2
 terminated:false
 I = 3
1850.1: Q(I) = 0
 I: 3
 Q(3) = 0
1850.2: NEXT I
 I: 3
 terminated:false
 I = 4
1850.1: Q(I) = 0
 I: 4
 Q(4) = 0
1850.2: NEXT I
 I: 4
 terminated:false
 I = 5
1850.1: Q(I) = 0
 I: 5
 Q(5) = 0
1850.2: NEXT I
 I: 5
 terminated:false
 I = 6
1850.1: Q(I) = 0
 I: 6
 Q(6) = 0
1850.2: NEXT I
 I: 6
 terminated:false
 I = 7
1850.1: Q(I) = 0
 I: 7
 Q(7) = 0
1850.2: NEXT I
 I: 7
 terminated:false
 I = 8
1850.1: Q(I) = 0
 I: 8
 Q(8) = 0
1850.2: NEXT I
 I: 8
 terminated:false
 I = 9
1850.1: Q(I) = 0
 I: 9
 Q(9) = 0
1850.2: NEXT I
 I: 9
 terminated:false
 I = 10
1850.1: Q(I) = 0
 I: 10
 Q(10) = 0
1850.2: NEXT I
 I: 10
 terminated:false
 I = 11
1850.1: Q(I) = 0
 I: 11
 Q(11) = 0
1850.2: NEXT I
 I: 11
 terminated:false
 I = 12
1850.1: Q(I) = 0
 I: 12
 Q(12) = 0
1850.2: NEXT I
 I: 12
 terminated:false
 I = 13
1850.1: Q(I) = 0
 I: 13
 Q(13) = 0
1850.2: NEXT I
 I: 13
 terminated:false
 I = 14
1850.1: Q(I) = 0
 I: 14
 Q(14) = 0
1850.2: NEXT I
 I: 14
 terminated:false
 I = 15
1850.1: Q(I) = 0
 I: 15
 Q(15) = 0
1850.2: NEXT I
 I: 15
 terminated:true
1860: FOR I = 1 TO 7
 I = 1
 terminated:false
1860.1: S(I) = 0
 I: 1
 S(1) = 0
1860.2: NEXT I
 I: 1
 terminated:false
 I = 2
1860.1: S(I) = 0
 I: 2
 S(2) = 0
1860.2: NEXT I
 I: 2
 terminated:false
 I = 3
1860.1: S(I) = 0
 I: 3
 S(3) = 0
1860.2: NEXT I
 I: 3
 terminated:false
 I = 4
1860.1: S(I) = 0
 I: 4
 S(4) = 0
1860.2: NEXT I
 I: 4
 terminated:false
 I = 5
1860.1: S(I) = 0
 I: 5
 S(5) = 0
1860.2: NEXT I
 I: 5
 terminated:false
 I = 6
1860.1: S(I) = 0
 I: 6
 S(6) = 0
1860.2: NEXT I
 I: 6
 terminated:false
 I = 7
1860.1: S(I) = 0
 I: 7
 S(7) = 0
1860.2: NEXT I
 I: 7
 terminated:true
1870: FOR I = 1 TO 15
 I = 1
 terminated:false
1870.1: R(I) = 0
 I: 1
 R(1) = 0
1870.2: NEXT I
 I: 1
 terminated:false
 I = 2
1870.1: R(I) = 0
 I: 2
 R(2) = 0
1870.2: NEXT I
 I: 2
 terminated:false
 I = 3
1870.1: R(I) = 0
 I: 3
 R(3) = 0
1870.2: NEXT I
 I: 3
 terminated:false
 I = 4
1870.1: R(I) = 0
 I: 4
 R(4) = 0
1870.2: NEXT I
 I: 4
 terminated:false
 I = 5
1870.1: R(I) = 0
 I: 5
 R(5) = 0
1870.2: NEXT I
 I: 5
 terminated:false
 I = 6
1870.1: R(I) = 0
 I: 6
 R(6) = 0
1870.2: NEXT I
 I: 6
 terminated:false
 I = 7
1870.1: R(I) = 0
 I: 7
 R(7) = 0
1870.2: NEXT I
 I: 7
 terminated:false
 I = 8
1870.1: R(I) = 0
 I: 8
 R(8) = 0
1870.2: NEXT I
 I: 8
 terminated:false
 I = 9
1870.1: R(I) = 0
 I: 9
 R(9) = 0
1870.2: NEXT I
 I: 9
 terminated:false
 I = 10
1870.1: R(I) = 0
 I: 10
 R(10) = 0
1870.2: NEXT I
 I: 10
 terminated:false
 I = 11
1870.1: R(I) = 0
 I: 11
 R(11) = 0
1870.2: NEXT I
 I: 11
 terminated:false
 I = 12
1870.1: R(I) = 0
 I: 12
 R(12) = 0
1870.2: NEXT I
 I: 12
 terminated:false
 I = 13
1870.1: R(I) = 0
 I: 13
 R(13) = 0
1870.2: NEXT I
 I: 13
 terminated:false
 I = 14
1870.1: R(I) = 0
 I: 14
 R(14) = 0
1870.2: NEXT I
 I: 14
 terminated:false
 I = 15
1870.1: R(I) = 0
 I: 15
 R(15) = 0
1870.2: NEXT I
 I: 15
 terminated:true
1880: PRINT "BETS:"
BETS:
1890: FOR I = 1 TO N
 N: 2
 I = 1
 N = 2
 terminated:false
1890.1: PRINT "#"; I;
#
 I: 1
 1 
1890.2: INPUT Z(I)
 I: 1
? 
End of file in line 1890

