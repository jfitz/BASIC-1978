2 PRINT TAB(31);"BLACK JACK"
 ITEMS
 NumericConstant:31
 FunctionTab
 CarriageControl:;
 TextConstant:"BLACK JACK"
 CarriageControl:NL
4 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 ITEMS
 NumericConstant:15
 FunctionTab
 CarriageControl:;
 TextConstant:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
6 PRINT:PRINT:PRINT
 ITEMS
 CarriageControl:NL
 ITEMS
 CarriageControl:NL
 ITEMS
 CarriageControl:NL
10 DEF FNA(Q)=Q+11*(Q>=22)
 ScalarValue:Q
 NumericConstant:11
 ScalarValue:Q
 NumericConstant:22
 BinaryOperator:>=
 BinaryOperator:*
 BinaryOperator:+
20 DIM P(15,12),Q(15),C(52),D(52),T(8),S(7),B(15)
 NumericConstant:15
 NumericConstant:12
 CompoundDeclaration:P
 NumericConstant:15
 CompoundDeclaration:Q
 NumericConstant:52
 CompoundDeclaration:C
 NumericConstant:52
 CompoundDeclaration:D
 NumericConstant:8
 CompoundDeclaration:T
 NumericConstant:7
 CompoundDeclaration:S
 NumericConstant:15
 CompoundDeclaration:B
30 DIM R(15)
 NumericConstant:15
 CompoundDeclaration:R
40 REM--P(I,J) IS THE JTH CARD IN HAND I, Q(I) IS TOTAL OF HAND I
 Remark:--P(I,J) IS THE JTH CARD IN HAND I, Q(I) IS TOTAL OF HAND I
50 REM--C IS THE DECK BEING DEALT FROM, D IS THE DISCARD PILE,
 Remark:--C IS THE DECK BEING DEALT FROM, D IS THE DISCARD PILE,
60 REM--T(I) IS THE TOTAL FOR PLAYER I, S(I) IS THE TOTAL THIS HAND FOR
 Remark:--T(I) IS THE TOTAL FOR PLAYER I, S(I) IS THE TOTAL THIS HAND FOR
70 REM--PLAYER I, B(I) IS TH BET FOR HAND I
 Remark:--PLAYER I, B(I) IS TH BET FOR HAND I
80 REM--R(I) IS THE LENGTH OF P(I,*)
 Remark:--R(I) IS THE LENGTH OF P(I,*)
90 GOTO 1500
 LineNumber:1500
100 REM--SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
 Remark:--SUBROUTINE TO GET A CARD.  RESULT IS PUT IN X.
110 IF C<51 THEN 230
 ScalarValue:C
 NumericConstant:51
 BinaryOperator:<
120 PRINT "RESHUFFLING"
 ITEMS
 TextConstant:"RESHUFFLING"
 CarriageControl:NL
130 FOR D=D TO 1 STEP -1
 control: VariableName:D
 start:   ["ScalarValue:D"]
 end:     ["NumericConstant:1"]
 step:    ["NumericConstant:1", "UnaryOperator:-"]
140 C=C-1
 ScalarReference:C
 ScalarValue:C
 NumericConstant:1
 BinaryOperator:-
 AssignmentOperator:=
150 C(C)=D(D)
 ScalarValue:C
 ScalarReference:C
 ScalarValue:D
 ScalarValue:D
 AssignmentOperator:=
160 NEXT D
 VariableName:D
170 FOR C1=52 TO C STEP -1
 control: VariableName:C1
 start:   ["NumericConstant:52"]
 end:     ["ScalarValue:C"]
 step:    ["NumericConstant:1", "UnaryOperator:-"]
180 C2=INT(RND(1)*(C1-C+1))+C
 ScalarReference:C2
 NumericConstant:1
 FunctionRnd
 ScalarValue:C1
 ScalarValue:C
 BinaryOperator:-
 NumericConstant:1
 BinaryOperator:+
 BinaryOperator:*
 FunctionInt
 ScalarValue:C
 BinaryOperator:+
 AssignmentOperator:=
190 C3=C(C2)
 ScalarReference:C3
 ScalarValue:C2
 ScalarValue:C
 AssignmentOperator:=
200 C(C2)=C(C1)
 ScalarValue:C2
 ScalarReference:C
 ScalarValue:C1
 ScalarValue:C
 AssignmentOperator:=
210 C(C1)=C3
 ScalarValue:C1
 ScalarReference:C
 ScalarValue:C3
 AssignmentOperator:=
220 NEXT C1
 VariableName:C1
230 X=C(C)
 ScalarReference:X
 ScalarValue:C
 ScalarValue:C
 AssignmentOperator:=
240 C=C+1
 ScalarReference:C
 ScalarValue:C
 NumericConstant:1
 BinaryOperator:+
 AssignmentOperator:=
250 RETURN
 
300 REM--SUBROUTINE TO EVALUATE HAND I.  TOTAL IS PUT INTO
 Remark:--SUBROUTINE TO EVALUATE HAND I.  TOTAL IS PUT INTO
310 REM--Q(I). TOTALS HAVE THE FOLLOWING MEANING:
 Remark:--Q(I). TOTALS HAVE THE FOLLOWING MEANING:
320 REM--  2-10...HARD 2-10
 Remark:--  2-10...HARD 2-10
330 REM-- 11-21...SOFT 11-21
 Remark:-- 11-21...SOFT 11-21
340 REM-- 22-32...HARD 11-21
 Remark:-- 22-32...HARD 11-21
350 REM--  33+....BUSTED
 Remark:--  33+....BUSTED
360 Q=0
 ScalarReference:Q
 NumericConstant:0
 AssignmentOperator:=
370 FOR Q2=1 TO R(I)
 control: VariableName:Q2
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:I", "ScalarValue:R"]
 step:    ["NumericConstant:1"]
380 X=P(I,Q2)
 ScalarReference:X
 ScalarValue:I
 ScalarValue:Q2
 ScalarValue:P
 AssignmentOperator:=
390 GOSUB 500
 LineNumber:500
400 NEXT Q2
 VariableName:Q2
410 Q(I)=Q
 ScalarValue:I
 ScalarReference:Q
 ScalarValue:Q
 AssignmentOperator:=
420 RETURN
 
500 REM--SUBROUTINE TO ADD CARD X TO TOTAL Q.
 Remark:--SUBROUTINE TO ADD CARD X TO TOTAL Q.
510 X1=X: IF X1>10 THEN X1=10:  REM  SAME AS X1=10 MIN X
 ScalarReference:X1
 ScalarValue:X
 AssignmentOperator:=
 ScalarValue:X1
 NumericConstant:10
 BinaryOperator:>
 ScalarReference:X1
 NumericConstant:10
 AssignmentOperator:=
 Remark: SAME AS X1=10 MIN X
520 Q1=Q+X1
 ScalarReference:Q1
 ScalarValue:Q
 ScalarValue:X1
 BinaryOperator:+
 AssignmentOperator:=
530 IF Q>=11 THEN 590
 ScalarValue:Q
 NumericConstant:11
 BinaryOperator:>=
540 IF X>1 THEN 570
 ScalarValue:X
 NumericConstant:1
 BinaryOperator:>
550 Q=Q+11
 ScalarReference:Q
 ScalarValue:Q
 NumericConstant:11
 BinaryOperator:+
 AssignmentOperator:=
560 RETURN
 
570 Q=Q1-11*(Q1>=11)
 ScalarReference:Q
 ScalarValue:Q1
 NumericConstant:11
 ScalarValue:Q1
 NumericConstant:11
 BinaryOperator:>=
 BinaryOperator:*
 BinaryOperator:-
 AssignmentOperator:=
580 RETURN
 
590 Q=Q1-(Q<=21 AND Q1>21)
 ScalarReference:Q
 ScalarValue:Q1
 ScalarValue:Q
 NumericConstant:21
 BinaryOperator:<=
 ScalarValue:Q1
 NumericConstant:21
 BinaryOperator:>
 BinaryOperator:AND
 BinaryOperator:-
 AssignmentOperator:=
600 IF Q<33 THEN 620
 ScalarValue:Q
 NumericConstant:33
 BinaryOperator:<
610 Q=-1
 ScalarReference:Q
 NumericConstant:1
 UnaryOperator:-
 AssignmentOperator:=
620 RETURN
 
700 REM--CARD PRINTING SUBROUTINE
 Remark:--CARD PRINTING SUBROUTINE
710 REM  D$ DEFINED ELSEWHERE
 Remark: D$ DEFINED ELSEWHERE
720 PRINT MID$(D$,3*X-2,3);
 ITEMS
 ScalarValue:D$
 NumericConstant:3
 ScalarValue:X
 BinaryOperator:*
 NumericConstant:2
 BinaryOperator:-
 NumericConstant:3
 FunctionMid
 CarriageControl:;
730 PRINT "  ";
 ITEMS
 TextConstant:"  "
 CarriageControl:;
740 RETURN
 
750 REM--ALTERNATIVE PRINTING ROUTINE
 Remark:--ALTERNATIVE PRINTING ROUTINE
760 PRINT " ";MID$(D$,3*X-1,2);
 ITEMS
 TextConstant:" "
 CarriageControl:;
 ScalarValue:D$
 NumericConstant:3
 ScalarValue:X
 BinaryOperator:*
 NumericConstant:1
 BinaryOperator:-
 NumericConstant:2
 FunctionMid
 CarriageControl:;
770 PRINT "   ";
 ITEMS
 TextConstant:"   "
 CarriageControl:;
780 RETURN
 
800 REM--SUBROUTINE TO PLAY OUT A HAND.
 Remark:--SUBROUTINE TO PLAY OUT A HAND.
810 REM--NO SPLITTING OR BLACKJACKS ALLOWED
 Remark:--NO SPLITTING OR BLACKJACKS ALLOWED
820 H1=5
 ScalarReference:H1
 NumericConstant:5
 AssignmentOperator:=
830 GOSUB 1410
 LineNumber:1410
840 H1=3
 ScalarReference:H1
 NumericConstant:3
 AssignmentOperator:=
850 ON H GOTO 950,930
 ScalarValue:H
 LineNumber:950
 LineNumber:930
860 GOSUB 100
 LineNumber:100
870 B(I)=B(I)*2
 ScalarValue:I
 ScalarReference:B
 ScalarValue:I
 ScalarValue:B
 NumericConstant:2
 BinaryOperator:*
 AssignmentOperator:=
880 PRINT "RECEIVED A";
 ITEMS
 TextConstant:"RECEIVED A"
 CarriageControl:;
890 GOSUB 700
 LineNumber:700
900 GOSUB 1100
 LineNumber:1100
910 IF Q>0 THEN GOSUB 1300
 ScalarValue:Q
 NumericConstant:0
 BinaryOperator:>
 LineNumber:1300
920 RETURN
 
930 GOSUB 1320
 LineNumber:1320
940 RETURN
 
950 GOSUB 100
 LineNumber:100
960 PRINT "RECEIVED A";
 ITEMS
 TextConstant:"RECEIVED A"
 CarriageControl:;
970 GOSUB 700
 LineNumber:700
980 GOSUB 1100
 LineNumber:1100
990 IF Q<0 THEN 940
 ScalarValue:Q
 NumericConstant:0
 BinaryOperator:<
1000 PRINT "HIT";
 ITEMS
 TextConstant:"HIT"
 CarriageControl:;
1010 GOTO 830
 LineNumber:830
1100 REM--SUBROUTINE TO ADD A CARD TO ROW I
 Remark:--SUBROUTINE TO ADD A CARD TO ROW I
1110 R(I)=R(I)+1
 ScalarValue:I
 ScalarReference:R
 ScalarValue:I
 ScalarValue:R
 NumericConstant:1
 BinaryOperator:+
 AssignmentOperator:=
1120 P(I,R(I))=X
 ScalarValue:I
 ScalarValue:I
 ScalarValue:R
 ScalarReference:P
 ScalarValue:X
 AssignmentOperator:=
1130 Q=Q(I)
 ScalarReference:Q
 ScalarValue:I
 ScalarValue:Q
 AssignmentOperator:=
1140 GOSUB 500
 LineNumber:500
1150 Q(I)=Q
 ScalarValue:I
 ScalarReference:Q
 ScalarValue:Q
 AssignmentOperator:=
1160 IF Q>=0 THEN 1190
 ScalarValue:Q
 NumericConstant:0
 BinaryOperator:>=
1170 PRINT "...BUSTED"
 ITEMS
 TextConstant:"...BUSTED"
 CarriageControl:NL
1180 GOSUB 1200
 LineNumber:1200
1190 RETURN
 
1200 REM--SUBROUTINE TO DISCARD ROW I
 Remark:--SUBROUTINE TO DISCARD ROW I
1210 IF R(I)<>0 THEN 1230
 ScalarValue:I
 ScalarValue:R
 NumericConstant:0
 BinaryOperator:<>
1220 RETURN
 
1230 D=D+1
 ScalarReference:D
 ScalarValue:D
 NumericConstant:1
 BinaryOperator:+
 AssignmentOperator:=
1240 D(D)=P(I,R(I))
 ScalarValue:D
 ScalarReference:D
 ScalarValue:I
 ScalarValue:I
 ScalarValue:R
 ScalarValue:P
 AssignmentOperator:=
1250 R(I)=R(I)-1
 ScalarValue:I
 ScalarReference:R
 ScalarValue:I
 ScalarValue:R
 NumericConstant:1
 BinaryOperator:-
 AssignmentOperator:=
1260 GOTO 1210
 LineNumber:1210
1300 REM--PRINTS TOTAL OF HAND I
 Remark:--PRINTS TOTAL OF HAND I
1310 PRINT
 ITEMS
 CarriageControl:NL
1320 AA=Q(I): GOSUB 3400
 ScalarReference:AA
 ScalarValue:I
 ScalarValue:Q
 AssignmentOperator:=
 LineNumber:3400
1325 PRINT "TOTAL IS";AA
 ITEMS
 TextConstant:"TOTAL IS"
 CarriageControl:;
 ScalarValue:AA
 CarriageControl:NL
1330 RETURN
 
1400 REM--SUBROUTINE TO READ REPLY
 Remark:--SUBROUTINE TO READ REPLY
1410 REM  I$ DEFINED ELSEWHERE
 Remark: I$ DEFINED ELSEWHERE
1420 INPUT H$: H$=LEFT$(H$,1)
 ScalarReference:H$
 ScalarReference:H$
 ScalarValue:H$
 NumericConstant:1
 FunctionLeft
 AssignmentOperator:=
1430 FOR H=1 TO H1 STEP 2
 control: VariableName:H
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:H1"]
 step:    ["NumericConstant:2"]
1440 IF H$=MID$(I$,H,1) THEN 1480
 ScalarValue:H$
 ScalarValue:I$
 ScalarValue:H
 NumericConstant:1
 FunctionMid
 BinaryOperator:=
1450 NEXT H
 VariableName:H
1460 PRINT "TYPE ";MID$(I$,1,H1-1);" OR ";MID$(I$,H1,2);" PLEASE";
 ITEMS
 TextConstant:"TYPE "
 CarriageControl:;
 ScalarValue:I$
 NumericConstant:1
 ScalarValue:H1
 NumericConstant:1
 BinaryOperator:-
 FunctionMid
 CarriageControl:;
 TextConstant:" OR "
 CarriageControl:;
 ScalarValue:I$
 ScalarValue:H1
 NumericConstant:2
 FunctionMid
 CarriageControl:;
 TextConstant:" PLEASE"
 CarriageControl:;
1470 GOTO 1420
 LineNumber:1420
1480 H=(H+1)/2
 ScalarReference:H
 ScalarValue:H
 NumericConstant:1
 BinaryOperator:+
 NumericConstant:2
 BinaryOperator:/
 AssignmentOperator:=
1490 RETURN
 
1500 REM--PROGRAM STARTS HERE
 Remark:--PROGRAM STARTS HERE
1510 REM--INITIALIZE
 Remark:--INITIALIZE
1520 D$="  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 ScalarReference:D$
 TextConstant:"  A  2  3  4  5  6  7  8  9 10  J  Q  K"
 AssignmentOperator:=
1530 I$="H,S,D,C"
 ScalarReference:I$
 TextConstant:"H,S,D,C"
 AssignmentOperator:=
1540 FOR I=1 TO 13
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:13"]
 step:    ["NumericConstant:1"]
1550 FOR J=4*I-3 TO 4*I
 control: VariableName:J
 start:   ["NumericConstant:4", "ScalarValue:I", "BinaryOperator:*", "NumericConstant:3", "BinaryOperator:-"]
 end:     ["NumericConstant:4", "ScalarValue:I", "BinaryOperator:*"]
 step:    ["NumericConstant:1"]
1560 D(J)=I
 ScalarValue:J
 ScalarReference:D
 ScalarValue:I
 AssignmentOperator:=
1570 NEXT J
 VariableName:J
1580 NEXT I
 VariableName:I
1590 D=52
 ScalarReference:D
 NumericConstant:52
 AssignmentOperator:=
1600 C=53
 ScalarReference:C
 NumericConstant:53
 AssignmentOperator:=
1610 PRINT "DO YOU WANT INSTRUCTIONS";
 ITEMS
 TextConstant:"DO YOU WANT INSTRUCTIONS"
 CarriageControl:;
1620 INPUT H$
 ScalarReference:H$
1630 IF LEFT$(H$,1)="N" OR LEFT$(H$,1)="n" THEN 1760
 ScalarValue:H$
 NumericConstant:1
 FunctionLeft
 TextConstant:"N"
 BinaryOperator:=
 ScalarValue:H$
 NumericConstant:1
 FunctionLeft
 TextConstant:"n"
 BinaryOperator:=
 BinaryOperator:OR
1640 PRINT "THIS IS THE GAME OF 21. AS MANY AS 7 PLAYERS MAY PLAY THE"
 ITEMS
 TextConstant:"THIS IS THE GAME OF 21. AS MANY AS 7 PLAYERS MAY PLAY THE"
 CarriageControl:NL
1650 PRINT "GAME. ON EACH DEAL, BETS WILL BE ASKED FOR, AND THE"
 ITEMS
 TextConstant:"GAME. ON EACH DEAL, BETS WILL BE ASKED FOR, AND THE"
 CarriageControl:NL
1660 PRINT "PLAYERS' BETS SHOULD BE TYPED IN. THE CARDS WILL THEN BE"
 ITEMS
 TextConstant:"PLAYERS' BETS SHOULD BE TYPED IN. THE CARDS WILL THEN BE"
 CarriageControl:NL
1670 PRINT "DEALT, AND EACH PLAYER IN TURN PLAYS HIS HAND. THE"
 ITEMS
 TextConstant:"DEALT, AND EACH PLAYER IN TURN PLAYS HIS HAND. THE"
 CarriageControl:NL
1680 PRINT "FIRST RESPONSE SHOULD BE EITHER 'D', INDICATING THAT THE"
 ITEMS
 TextConstant:"FIRST RESPONSE SHOULD BE EITHER 'D', INDICATING THAT THE"
 CarriageControl:NL
1690 PRINT "PLAYER IS DOUBLING DOWN, 'S', INDICATING THAT HE IS"
 ITEMS
 TextConstant:"PLAYER IS DOUBLING DOWN, 'S', INDICATING THAT HE IS"
 CarriageControl:NL
1700 PRINT "STANDING, 'H', INDICATING HE WANTS ANOTHER CARD, OR '/',"
 ITEMS
 TextConstant:"STANDING, 'H', INDICATING HE WANTS ANOTHER CARD, OR '/',"
 CarriageControl:NL
1710 PRINT "INDICATING THAT HE WANTS TO SPLIT HIS CARDS. AFTER THE"
 ITEMS
 TextConstant:"INDICATING THAT HE WANTS TO SPLIT HIS CARDS. AFTER THE"
 CarriageControl:NL
1720 PRINT "INITIAL RESPONSE, ALL FURTHER RESPONSES SHOULD BE 'S' OR"
 ITEMS
 TextConstant:"INITIAL RESPONSE, ALL FURTHER RESPONSES SHOULD BE 'S' OR"
 CarriageControl:NL
1730 PRINT "'H', UNLESS THE CARDS WERE SPLIT, IN WHICH CASE DOUBLING"
 ITEMS
 TextConstant:"'H', UNLESS THE CARDS WERE SPLIT, IN WHICH CASE DOUBLING"
 CarriageControl:NL
1740 PRINT "DOWN IS AGAIN PERMITTED. IN ORDER TO COLLECT FOR"
 ITEMS
 TextConstant:"DOWN IS AGAIN PERMITTED. IN ORDER TO COLLECT FOR"
 CarriageControl:NL
1750 PRINT "BLACKJACK, THE INITIAL RESPONSE SHOULD BE 'S'."
 ITEMS
 TextConstant:"BLACKJACK, THE INITIAL RESPONSE SHOULD BE 'S'."
 CarriageControl:NL
1760 PRINT "NUMBER OF PLAYERS";
 ITEMS
 TextConstant:"NUMBER OF PLAYERS"
 CarriageControl:;
1770 INPUT N
 ScalarReference:N
1775 PRINT
 ITEMS
 CarriageControl:NL
1780 IF N<1 OR N>7 OR N>INT(N) THEN 1760
 ScalarValue:N
 NumericConstant:1
 BinaryOperator:<
 ScalarValue:N
 NumericConstant:7
 BinaryOperator:>
 BinaryOperator:OR
 ScalarValue:N
 ScalarValue:N
 FunctionInt
 BinaryOperator:>
 BinaryOperator:OR
1790 FOR I=1 TO 8: T(I)=0: NEXT I
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8"]
 step:    ["NumericConstant:1"]
 ScalarValue:I
 ScalarReference:T
 NumericConstant:0
 AssignmentOperator:=
 VariableName:I
1800 D1=N+1
 ScalarReference:D1
 ScalarValue:N
 NumericConstant:1
 BinaryOperator:+
 AssignmentOperator:=
1810 IF 2*D1+C>=52 THEN GOSUB 120
 NumericConstant:2
 ScalarValue:D1
 BinaryOperator:*
 ScalarValue:C
 BinaryOperator:+
 NumericConstant:52
 BinaryOperator:>=
 LineNumber:120
1820 IF C=2 THEN C=C-1
 ScalarValue:C
 NumericConstant:2
 BinaryOperator:=
 ScalarReference:C
 ScalarValue:C
 NumericConstant:1
 BinaryOperator:-
 AssignmentOperator:=
1830 FOR I=1 TO N: Z(I)=0: NEXT I
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:N"]
 step:    ["NumericConstant:1"]
 ScalarValue:I
 ScalarReference:Z
 NumericConstant:0
 AssignmentOperator:=
 VariableName:I
1840 FOR I=1 TO 15: B(I)=0: NEXT I
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:15"]
 step:    ["NumericConstant:1"]
 ScalarValue:I
 ScalarReference:B
 NumericConstant:0
 AssignmentOperator:=
 VariableName:I
1850 FOR I=1 TO 15: Q(I)=0: NEXT I
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:15"]
 step:    ["NumericConstant:1"]
 ScalarValue:I
 ScalarReference:Q
 NumericConstant:0
 AssignmentOperator:=
 VariableName:I
1860 FOR I=1 TO 7: S(I)=0: NEXT I
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:7"]
 step:    ["NumericConstant:1"]
 ScalarValue:I
 ScalarReference:S
 NumericConstant:0
 AssignmentOperator:=
 VariableName:I
1870 FOR I=1 TO 15: R(I)=0: NEXT I
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:15"]
 step:    ["NumericConstant:1"]
 ScalarValue:I
 ScalarReference:R
 NumericConstant:0
 AssignmentOperator:=
 VariableName:I
1880 PRINT "BETS:"
 ITEMS
 TextConstant:"BETS:"
 CarriageControl:NL
1890 FOR I=1 TO N: PRINT "#";I;: INPUT Z(I): NEXT I
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:N"]
 step:    ["NumericConstant:1"]
 ITEMS
 TextConstant:"#"
 CarriageControl:;
 ScalarValue:I
 CarriageControl:;
 ScalarValue:I
 ScalarReference:Z
 VariableName:I
1900 FOR I=1 TO N
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:N"]
 step:    ["NumericConstant:1"]
1910 IF Z(I)<=0 OR Z(I)>500 THEN 1880
 ScalarValue:I
 ScalarValue:Z
 NumericConstant:0
 BinaryOperator:<=
 ScalarValue:I
 ScalarValue:Z
 NumericConstant:500
 BinaryOperator:>
 BinaryOperator:OR
1920 B(I)=Z(I)
 ScalarValue:I
 ScalarReference:B
 ScalarValue:I
 ScalarValue:Z
 AssignmentOperator:=
1930 NEXT I
 VariableName:I
1940 PRINT "PLAYER  ";
 ITEMS
 TextConstant:"PLAYER  "
 CarriageControl:;
1950 FOR I=1 TO N
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:N"]
 step:    ["NumericConstant:1"]
1960 PRINT TAB(I*7);I;
 ITEMS
 ScalarValue:I
 NumericConstant:7
 BinaryOperator:*
 FunctionTab
 CarriageControl:;
 ScalarValue:I
 CarriageControl:;
1970 NEXT I
 VariableName:I
1980 PRINT TAB((N+1)*7)"DEALER"
 ITEMS
 ScalarValue:N
 NumericConstant:1
 BinaryOperator:+
 NumericConstant:7
 BinaryOperator:*
 FunctionTab
 CarriageControl:
 TextConstant:"DEALER"
 CarriageControl:NL
1990 FOR J=1 TO 2
 control: VariableName:J
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:2"]
 step:    ["NumericConstant:1"]
2000 PRINT TAB(7);
 ITEMS
 NumericConstant:7
 FunctionTab
 CarriageControl:;
2010 FOR I=1 TO D1
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:D1"]
 step:    ["NumericConstant:1"]
2020 GOSUB 100
 LineNumber:100
2030 P(I,J)=X
 ScalarValue:I
 ScalarValue:J
 ScalarReference:P
 ScalarValue:X
 AssignmentOperator:=
2040 IF J=1 OR I<=N THEN GOSUB 750
 ScalarValue:J
 NumericConstant:1
 BinaryOperator:=
 ScalarValue:I
 ScalarValue:N
 BinaryOperator:<=
 BinaryOperator:OR
 LineNumber:750
2050 NEXT I
 VariableName:I
2060 PRINT
 ITEMS
 CarriageControl:NL
2070 NEXT J
 VariableName:J
2080 FOR I=1 TO D1
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:D1"]
 step:    ["NumericConstant:1"]
2090 R(I)=2
 ScalarValue:I
 ScalarReference:R
 NumericConstant:2
 AssignmentOperator:=
2100 NEXT I
 VariableName:I
2110 REM--TEST FOR INSURANCE
 Remark:--TEST FOR INSURANCE
2120 IF P(D1,1)>1 THEN 2240
 ScalarValue:D1
 NumericConstant:1
 ScalarValue:P
 NumericConstant:1
 BinaryOperator:>
2130 PRINT "ANY INSURANCE";
 ITEMS
 TextConstant:"ANY INSURANCE"
 CarriageControl:;
2140 INPUT H$
 ScalarReference:H$
2150 IF LEFT$(H$,1)<>"Y" THEN 2240
 ScalarValue:H$
 NumericConstant:1
 FunctionLeft
 TextConstant:"Y"
 BinaryOperator:<>
2160 PRINT "INSURANCE BETS"
 ITEMS
 TextConstant:"INSURANCE BETS"
 CarriageControl:NL
2170 FOR I=1 TO N: PRINT "#";I;: INPUT Z(I): NEXT I
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:N"]
 step:    ["NumericConstant:1"]
 ITEMS
 TextConstant:"#"
 CarriageControl:;
 ScalarValue:I
 CarriageControl:;
 ScalarValue:I
 ScalarReference:Z
 VariableName:I
2180 FOR I=1 TO N
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:N"]
 step:    ["NumericConstant:1"]
2190 IF Z(I)<0 OR Z(I)>B(I)/2 THEN 2160
 ScalarValue:I
 ScalarValue:Z
 NumericConstant:0
 BinaryOperator:<
 ScalarValue:I
 ScalarValue:Z
 ScalarValue:I
 ScalarValue:B
 NumericConstant:2
 BinaryOperator:/
 BinaryOperator:>
 BinaryOperator:OR
2200 NEXT I
 VariableName:I
2210 FOR I=1 TO N
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:N"]
 step:    ["NumericConstant:1"]
2220 S(I)=Z(I)*(3*(-(P(D1,2)>=10))-1)
 ScalarValue:I
 ScalarReference:S
 ScalarValue:I
 ScalarValue:Z
 NumericConstant:3
 ScalarValue:D1
 NumericConstant:2
 ScalarValue:P
 NumericConstant:10
 BinaryOperator:>=
 UnaryOperator:-
 BinaryOperator:*
 NumericConstant:1
 BinaryOperator:-
 BinaryOperator:*
 AssignmentOperator:=
2230 NEXT I
 VariableName:I
2240 REM--TEST FOR DEALER BLACKJACK
 Remark:--TEST FOR DEALER BLACKJACK
2250 L1=1: L2=1
 ScalarReference:L1
 NumericConstant:1
 AssignmentOperator:=
 ScalarReference:L2
 NumericConstant:1
 AssignmentOperator:=
2252 IF P(D1,1)=1 AND P(D1,2)>9 THEN L1=0: L2=0
 ScalarValue:D1
 NumericConstant:1
 ScalarValue:P
 NumericConstant:1
 BinaryOperator:=
 ScalarValue:D1
 NumericConstant:2
 ScalarValue:P
 NumericConstant:9
 BinaryOperator:>
 BinaryOperator:AND
 ScalarReference:L1
 NumericConstant:0
 AssignmentOperator:=
 ScalarReference:L2
 NumericConstant:0
 AssignmentOperator:=
2253 IF P(D1,2)=1 AND P(D1,1)>9 THEN L1=0: L2=0
 ScalarValue:D1
 NumericConstant:2
 ScalarValue:P
 NumericConstant:1
 BinaryOperator:=
 ScalarValue:D1
 NumericConstant:1
 ScalarValue:P
 NumericConstant:9
 BinaryOperator:>
 BinaryOperator:AND
 ScalarReference:L1
 NumericConstant:0
 AssignmentOperator:=
 ScalarReference:L2
 NumericConstant:0
 AssignmentOperator:=
2254 IF L1<>0 OR L2<>0 THEN 2320
 ScalarValue:L1
 NumericConstant:0
 BinaryOperator:<>
 ScalarValue:L2
 NumericConstant:0
 BinaryOperator:<>
 BinaryOperator:OR
2260 PRINT:PRINT "DEALER HAS A";MID$(D$,3*P(D1,2)-2,3);" IN THE HOLE ";
 ITEMS
 CarriageControl:NL
 ITEMS
 TextConstant:"DEALER HAS A"
 CarriageControl:;
 ScalarValue:D$
 NumericConstant:3
 ScalarValue:D1
 NumericConstant:2
 ScalarValue:P
 BinaryOperator:*
 NumericConstant:2
 BinaryOperator:-
 NumericConstant:3
 FunctionMid
 CarriageControl:;
 TextConstant:" IN THE HOLE "
 CarriageControl:;
2270 PRINT "FOR BLACKJACK"
 ITEMS
 TextConstant:"FOR BLACKJACK"
 CarriageControl:NL
2280 FOR I=1 TO D1
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:D1"]
 step:    ["NumericConstant:1"]
2290 GOSUB 300
 LineNumber:300
2300 NEXT I
 VariableName:I
2310 GOTO 3140
 LineNumber:3140
2320 REM--NO DEALER BLACKJACK
 Remark:--NO DEALER BLACKJACK
2330 IF P(D1,1)>1 AND P(D1,1)<10 THEN 2350
 ScalarValue:D1
 NumericConstant:1
 ScalarValue:P
 NumericConstant:1
 BinaryOperator:>
 ScalarValue:D1
 NumericConstant:1
 ScalarValue:P
 NumericConstant:10
 BinaryOperator:<
 BinaryOperator:AND
2340 PRINT:PRINT "NO DEALER BLACKJACK."
 ITEMS
 CarriageControl:NL
 ITEMS
 TextConstant:"NO DEALER BLACKJACK."
 CarriageControl:NL
2350 REM--NOW PLAY THE HANDS
 Remark:--NOW PLAY THE HANDS
2360 FOR I=1 TO N
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:N"]
 step:    ["NumericConstant:1"]
2370 PRINT "PLAYER";I;
 ITEMS
 TextConstant:"PLAYER"
 CarriageControl:;
 ScalarValue:I
 CarriageControl:;
2380 H1=7
 ScalarReference:H1
 NumericConstant:7
 AssignmentOperator:=
2390 GOSUB 1410
 LineNumber:1410
2400 ON H GOTO 2550,2410,2510,2600
 ScalarValue:H
 LineNumber:2550
 LineNumber:2410
 LineNumber:2510
 LineNumber:2600
2410 REM--PLAYER WANTS TO STAND
 Remark:--PLAYER WANTS TO STAND
2420 GOSUB 300
 LineNumber:300
2430 IF Q(I)<>21 THEN 2490
 ScalarValue:I
 ScalarValue:Q
 NumericConstant:21
 BinaryOperator:<>
2440 PRINT "BLACKJACK"
 ITEMS
 TextConstant:"BLACKJACK"
 CarriageControl:NL
2450 S(I)=S(I)+1.5*B(I)
 ScalarValue:I
 ScalarReference:S
 ScalarValue:I
 ScalarValue:S
 NumericConstant:1.5
 ScalarValue:I
 ScalarValue:B
 BinaryOperator:*
 BinaryOperator:+
 AssignmentOperator:=
2460 B(I)=0
 ScalarValue:I
 ScalarReference:B
 NumericConstant:0
 AssignmentOperator:=
2470 GOSUB 1200
 LineNumber:1200
2480 GOTO 2900
 LineNumber:2900
2490 GOSUB 1320
 LineNumber:1320
2500 GOTO 2900
 LineNumber:2900
2510 REM--PLAYER WANTS TO DOUBLE DOWN
 Remark:--PLAYER WANTS TO DOUBLE DOWN
2520 GOSUB 300
 LineNumber:300
2530 GOSUB 860
 LineNumber:860
2540 GOTO 2900
 LineNumber:2900
2550 REM--PLAYER WANTS TO BE HIT
 Remark:--PLAYER WANTS TO BE HIT
2560 GOSUB 300
 LineNumber:300
2570 H1=3
 ScalarReference:H1
 NumericConstant:3
 AssignmentOperator:=
2580 GOSUB 950
 LineNumber:950
2590 GOTO 2900
 LineNumber:2900
2600 REM--PLAYER WANTS TO SPLIT
 Remark:--PLAYER WANTS TO SPLIT
2610 L1=P(I,1): IF P(I,1)>10 THEN L1=10
 ScalarReference:L1
 ScalarValue:I
 NumericConstant:1
 ScalarValue:P
 AssignmentOperator:=
 ScalarValue:I
 NumericConstant:1
 ScalarValue:P
 NumericConstant:10
 BinaryOperator:>
 ScalarReference:L1
 NumericConstant:10
 AssignmentOperator:=
2612 L2=P(I,2): IF P(I,2)>10 THEN L2=10
 ScalarReference:L2
 ScalarValue:I
 NumericConstant:2
 ScalarValue:P
 AssignmentOperator:=
 ScalarValue:I
 NumericConstant:2
 ScalarValue:P
 NumericConstant:10
 BinaryOperator:>
 ScalarReference:L2
 NumericConstant:10
 AssignmentOperator:=
2614 IF L1=L2 THEN 2640
 ScalarValue:L1
 ScalarValue:L2
 BinaryOperator:=
2620 PRINT "SPLITTING NOT ALLOWED."
 ITEMS
 TextConstant:"SPLITTING NOT ALLOWED."
 CarriageControl:NL
2630 GOTO 2370
 LineNumber:2370
2640 REM--PLAY OUT SPLIT
 Remark:--PLAY OUT SPLIT
2650 I1=I+D1
 ScalarReference:I1
 ScalarValue:I
 ScalarValue:D1
 BinaryOperator:+
 AssignmentOperator:=
2660 R(I1)=2
 ScalarValue:I1
 ScalarReference:R
 NumericConstant:2
 AssignmentOperator:=
2670 P(I1,1)=P(I,2)
 ScalarValue:I1
 NumericConstant:1
 ScalarReference:P
 ScalarValue:I
 NumericConstant:2
 ScalarValue:P
 AssignmentOperator:=
2680 B(I+D1)=B(I)
 ScalarValue:I
 ScalarValue:D1
 BinaryOperator:+
 ScalarReference:B
 ScalarValue:I
 ScalarValue:B
 AssignmentOperator:=
2690 GOSUB 100
 LineNumber:100
2700 PRINT "FIRST HAND RECEIVES A";
 ITEMS
 TextConstant:"FIRST HAND RECEIVES A"
 CarriageControl:;
2710 GOSUB 700
 LineNumber:700
2720 P(I,2)=X
 ScalarValue:I
 NumericConstant:2
 ScalarReference:P
 ScalarValue:X
 AssignmentOperator:=
2730 GOSUB 300
 LineNumber:300
2740 PRINT
 ITEMS
 CarriageControl:NL
2750 GOSUB 100
 LineNumber:100
2760 PRINT "SECOND HAND RECEIVES A";
 ITEMS
 TextConstant:"SECOND HAND RECEIVES A"
 CarriageControl:;
2770 I=I1
 ScalarReference:I
 ScalarValue:I1
 AssignmentOperator:=
2780 GOSUB 700
 LineNumber:700
2790 P(I,2)=X
 ScalarValue:I
 NumericConstant:2
 ScalarReference:P
 ScalarValue:X
 AssignmentOperator:=
2800 GOSUB 300
 LineNumber:300
2810 PRINT
 ITEMS
 CarriageControl:NL
2820 I=I1-D1
 ScalarReference:I
 ScalarValue:I1
 ScalarValue:D1
 BinaryOperator:-
 AssignmentOperator:=
2830 IF P(I,1)=1 THEN 2900
 ScalarValue:I
 NumericConstant:1
 ScalarValue:P
 NumericConstant:1
 BinaryOperator:=
2840 REM--NOW PLAY THE TWO HANDS
 Remark:--NOW PLAY THE TWO HANDS
2850 PRINT "HAND";1-(I>D1);
 ITEMS
 TextConstant:"HAND"
 CarriageControl:;
 NumericConstant:1
 ScalarValue:I
 ScalarValue:D1
 BinaryOperator:>
 BinaryOperator:-
 CarriageControl:;
2860 GOSUB 800
 LineNumber:800
2870 I=I+D1
 ScalarReference:I
 ScalarValue:I
 ScalarValue:D1
 BinaryOperator:+
 AssignmentOperator:=
2880 IF I=I1 THEN 2850
 ScalarValue:I
 ScalarValue:I1
 BinaryOperator:=
2890 I=I1-D1
 ScalarReference:I
 ScalarValue:I1
 ScalarValue:D1
 BinaryOperator:-
 AssignmentOperator:=
2900 NEXT I
 VariableName:I
2910 GOSUB 300
 LineNumber:300
2920 REM--TEST FOR PLAYING DEALER'S HAND
 Remark:--TEST FOR PLAYING DEALER'S HAND
2930 FOR I=1 TO N
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:N"]
 step:    ["NumericConstant:1"]
2940 IF R(I)>0 OR R(I+D1)>0 THEN 3010
 ScalarValue:I
 ScalarValue:R
 NumericConstant:0
 BinaryOperator:>
 ScalarValue:I
 ScalarValue:D1
 BinaryOperator:+
 ScalarValue:R
 NumericConstant:0
 BinaryOperator:>
 BinaryOperator:OR
2950 NEXT I
 VariableName:I
2960 PRINT "DEALER HAD A";
 ITEMS
 TextConstant:"DEALER HAD A"
 CarriageControl:;
2970 X=P(D1,2)
 ScalarReference:X
 ScalarValue:D1
 NumericConstant:2
 ScalarValue:P
 AssignmentOperator:=
2980 GOSUB 700
 LineNumber:700
2990 PRINT "CONCEALED."
 ITEMS
 TextConstant:"CONCEALED."
 CarriageControl:NL
3000 GOTO 3140
 LineNumber:3140
3010 PRINT "DEALER HAS A";MID$(D$,3*P(D1,2)-2,3);" CONCEALED ";
 ITEMS
 TextConstant:"DEALER HAS A"
 CarriageControl:;
 ScalarValue:D$
 NumericConstant:3
 ScalarValue:D1
 NumericConstant:2
 ScalarValue:P
 BinaryOperator:*
 NumericConstant:2
 BinaryOperator:-
 NumericConstant:3
 FunctionMid
 CarriageControl:;
 TextConstant:" CONCEALED "
 CarriageControl:;
3020 I=D1
 ScalarReference:I
 ScalarValue:D1
 AssignmentOperator:=
3030 AA=Q(I): GOSUB 3400
 ScalarReference:AA
 ScalarValue:I
 ScalarValue:Q
 AssignmentOperator:=
 LineNumber:3400
3035 PRINT "FOR A TOTAL OF";AA
 ITEMS
 TextConstant:"FOR A TOTAL OF"
 CarriageControl:;
 ScalarValue:AA
 CarriageControl:NL
3040 IF AA>16 THEN 3130
 ScalarValue:AA
 NumericConstant:16
 BinaryOperator:>
3050 PRINT "DRAWS";
 ITEMS
 TextConstant:"DRAWS"
 CarriageControl:;
3060 GOSUB 100
 LineNumber:100
3070 GOSUB 750
 LineNumber:750
3080 GOSUB 1100
 LineNumber:1100
3090 AA=Q: GOSUB 3400
 ScalarReference:AA
 ScalarValue:Q
 AssignmentOperator:=
 LineNumber:3400
3095 IF Q>0 AND AA<17 THEN 3060
 ScalarValue:Q
 NumericConstant:0
 BinaryOperator:>
 ScalarValue:AA
 NumericConstant:17
 BinaryOperator:<
 BinaryOperator:AND
3100 Q(I)=Q-(Q<0)/2
 ScalarValue:I
 ScalarReference:Q
 ScalarValue:Q
 ScalarValue:Q
 NumericConstant:0
 BinaryOperator:<
 NumericConstant:2
 BinaryOperator:/
 BinaryOperator:-
 AssignmentOperator:=
3110 IF Q<0 THEN 3140
 ScalarValue:Q
 NumericConstant:0
 BinaryOperator:<
3120 AA=Q: GOSUB 3400
 ScalarReference:AA
 ScalarValue:Q
 AssignmentOperator:=
 LineNumber:3400
3125 PRINT "---TOTAL IS";AA
 ITEMS
 TextConstant:"---TOTAL IS"
 CarriageControl:;
 ScalarValue:AA
 CarriageControl:NL
3130 PRINT
 ITEMS
 CarriageControl:NL
3140 REM--TALLY THE RESULT
 Remark:--TALLY THE RESULT
3150 REM 
 Remark:
3160 Z$="LOSES PUSHES WINS "
 ScalarReference:Z$
 TextConstant:"LOSES PUSHES WINS "
 AssignmentOperator:=
3165 PRINT
 ITEMS
 CarriageControl:NL
3170 FOR I=1 TO N
 control: VariableName:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:N"]
 step:    ["NumericConstant:1"]
3180 AA=Q(I): GOSUB 3400
 ScalarReference:AA
 ScalarValue:I
 ScalarValue:Q
 AssignmentOperator:=
 LineNumber:3400
3182 AB=Q(I+D1): GOSUB 3410
 ScalarReference:AB
 ScalarValue:I
 ScalarValue:D1
 BinaryOperator:+
 ScalarValue:Q
 AssignmentOperator:=
 LineNumber:3410
3184 AC=Q(D1): GOSUB 3420
 ScalarReference:AC
 ScalarValue:D1
 ScalarValue:Q
 AssignmentOperator:=
 LineNumber:3420
3186 S(I)=S(I)+B(I)*SGN(AA-AC)+B(I+D1)*SGN(AB-AC)
 ScalarValue:I
 ScalarReference:S
 ScalarValue:I
 ScalarValue:S
 ScalarValue:I
 ScalarValue:B
 ScalarValue:AA
 ScalarValue:AC
 BinaryOperator:-
 FunctionSgn
 BinaryOperator:*
 BinaryOperator:+
 ScalarValue:I
 ScalarValue:D1
 BinaryOperator:+
 ScalarValue:B
 ScalarValue:AB
 ScalarValue:AC
 BinaryOperator:-
 FunctionSgn
 BinaryOperator:*
 BinaryOperator:+
 AssignmentOperator:=
3188 B(I+D1)=0
 ScalarValue:I
 ScalarValue:D1
 BinaryOperator:+
 ScalarReference:B
 NumericConstant:0
 AssignmentOperator:=
3200 PRINT "PLAYER";I;
 ITEMS
 TextConstant:"PLAYER"
 CarriageControl:;
 ScalarValue:I
 CarriageControl:;
3210 PRINT MID$(Z$,SGN(S(I))*6+7,6);" ";
 ITEMS
 ScalarValue:Z$
 ScalarValue:I
 ScalarValue:S
 FunctionSgn
 NumericConstant:6
 BinaryOperator:*
 NumericConstant:7
 BinaryOperator:+
 NumericConstant:6
 FunctionMid
 CarriageControl:;
 TextConstant:" "
 CarriageControl:;
3220 IF S(I)<>0 THEN 3250
 ScalarValue:I
 ScalarValue:S
 NumericConstant:0
 BinaryOperator:<>
3230 PRINT "      ";
 ITEMS
 TextConstant:"      "
 CarriageControl:;
3240 GOTO 3260
 LineNumber:3260
3250 PRINT ABS(S(I));
 ITEMS
 ScalarValue:I
 ScalarValue:S
 FunctionAbs
 CarriageControl:;
3260 T(I)=T(I)+S(I)
 ScalarValue:I
 ScalarReference:T
 ScalarValue:I
 ScalarValue:T
 ScalarValue:I
 ScalarValue:S
 BinaryOperator:+
 AssignmentOperator:=
3270 PRINT "TOTAL=";T(I)
 ITEMS
 TextConstant:"TOTAL="
 CarriageControl:;
 ScalarValue:I
 ScalarValue:T
 CarriageControl:NL
3280 GOSUB 1200
 LineNumber:1200
3290 T(D1)=T(D1)-S(I)
 ScalarValue:D1
 ScalarReference:T
 ScalarValue:D1
 ScalarValue:T
 ScalarValue:I
 ScalarValue:S
 BinaryOperator:-
 AssignmentOperator:=
3300 I=I+D1
 ScalarReference:I
 ScalarValue:I
 ScalarValue:D1
 BinaryOperator:+
 AssignmentOperator:=
3310 GOSUB 1200
 LineNumber:1200
3320 I=I-D1
 ScalarReference:I
 ScalarValue:I
 ScalarValue:D1
 BinaryOperator:-
 AssignmentOperator:=
3330 NEXT I
 VariableName:I
3340 PRINT "DEALER'S TOTAL=";T(D1)
 ITEMS
 TextConstant:"DEALER'S TOTAL="
 CarriageControl:;
 ScalarValue:D1
 ScalarValue:T
 CarriageControl:NL
3345 PRINT
 ITEMS
 CarriageControl:NL
3350 GOSUB 1200
 LineNumber:1200
3360 GOTO 1810
 LineNumber:1810
3400 AA=AA+11*(AA>=22): RETURN
 ScalarReference:AA
 ScalarValue:AA
 NumericConstant:11
 ScalarValue:AA
 NumericConstant:22
 BinaryOperator:>=
 BinaryOperator:*
 BinaryOperator:+
 AssignmentOperator:=
 
3410 AB=AB+11*(AB>=22): RETURN
 ScalarReference:AB
 ScalarValue:AB
 NumericConstant:11
 ScalarValue:AB
 NumericConstant:22
 BinaryOperator:>=
 BinaryOperator:*
 BinaryOperator:+
 AssignmentOperator:=
 
3420 AC=AC+11*(AC>=22): RETURN
 ScalarReference:AC
 ScalarValue:AC
 NumericConstant:11
 ScalarValue:AC
 NumericConstant:22
 BinaryOperator:>=
 BinaryOperator:*
 BinaryOperator:+
 AssignmentOperator:=
 
