2 PRINT TAB(33);"POKER"
 NumericValue:33
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"POKER"
 CarriageControl:NL
4 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericValue:15
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
6 PRINT: PRINT: PRINT
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
10 DIM A(50),B(15)
 NumericValue:50
 Declaration:A() -> .()
 NumericValue:15
 Declaration:B() -> .()
20 DEF FNA(X)=INT(10*RND(1))
 UserFunctionName:FNA -> .
 VariableName:X -> .
 NumericValue:10
 NumericValue:1
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
30 DEF FNB(X)=X-100*INT(X/100)
 UserFunctionName:FNB -> .
 VariableName:X -> .
 Variable:X -> .
 NumericValue:100
 Variable:X -> .
 NumericValue:100
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
40 PRINT "WELCOME TO THE CASINO.  WE EACH HAVE $200."
 TextValue:"WELCOME TO THE CASINO.  WE EACH HAVE $200."
 CarriageControl:NL
50 PRINT "I WILL OPEN THE BETTING BEFORE THE DRAW; YOU OPEN AFTER."
 TextValue:"I WILL OPEN THE BETTING BEFORE THE DRAW; YOU OPEN AFTER."
 CarriageControl:NL
60 PRINT "TO FOLD BET 0; TO CHECK BET .5."
 TextValue:"TO FOLD BET 0; TO CHECK BET .5."
 CarriageControl:NL
70 PRINT "ENOUGH TALK -- LET'S GET DOWN TO BUSINESS."
 TextValue:"ENOUGH TALK -- LET'S GET DOWN TO BUSINESS."
 CarriageControl:NL
80 PRINT
 CarriageControl:NL
90 LET O=1
 Variable:O -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
100 LET C=200
 Variable:C -> .
 NumericValue:200
 AssignmentOperator:= =. -> .
110 LET S=200
 Variable:S -> .
 NumericValue:200
 AssignmentOperator:= =. -> .
120 LET P=0
 Variable:P -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
130 REM
 Remark:
140 PRINT
 CarriageControl:NL
150 IF C<=5 THEN 3670
 Variable:C -> .
 NumericValue:5
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:3670
160 PRINT "THE ANTE IS $5.  I WILL DEAL:"
 TextValue:"THE ANTE IS $5.  I WILL DEAL:"
 CarriageControl:NL
170 PRINT
 CarriageControl:NL
180 IF S>5 THEN 200
 Variable:S -> .
 NumericValue:5
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:200
190 GOSUB 3830
 LineNumber:3830
200 LET P=P+10
 Variable:P -> .
 Variable:P -> .
 NumericValue:10
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
210 LET S=S-5
 Variable:S -> .
 Variable:S -> .
 NumericValue:5
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
220 LET C=C-5
 Variable:C -> .
 Variable:C -> .
 NumericValue:5
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
230 FOR Z=1 TO 10
 control: Variable:Z -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:10"]
240 GOSUB 1740
 LineNumber:1740
250 NEXT Z
 Variable:Z -> .
260 PRINT "YOUR HAND:"
 TextValue:"YOUR HAND:"
 CarriageControl:NL
270 N=1
 Variable:N -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
280 GOSUB 1850
 LineNumber:1850
290 N=6
 Variable:N -> .
 NumericValue:6
 AssignmentOperator:= =. -> .
300 I=2
 Variable:I -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
310 GOSUB 2170
 LineNumber:2170
320 PRINT
 CarriageControl:NL
330 IF I<>6 THEN 470
 Variable:I -> .
 NumericValue:6
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:470
340 IF FNA(0)<=7 THEN 370
 NumericValue:0
 UserFunction:FNA(.) -> .
 NumericValue:7
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:370
350 LET X=11100
 Variable:X -> .
 NumericValue:11100
 AssignmentOperator:= =. -> .
360 GOTO 420
 LineNumber:420
370 IF FNA(0)<=7 THEN 400
 NumericValue:0
 UserFunction:FNA(.) -> .
 NumericValue:7
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:400
380 LET X=11110
 Variable:X -> .
 NumericValue:11110
 AssignmentOperator:= =. -> .
390 GOTO 420
 LineNumber:420
400 IF FNA(0)>=1 THEN 450
 NumericValue:0
 UserFunction:FNA(.) -> .
 NumericValue:1
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:450
410 X=11111
 Variable:X -> .
 NumericValue:11111
 AssignmentOperator:= =. -> .
420 I=7
 Variable:I -> .
 NumericValue:7
 AssignmentOperator:= =. -> .
430 Z=23
 Variable:Z -> .
 NumericValue:23
 AssignmentOperator:= =. -> .
440 GOTO 580
 LineNumber:580
450 Z=1
 Variable:Z -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
460 GOTO 510
 LineNumber:510
470 IF U>=13 THEN 540
 Variable:U -> .
 NumericValue:13
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:540
480 IF FNA(0)>=2 THEN 500
 NumericValue:0
 UserFunction:FNA(.) -> .
 NumericValue:2
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:500
490 GOTO 420
 WARNING: Branch to line before GOSUB start
 LineNumber:420
500 Z=0
 Variable:Z -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
510 K=0
 Variable:K -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
520 PRINT "I CHECK."
 TextValue:"I CHECK."
 CarriageControl:NL
530 GOTO 620
 LineNumber:620
540 IF U<=16 THEN 570
 Variable:U -> .
 NumericValue:16
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:570
550 Z=2
 Variable:Z -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
560 IF FNA(0)>=1 THEN 580
 NumericValue:0
 UserFunction:FNA(.) -> .
 NumericValue:1
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:580
570 Z=35
 Variable:Z -> .
 NumericValue:35
 AssignmentOperator:= =. -> .
580 V=Z+FNA(0)
 Variable:V -> .
 Variable:Z -> .
 NumericValue:0
 UserFunction:FNA(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
590 GOSUB 3480
 LineNumber:3480
600 PRINT "I'LL OPEN WITH $"V
 TextValue:"I'LL OPEN WITH $"
 CarriageControl:
 Variable:V -> .
 CarriageControl:NL
610 K=V
 Variable:K -> .
 Variable:V -> .
 AssignmentOperator:= . -> .
620 GOSUB 3050
 LineNumber:3050
630 GOSUB 650
 LineNumber:650
640 GOTO 820
 LineNumber:820
650 IF I<>3 THEN 760
 WARNING: GOSUB length exceeds limit 40
 Variable:I -> .
 NumericValue:3
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:760
660 PRINT
 CarriageControl:NL
670 PRINT "I WIN."
 TextValue:"I WIN."
 CarriageControl:NL
680 C=C+P
 Variable:C -> .
 Variable:C -> .
 Variable:P -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
690 PRINT "NOW I HAVE $"C"AND YOU HAVE $"S
 TextValue:"NOW I HAVE $"
 CarriageControl:
 Variable:C -> .
 CarriageControl:
 TextValue:"AND YOU HAVE $"
 CarriageControl:
 Variable:S -> .
 CarriageControl:NL
700 PRINT "DO YOU WISH TO CONTINUE";
 TextValue:"DO YOU WISH TO CONTINUE"
 CarriageControl:;
710 INPUT H$
 Variable:H$ -> $
720 IF H$="YES" THEN 120
 WARNING: Branch to line before GOSUB start
 Variable:H$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:120
730 IF H$="NO" THEN 4100
 Variable:H$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4100
740 PRINT "ANSWER YES OR NO, PLEASE."
 TextValue:"ANSWER YES OR NO, PLEASE."
 CarriageControl:NL
750 GOTO 700
 LineNumber:700
760 IF I<>4 THEN 810
 Variable:I -> .
 NumericValue:4
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:810
770 PRINT
 CarriageControl:NL
780 PRINT "YOU WIN."
 TextValue:"YOU WIN."
 CarriageControl:NL
790 S=S+P
 Variable:S -> .
 Variable:S -> .
 Variable:P -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
800 GOTO 690
 LineNumber:690
810 RETURN
 
820 PRINT
 CarriageControl:NL
830 PRINT "NOW WE DRAW -- HOW MANY CARDS DO YOU WANT";
 TextValue:"NOW WE DRAW -- HOW MANY CARDS DO YOU WANT"
 CarriageControl:;
840 INPUT T
 Variable:T -> .
850 IF T=0 THEN 980
 Variable:T -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:980
860 Z=10
 Variable:Z -> .
 NumericValue:10
 AssignmentOperator:= =. -> .
870 IF T<4 THEN 900
 Variable:T -> .
 NumericValue:4
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:900
880 PRINT "YOU CAN'T DRAW MORE THAN THREE CARDS."
 TextValue:"YOU CAN'T DRAW MORE THAN THREE CARDS."
 CarriageControl:NL
890 GOTO 840
 LineNumber:840
900 PRINT "WHAT ARE THEIR NUMBERS:"
 TextValue:"WHAT ARE THEIR NUMBERS:"
 CarriageControl:NL
910 FOR Q=1 TO T
 control: Variable:Q -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:T -> ."]
920 INPUT U
 Variable:U -> .
930 GOSUB 1730
 LineNumber:1730
940 NEXT Q
 Variable:Q -> .
950 PRINT "YOUR NEW HAND:"
 TextValue:"YOUR NEW HAND:"
 CarriageControl:NL
960 N=1
 Variable:N -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
970 GOSUB 1850
 LineNumber:1850
980 Z=10+T
 Variable:Z -> .
 NumericValue:10
 Variable:T -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
990 FOR U=6 TO 10
 control: Variable:U -> .
 start:   ["NumericValue:6"]
 end:     ["NumericValue:10"]
1000 IF INT(X/10^(U-6))<>10*INT(X/10^(U-5)) THEN 1020
 Variable:X -> .
 NumericValue:10
 Variable:U -> .
 NumericValue:6
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 NumericValue:10
 Variable:X -> .
 NumericValue:10
 Variable:U -> .
 NumericValue:5
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1020
1010 GOSUB 1730
 LineNumber:1730
1020 NEXT U
 Variable:U -> .
1030 PRINT
 CarriageControl:NL
1040 PRINT "I AM TAKING"Z-10-T"CARD";
 TextValue:"I AM TAKING"
 CarriageControl:
 Variable:Z -> .
 NumericValue:10
 BinaryOperatorMinus:-(.,.) -> .
 Variable:T -> .
 BinaryOperatorMinus:-(.,.) -> .
 CarriageControl:
 TextValue:"CARD"
 CarriageControl:;
1050 IF Z=11+T THEN 1090
 Variable:Z -> .
 NumericValue:11
 Variable:T -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1090
1060 PRINT "S"
 TextValue:"S"
 CarriageControl:NL
1070 PRINT
 CarriageControl:NL
1080 GOTO 1100
 LineNumber:1100
1090 PRINT
 CarriageControl:NL
1100 N=6
 Variable:N -> .
 NumericValue:6
 AssignmentOperator:= =. -> .
1110 V=I
 Variable:V -> .
 Variable:I -> .
 AssignmentOperator:= . -> .
1120 I=1
 Variable:I -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
1130 GOSUB 2170
 LineNumber:2170
1140 B=U
 Variable:B -> .
 Variable:U -> .
 AssignmentOperator:= . -> .
1150 M=D
 Variable:M -> .
 Variable:D -> .
 AssignmentOperator:= . -> .
1160 IF V<>7 THEN 1190
 Variable:V -> .
 NumericValue:7
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1190
1170 Z=28
 Variable:Z -> .
 NumericValue:28
 AssignmentOperator:= =. -> .
1180 GOTO 1330
 LineNumber:1330
1190 IF I<>6 THEN 1220
 Variable:I -> .
 NumericValue:6
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1220
1200 Z=1
 Variable:Z -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
1210 GOTO 1330
 LineNumber:1330
1220 IF U>=13 THEN 1270
 Variable:U -> .
 NumericValue:13
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:1270
1230 Z=2
 Variable:Z -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
1240 IF FNA(0)<>6 THEN 1260
 NumericValue:0
 UserFunction:FNA(.) -> .
 NumericValue:6
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1260
1250 Z=19
 Variable:Z -> .
 NumericValue:19
 AssignmentOperator:= =. -> .
1260 GOTO 1330
 LineNumber:1330
1270 IF U>=16 THEN 1320
 Variable:U -> .
 NumericValue:16
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:1320
1280 Z=19
 Variable:Z -> .
 NumericValue:19
 AssignmentOperator:= =. -> .
1290 IF FNA(0)<>8 THEN 1310
 NumericValue:0
 UserFunction:FNA(.) -> .
 NumericValue:8
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1310
1300 Z=11
 Variable:Z -> .
 NumericValue:11
 AssignmentOperator:= =. -> .
1310 GOTO 1330
 LineNumber:1330
1320 Z=2
 Variable:Z -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
1330 K=0
 Variable:K -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1340 GOSUB 3050
 LineNumber:3050
1350 IF T<>.5 THEN 1450
 Variable:T -> .
 NumericValue:.5
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1450
1360 IF V=7 THEN 1400
 Variable:V -> .
 NumericValue:7
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1400
1370 IF I<>6 THEN 1400
 Variable:I -> .
 NumericValue:6
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1400
1380 PRINT "I'LL CHECK"
 TextValue:"I'LL CHECK"
 CarriageControl:NL
1390 GOTO 1460
 LineNumber:1460
1400 V=Z+FNA(0)
 Variable:V -> .
 Variable:Z -> .
 NumericValue:0
 UserFunction:FNA(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1410 GOSUB 3480
 LineNumber:3480
1420 PRINT "I'LL BET $"V
 TextValue:"I'LL BET $"
 CarriageControl:
 Variable:V -> .
 CarriageControl:NL
1430 K=V
 Variable:K -> .
 Variable:V -> .
 AssignmentOperator:= . -> .
1440 GOSUB 3060
 LineNumber:3060
1450 GOSUB 650
 LineNumber:650
1460 PRINT
 CarriageControl:NL
1470 PRINT "NOW WE COMPARE HANDS:"
 TextValue:"NOW WE COMPARE HANDS:"
 CarriageControl:NL
1480 J$=H$
 Variable:J$ -> $
 Variable:H$ -> $
 AssignmentOperator:= $ -> $
1490 K$=I$
 Variable:K$ -> $
 Variable:I$ -> $
 AssignmentOperator:= $ -> $
1500 PRINT "MY HAND:"
 TextValue:"MY HAND:"
 CarriageControl:NL
1510 N=6
 Variable:N -> .
 NumericValue:6
 AssignmentOperator:= =. -> .
1520 GOSUB 1850
 LineNumber:1850
1530 N=1
 Variable:N -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
1540 GOSUB 2170
 LineNumber:2170
1550 PRINT
 CarriageControl:NL
1560 PRINT "YOU HAVE ";
 TextValue:"YOU HAVE "
 CarriageControl:;
1570 K=D
 Variable:K -> .
 Variable:D -> .
 AssignmentOperator:= . -> .
1580 GOSUB 3690
 LineNumber:3690
1590 H$=J$
 Variable:H$ -> $
 Variable:J$ -> $
 AssignmentOperator:= $ -> $
1600 I$=K$
 Variable:I$ -> $
 Variable:K$ -> $
 AssignmentOperator:= $ -> $
1610 K=M
 Variable:K -> .
 Variable:M -> .
 AssignmentOperator:= . -> .
1620 PRINT "AND I HAVE ";
 TextValue:"AND I HAVE "
 CarriageControl:;
1630 GOSUB 3690
 LineNumber:3690
1640 IF B>U THEN 670
 Variable:B -> .
 Variable:U -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:670
1650 IF U>B THEN 780
 Variable:U -> .
 Variable:B -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:780
1660 IF H$="A FLUS" THEN 1700
 Variable:H$ -> $
 TextValue:"A FLUS"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1700
1662 IF FNB(M)<FNB(D) THEN 780
 Variable:M -> .
 UserFunction:FNB(.) -> .
 Variable:D -> .
 UserFunction:FNB(.) -> .
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:780
1664 IF FNB(M)>FNB(D) THEN 670
 Variable:M -> .
 UserFunction:FNB(.) -> .
 Variable:D -> .
 UserFunction:FNB(.) -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:670
1670 PRINT "THE HAND IS DRAWN."
 TextValue:"THE HAND IS DRAWN."
 CarriageControl:NL
1680 PRINT "ALL $"P"REMAINS IN THE POT."
 TextValue:"ALL $"
 CarriageControl:
 Variable:P -> .
 CarriageControl:
 TextValue:"REMAINS IN THE POT."
 CarriageControl:NL
1690 GOTO 140
 WARNING: Branch to line before GOSUB start
 LineNumber:140
1700 IF FNB(M)>FNB(D) THEN 670
 Variable:M -> .
 UserFunction:FNB(.) -> .
 Variable:D -> .
 UserFunction:FNB(.) -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:670
1710 IF FNB(D)>FNB(M) THEN 780
 Variable:D -> .
 UserFunction:FNB(.) -> .
 Variable:M -> .
 UserFunction:FNB(.) -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:780
1720 GOTO 1670
 LineNumber:1670
1730 Z=Z+1
 Variable:Z -> .
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1740 A(Z)=100*INT(4*RND(1))+INT(100*RND(1))
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 Variable:Z -> .
 Variable:A(.) -> .
 NumericValue:100
 NumericValue:4
 NumericValue:1
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:100
 NumericValue:1
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1750 IF INT(A(Z)/100)>3 THEN 1740
 WARNING: Multiple GOSUB entry points
 Variable:Z -> .
 Variable:A(.) -> .
 NumericValue:100
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 NumericValue:3
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1740
1760 IF A(Z)-100*INT(A(Z)/100)>12 THEN 1740
 WARNING: Multiple GOSUB entry points
 Variable:Z -> .
 Variable:A(.) -> .
 NumericValue:100
 Variable:Z -> .
 Variable:A(.) -> .
 NumericValue:100
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:12
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1740
1765 IF Z=1 THEN 1840
 WARNING: Multiple GOSUB entry points
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1840
1770 FOR K=1 TO Z-1
 WARNING: Multiple GOSUB entry points
 control: Variable:K -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:Z -> .", "NumericValue:1", "BinaryOperatorMinus:-(.,.) -> ."]
1780 IF A(Z)=A(K) THEN 1740
 WARNING: Multiple GOSUB entry points
 Variable:Z -> .
 Variable:A(.) -> .
 Variable:K -> .
 Variable:A(.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1740
1790 NEXT K
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
1800 IF Z<=10 THEN 1840
 WARNING: Multiple GOSUB entry points
 Variable:Z -> .
 NumericValue:10
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:1840
1810 N=A(U)
 WARNING: Multiple GOSUB entry points
 Variable:N -> .
 Variable:U -> .
 Variable:A(.) -> .
 AssignmentOperator:= . -> .
1820 A(U)=A(Z)
 WARNING: Multiple GOSUB entry points
 Variable:U -> .
 Variable:A(.) -> .
 Variable:Z -> .
 Variable:A(.) -> .
 AssignmentOperator:= . -> .
1830 A(Z)=N
 WARNING: Multiple GOSUB entry points
 Variable:Z -> .
 Variable:A(.) -> .
 Variable:N -> .
 AssignmentOperator:= . -> .
1840 RETURN
 WARNING: Multiple GOSUB entry points
 
1850 FOR Z=N TO N+4
 control: Variable:Z -> .
 start:   ["Variable:N -> ."]
 end:     ["Variable:N -> .", "NumericValue:4", "BinaryOperatorPlus:+(.,.) -> ."]
1860 PRINT Z"--  ";
 Variable:Z -> .
 CarriageControl:
 TextValue:"--  "
 CarriageControl:;
1870 GOSUB 1950
 LineNumber:1950
1880 PRINT " OF";
 TextValue:" OF"
 CarriageControl:;
1890 GOSUB 2070
 LineNumber:2070
1900 IF Z/2<>INT(Z/2) THEN 1920
 Variable:Z -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 Variable:Z -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1920
1910 PRINT
 CarriageControl:NL
1920 NEXT Z
 Variable:Z -> .
1930 PRINT
 CarriageControl:NL
1940 RETURN
 
1950 K=FNB(A(Z))
 Variable:K -> .
 Variable:Z -> .
 Variable:A(.) -> .
 UserFunction:FNB(.) -> .
 AssignmentOperator:= . -> .
1960 IF K<>9 THEN 1980
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
 NumericValue:9
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1980
1970 PRINT "JACK";
 WARNING: Multiple GOSUB entry points
 TextValue:"JACK"
 CarriageControl:;
1980 IF K<>10 THEN 2000
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
 NumericValue:10
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2000
1990 PRINT "QUEEN";
 WARNING: Multiple GOSUB entry points
 TextValue:"QUEEN"
 CarriageControl:;
2000 IF K<>11 THEN 2020
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
 NumericValue:11
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2020
2010 PRINT "KING";
 WARNING: Multiple GOSUB entry points
 TextValue:"KING"
 CarriageControl:;
2020 IF K<>12 THEN 2040
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
 NumericValue:12
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2040
2030 PRINT "ACE";
 WARNING: Multiple GOSUB entry points
 TextValue:"ACE"
 CarriageControl:;
2040 IF K>=9 THEN 2060
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
 NumericValue:9
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:2060
2050 PRINT K+2;
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:;
2060 RETURN
 WARNING: Multiple GOSUB entry points
 
2070 K=INT(A(Z)/100)
 Variable:K -> .
 Variable:Z -> .
 Variable:A(.) -> .
 NumericValue:100
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
2080 IF K<>0 THEN 2100
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2100
2090 PRINT " CLUBS",
 WARNING: Multiple GOSUB entry points
 TextValue:" CLUBS"
 CarriageControl:,
2100 IF K<>1 THEN 2120
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
 NumericValue:1
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2120
2110 PRINT " DIAMONDS",
 WARNING: Multiple GOSUB entry points
 TextValue:" DIAMONDS"
 CarriageControl:,
2120 IF K<>2 THEN 2140
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
 NumericValue:2
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2140
2130 PRINT " HEARTS",
 WARNING: Multiple GOSUB entry points
 TextValue:" HEARTS"
 CarriageControl:,
2140 IF K<>3 THEN 2160
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
 NumericValue:3
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2160
2150 PRINT " SPADES",
 WARNING: Multiple GOSUB entry points
 TextValue:" SPADES"
 CarriageControl:,
2160 RETURN
 WARNING: Multiple GOSUB entry points
 
2170 U=0
 WARNING: GOSUB length exceeds limit 40
 Variable:U -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
2180 FOR Z=N TO N+4
 control: Variable:Z -> .
 start:   ["Variable:N -> ."]
 end:     ["Variable:N -> .", "NumericValue:4", "BinaryOperatorPlus:+(.,.) -> ."]
2190 B(Z)=FNB(A(Z))
 Variable:Z -> .
 Variable:B(.) -> .
 Variable:Z -> .
 Variable:A(.) -> .
 UserFunction:FNB(.) -> .
 AssignmentOperator:= . -> .
2200 IF Z=N+4 THEN 2230
 Variable:Z -> .
 Variable:N -> .
 NumericValue:4
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2230
2210 IF INT(A(Z)/100)<>INT(A(Z+1)/100) THEN 2230
 Variable:Z -> .
 Variable:A(.) -> .
 NumericValue:100
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:A(.) -> .
 NumericValue:100
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2230
2220 U=U+1
 Variable:U -> .
 Variable:U -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2230 NEXT Z
 Variable:Z -> .
2240 IF U<>4 THEN 2310
 Variable:U -> .
 NumericValue:4
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2310
2250 X=11111
 Variable:X -> .
 NumericValue:11111
 AssignmentOperator:= =. -> .
2260 D=A(N)
 Variable:D -> .
 Variable:N -> .
 Variable:A(.) -> .
 AssignmentOperator:= . -> .
2270 H$="A FLUS"
 Variable:H$ -> $
 TextValue:"A FLUS"
 AssignmentOperator:= =$ -> $
2280 I$="H IN"
 Variable:I$ -> $
 TextValue:"H IN"
 AssignmentOperator:= =$ -> $
2290 U=15
 Variable:U -> .
 NumericValue:15
 AssignmentOperator:= =. -> .
2300 RETURN
 
2310 FOR Z=N TO N+3
 control: Variable:Z -> .
 start:   ["Variable:N -> ."]
 end:     ["Variable:N -> .", "NumericValue:3", "BinaryOperatorPlus:+(.,.) -> ."]
2320 FOR K=Z+1 TO N+4
 control: Variable:K -> .
 start:   ["Variable:Z -> .", "NumericValue:1", "BinaryOperatorPlus:+(.,.) -> ."]
 end:     ["Variable:N -> .", "NumericValue:4", "BinaryOperatorPlus:+(.,.) -> ."]
2330 IF B(Z)<=B(K) THEN 2390
 Variable:Z -> .
 Variable:B(.) -> .
 Variable:K -> .
 Variable:B(.) -> .
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:2390
2340 X=A(Z)
 Variable:X -> .
 Variable:Z -> .
 Variable:A(.) -> .
 AssignmentOperator:= . -> .
2350 A(Z)=A(K)
 Variable:Z -> .
 Variable:A(.) -> .
 Variable:K -> .
 Variable:A(.) -> .
 AssignmentOperator:= . -> .
2360 B(Z)=B(K)
 Variable:Z -> .
 Variable:B(.) -> .
 Variable:K -> .
 Variable:B(.) -> .
 AssignmentOperator:= . -> .
2370 A(K)=X
 Variable:K -> .
 Variable:A(.) -> .
 Variable:X -> .
 AssignmentOperator:= . -> .
2380 B(K)=A(K)-100*INT(A(K)/100)
 Variable:K -> .
 Variable:B(.) -> .
 Variable:K -> .
 Variable:A(.) -> .
 NumericValue:100
 Variable:K -> .
 Variable:A(.) -> .
 NumericValue:100
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
2390 NEXT K
 Variable:K -> .
2400 NEXT Z
 Variable:Z -> .
2410 X=0
 Variable:X -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
2420 FOR Z=N TO N+3
 control: Variable:Z -> .
 start:   ["Variable:N -> ."]
 end:     ["Variable:N -> .", "NumericValue:3", "BinaryOperatorPlus:+(.,.) -> ."]
2430 IF B(Z)<>B(Z+1) THEN 2470
 Variable:Z -> .
 Variable:B(.) -> .
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:B(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2470
2440 X=X+11*10^(Z-N)
 Variable:X -> .
 Variable:X -> .
 NumericValue:11
 NumericValue:10
 Variable:Z -> .
 Variable:N -> .
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2450 D=A(Z)
 Variable:D -> .
 Variable:Z -> .
 Variable:A(.) -> .
 AssignmentOperator:= . -> .
2460 GOSUB 2760
 LineNumber:2760
2470 NEXT Z
 Variable:Z -> .
2480 IF X<>0 THEN 2620
 Variable:X -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2620
2490 IF B(N)+3<>B(N+3) THEN 2520
 Variable:N -> .
 Variable:B(.) -> .
 NumericValue:3
 BinaryOperatorPlus:+(.,.) -> .
 Variable:N -> .
 NumericValue:3
 BinaryOperatorPlus:+(.,.) -> .
 Variable:B(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2520
2500 X=1111
 Variable:X -> .
 NumericValue:1111
 AssignmentOperator:= =. -> .
2510 U=10
 Variable:U -> .
 NumericValue:10
 AssignmentOperator:= =. -> .
2520 IF B(N+1)+3<>B(N+4) THEN 2620
 Variable:N -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:B(.) -> .
 NumericValue:3
 BinaryOperatorPlus:+(.,.) -> .
 Variable:N -> .
 NumericValue:4
 BinaryOperatorPlus:+(.,.) -> .
 Variable:B(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2620
2530 IF U<>10 THEN 2600
 Variable:U -> .
 NumericValue:10
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2600
2540 U=14
 Variable:U -> .
 NumericValue:14
 AssignmentOperator:= =. -> .
2550 H$="STRAIG"
 Variable:H$ -> $
 TextValue:"STRAIG"
 AssignmentOperator:= =$ -> $
2560 I$="HT"
 Variable:I$ -> $
 TextValue:"HT"
 AssignmentOperator:= =$ -> $
2570 X=11111
 Variable:X -> .
 NumericValue:11111
 AssignmentOperator:= =. -> .
2580 D=A(N+4)
 Variable:D -> .
 Variable:N -> .
 NumericValue:4
 BinaryOperatorPlus:+(.,.) -> .
 Variable:A(.) -> .
 AssignmentOperator:= . -> .
2590 RETURN
 
2600 U=10
 Variable:U -> .
 NumericValue:10
 AssignmentOperator:= =. -> .
2610 X=11110
 Variable:X -> .
 NumericValue:11110
 AssignmentOperator:= =. -> .
2620 IF U>=10 THEN 2690
 Variable:U -> .
 NumericValue:10
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:2690
2630 D=A(N+4)
 Variable:D -> .
 Variable:N -> .
 NumericValue:4
 BinaryOperatorPlus:+(.,.) -> .
 Variable:A(.) -> .
 AssignmentOperator:= . -> .
2640 H$="SCHMAL"
 Variable:H$ -> $
 TextValue:"SCHMAL"
 AssignmentOperator:= =$ -> $
2650 I$="TZ, "
 Variable:I$ -> $
 TextValue:"TZ, "
 AssignmentOperator:= =$ -> $
2660 U=9
 Variable:U -> .
 NumericValue:9
 AssignmentOperator:= =. -> .
2670 X=11000
 Variable:X -> .
 NumericValue:11000
 AssignmentOperator:= =. -> .
2680 GOTO 2740
 LineNumber:2740
2690 IF U<>10 THEN 2720
 Variable:U -> .
 NumericValue:10
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2720
2700 IF I=1 THEN 2740
 Variable:I -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2740
2710 GOTO 2750
 LineNumber:2750
2720 IF U>12 THEN 2750
 Variable:U -> .
 NumericValue:12
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:2750
2730 IF FNB(D)>6 THEN 2750
 Variable:D -> .
 UserFunction:FNB(.) -> .
 NumericValue:6
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:2750
2740 I=6
 Variable:I -> .
 NumericValue:6
 AssignmentOperator:= =. -> .
2750 RETURN
 
2760 IF U>=11 THEN 2810
 Variable:U -> .
 NumericValue:11
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:2810
2770 U=11
 Variable:U -> .
 NumericValue:11
 AssignmentOperator:= =. -> .
2780 H$="A PAIR"
 Variable:H$ -> $
 TextValue:"A PAIR"
 AssignmentOperator:= =$ -> $
2790 I$=" OF "
 Variable:I$ -> $
 TextValue:" OF "
 AssignmentOperator:= =$ -> $
2800 RETURN
 
2810 IF U<>11 THEN 2910
 Variable:U -> .
 NumericValue:11
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2910
2820 IF B(Z)<>B(Z-1) THEN 2870
 Variable:Z -> .
 Variable:B(.) -> .
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:B(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2870
2830 H$="THREE"
 Variable:H$ -> $
 TextValue:"THREE"
 AssignmentOperator:= =$ -> $
2840 I$=" "
 Variable:I$ -> $
 TextValue:" "
 AssignmentOperator:= =$ -> $
2850 U=13
 Variable:U -> .
 NumericValue:13
 AssignmentOperator:= =. -> .
2860 RETURN
 
2870 H$="TWO P"
 Variable:H$ -> $
 TextValue:"TWO P"
 AssignmentOperator:= =$ -> $
2880 I$="AIR, "
 Variable:I$ -> $
 TextValue:"AIR, "
 AssignmentOperator:= =$ -> $
2890 U=12
 Variable:U -> .
 NumericValue:12
 AssignmentOperator:= =. -> .
2900 RETURN
 
2910 IF U>12 THEN 2960
 Variable:U -> .
 NumericValue:12
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:2960
2920 U=16
 Variable:U -> .
 NumericValue:16
 AssignmentOperator:= =. -> .
2930 H$="FULL H"
 Variable:H$ -> $
 TextValue:"FULL H"
 AssignmentOperator:= =$ -> $
2940 I$="OUSE, "
 Variable:I$ -> $
 TextValue:"OUSE, "
 AssignmentOperator:= =$ -> $
2950 RETURN
 
2960 IF B(Z)<>B(Z-1) THEN 3010
 Variable:Z -> .
 Variable:B(.) -> .
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:B(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3010
2970 U=17
 Variable:U -> .
 NumericValue:17
 AssignmentOperator:= =. -> .
2980 H$="FOUR"
 Variable:H$ -> $
 TextValue:"FOUR"
 AssignmentOperator:= =$ -> $
2990 I$=" "
 Variable:I$ -> $
 TextValue:" "
 AssignmentOperator:= =$ -> $
3000 RETURN
 
3010 U=16
 Variable:U -> .
 NumericValue:16
 AssignmentOperator:= =. -> .
3020 H$="FULL H"
 Variable:H$ -> $
 TextValue:"FULL H"
 AssignmentOperator:= =$ -> $
3030 I$="OUSE, "
 Variable:I$ -> $
 TextValue:"OUSE, "
 AssignmentOperator:= =$ -> $
3040 RETURN
 
3050 G=0
 WARNING: GOSUB length exceeds limit 40
 Variable:G -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3060 PRINT:PRINT "WHAT IS YOUR BET";
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 WARNING: GOSUB length exceeds limit 40
 CarriageControl:NL
 TextValue:"WHAT IS YOUR BET"
 CarriageControl:;
3070 INPUT T
 WARNING: Multiple GOSUB entry points
 Variable:T -> .
3080 IF T-INT(T)=0 THEN 3140
 WARNING: Multiple GOSUB entry points
 Variable:T -> .
 Variable:T -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3140
3090 IF K<>0 THEN 3120
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3120
3100 IF G<>0 THEN 3120
 WARNING: Multiple GOSUB entry points
 Variable:G -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3120
3110 IF T=.5 THEN 3410
 WARNING: Multiple GOSUB entry points
 Variable:T -> .
 NumericValue:.5
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3410
3120 PRINT "NO SMALL CHANGE, PLEASE."
 WARNING: Multiple GOSUB entry points
 TextValue:"NO SMALL CHANGE, PLEASE."
 CarriageControl:NL
3130 GOTO 3060
 WARNING: Multiple GOSUB entry points
 LineNumber:3060
3140 IF S-G-T>=0 THEN 3170
 WARNING: Multiple GOSUB entry points
 Variable:S -> .
 Variable:G -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:T -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:0
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:3170
3150 GOSUB 3830
 WARNING: Multiple GOSUB entry points
 LineNumber:3830
3160 GOTO 3060
 WARNING: Multiple GOSUB entry points
 LineNumber:3060
3170 IF T<>0 THEN 3200
 WARNING: Multiple GOSUB entry points
 Variable:T -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3200
3180 I=3
 WARNING: Multiple GOSUB entry points
 Variable:I -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
3190 GOTO 3380
 WARNING: Multiple GOSUB entry points
 LineNumber:3380
3200 IF G+T>=K THEN 3230
 WARNING: Multiple GOSUB entry points
 Variable:G -> .
 Variable:T -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:K -> .
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:3230
3210 PRINT "IF YOU CAN'T SEE MY BET, THEN FOLD."
 WARNING: Multiple GOSUB entry points
 TextValue:"IF YOU CAN'T SEE MY BET, THEN FOLD."
 CarriageControl:NL
3220 GOTO 3060
 WARNING: Multiple GOSUB entry points
 LineNumber:3060
3230 G=G+T
 WARNING: Multiple GOSUB entry points
 Variable:G -> .
 Variable:G -> .
 Variable:T -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3240 IF G=K THEN 3380
 WARNING: Multiple GOSUB entry points
 Variable:G -> .
 Variable:K -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3380
3250 IF Z<>1 THEN 3420
 WARNING: Multiple GOSUB entry points
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3420
3260 IF G>5 THEN 3300
 WARNING: Multiple GOSUB entry points
 Variable:G -> .
 NumericValue:5
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3300
3270 IF Z>=2 THEN 3350
 WARNING: Multiple GOSUB entry points
 Variable:Z -> .
 NumericValue:2
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:3350
3280 V=5
 WARNING: Multiple GOSUB entry points
 Variable:V -> .
 NumericValue:5
 AssignmentOperator:= =. -> .
3290 GOTO 3420
 WARNING: Multiple GOSUB entry points
 LineNumber:3420
3300 IF Z=1 THEN 3320
 WARNING: Multiple GOSUB entry points
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3320
3310 IF T<=25 THEN 3350
 WARNING: Multiple GOSUB entry points
 Variable:T -> .
 NumericValue:25
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:3350
3320 I=4
 WARNING: Multiple GOSUB entry points
 Variable:I -> .
 NumericValue:4
 AssignmentOperator:= =. -> .
3330 PRINT "I FOLD."
 WARNING: Multiple GOSUB entry points
 TextValue:"I FOLD."
 CarriageControl:NL
3340 RETURN
 WARNING: Multiple GOSUB entry points
 
3350 IF Z=2 THEN 3430
 WARNING: Multiple GOSUB entry points
 Variable:Z -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3430
3360 PRINT "I'LL SEE YOU."
 WARNING: Multiple GOSUB entry points
 TextValue:"I'LL SEE YOU."
 CarriageControl:NL
3370 K=G
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
 Variable:G -> .
 AssignmentOperator:= . -> .
3380 S=S-G
 WARNING: Multiple GOSUB entry points
 Variable:S -> .
 Variable:S -> .
 Variable:G -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
3390 C=C-K
 WARNING: Multiple GOSUB entry points
 Variable:C -> .
 Variable:C -> .
 Variable:K -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
3400 P=P+G+K
 WARNING: Multiple GOSUB entry points
 Variable:P -> .
 Variable:P -> .
 Variable:G -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:K -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3410 RETURN
 WARNING: Multiple GOSUB entry points
 
3420 IF G>3*Z THEN 3350
 WARNING: Multiple GOSUB entry points
 Variable:G -> .
 NumericValue:3
 Variable:Z -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3350
3430 V=G-K+FNA(0)
 WARNING: Multiple GOSUB entry points
 Variable:V -> .
 Variable:G -> .
 Variable:K -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:0
 UserFunction:FNA(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3440 GOSUB 3480
 WARNING: Multiple GOSUB entry points
 LineNumber:3480
3450 PRINT "I'LL SEE YOU, AND RAISE YOU"V
 WARNING: Multiple GOSUB entry points
 TextValue:"I'LL SEE YOU, AND RAISE YOU"
 CarriageControl:
 Variable:V -> .
 CarriageControl:NL
3460 K=G+V
 WARNING: Multiple GOSUB entry points
 Variable:K -> .
 Variable:G -> .
 Variable:V -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3470 GOTO 3060
 WARNING: Multiple GOSUB entry points
 LineNumber:3060
3480 IF C-G-V>=0 THEN 3660
 Variable:C -> .
 Variable:G -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:V -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:0
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:3660
3490 IF G<>0 THEN 3520
 Variable:G -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3520
3500 V=C
 Variable:V -> .
 Variable:C -> .
 AssignmentOperator:= . -> .
3510 RETURN
 
3520 IF C-G>=0 THEN 3360
 WARNING: Branch to line before GOSUB start
 Variable:C -> .
 Variable:G -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:0
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:3360
3530 IF (O/2)<>INT(O/2) THEN 3600
 Variable:O -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 Variable:O -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3600
3540 PRINT "WOULD YOU LIKE TO BUY BACK YOUR WATCH FOR $50";
 TextValue:"WOULD YOU LIKE TO BUY BACK YOUR WATCH FOR $50"
 CarriageControl:;
3550 INPUT J$
 Variable:J$ -> $
3560 IF LEFT$(J$,1)="N" THEN 3600
 Variable:J$ -> $
 NumericValue:1
 FunctionLeft:LEFT$($,.) -> $
 TextValue:"N"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3600
3570 C=C+50
 Variable:C -> .
 Variable:C -> .
 NumericValue:50
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3580 O=O/2
 Variable:O -> .
 Variable:O -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
3590 RETURN
 
3600 IF O/3<>INT(O/3) THEN 3670
 Variable:O -> .
 NumericValue:3
 BinaryOperatorDivide:/(.,.) -> .
 Variable:O -> .
 NumericValue:3
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3670
3610 PRINT "WOULD YOU LIKE TO BUY BACK YOUR TIE TACK FOR $50";
 TextValue:"WOULD YOU LIKE TO BUY BACK YOUR TIE TACK FOR $50"
 CarriageControl:;
3620 INPUT J$
 Variable:J$ -> $
3630 IF LEFT$(J$,1)="N" THEN 3670
 Variable:J$ -> $
 NumericValue:1
 FunctionLeft:LEFT$($,.) -> $
 TextValue:"N"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3670
3640 C=C+50
 Variable:C -> .
 Variable:C -> .
 NumericValue:50
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3650 O=O/3
 Variable:O -> .
 Variable:O -> .
 NumericValue:3
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
3660 RETURN
 
3670 PRINT "I'M BUSTED.  CONGRATULATIONS!"
 WARNING: Multiple GOSUB entry points
 TextValue:"I'M BUSTED.  CONGRATULATIONS!"
 CarriageControl:NL
3680 STOP
 WARNING: Multiple GOSUB entry points
 WARNING: Terminating statement in GOSUB
 
3690 PRINT H$;I$;
 Variable:H$ -> $
 CarriageControl:;
 Variable:I$ -> $
 CarriageControl:;
3700 IF H$<>"A FLUS" THEN 3750
 Variable:H$ -> $
 TextValue:"A FLUS"
 BinaryOperatorNotEqual:<>($,$) -> ?
 LineNumber:3750
3710 K=INT(K/100)
 Variable:K -> .
 Variable:K -> .
 NumericValue:100
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
3720 GOSUB 2080
 LineNumber:2080
3730 PRINT
 CarriageControl:NL
3740 RETURN
 
3750 K=FNB(K)
 Variable:K -> .
 Variable:K -> .
 UserFunction:FNB(.) -> .
 AssignmentOperator:= . -> .
3760 GOSUB 1960
 LineNumber:1960
3770 IF H$="SCHMAL" THEN 3790
 Variable:H$ -> $
 TextValue:"SCHMAL"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3790
3780 IF H$<>"STRAIG" THEN 3810
 Variable:H$ -> $
 TextValue:"STRAIG"
 BinaryOperatorNotEqual:<>($,$) -> ?
 LineNumber:3810
3790 PRINT " HIGH"
 TextValue:" HIGH"
 CarriageControl:NL
3800 RETURN
 
3810 PRINT "'S"
 TextValue:"'S"
 CarriageControl:NL
3820 RETURN
 
3830 PRINT
 CarriageControl:NL
3840 PRINT "YOU CAN'T BET WITH WHAT YOU HAVEN'T GOT."
 TextValue:"YOU CAN'T BET WITH WHAT YOU HAVEN'T GOT."
 CarriageControl:NL
3850 IF O/2=INT(O/2) THEN 3970
 Variable:O -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 Variable:O -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3970
3860 PRINT "WOULD YOU LIKE TO SELL YOUR WATCH";
 TextValue:"WOULD YOU LIKE TO SELL YOUR WATCH"
 CarriageControl:;
3870 INPUT J$
 Variable:J$ -> $
3880 IF LEFT$(J$,1)="N" THEN 3970
 Variable:J$ -> $
 NumericValue:1
 FunctionLeft:LEFT$($,.) -> $
 TextValue:"N"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3970
3890 IF FNA(0)>=7 THEN 3930
 NumericValue:0
 UserFunction:FNA(.) -> .
 NumericValue:7
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:3930
3900 PRINT "I'LL GIVE YOU $75 FOR IT."
 TextValue:"I'LL GIVE YOU $75 FOR IT."
 CarriageControl:NL
3910 S=S+75
 Variable:S -> .
 Variable:S -> .
 NumericValue:75
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3920 GOTO 3950
 LineNumber:3950
3930 PRINT "THAT'S A PRETTY CRUMMY WATCH - I'LL GIVE YOU $25."
 TextValue:"THAT'S A PRETTY CRUMMY WATCH - I'LL GIVE YOU $25."
 CarriageControl:NL
3940 S=S+25
 Variable:S -> .
 Variable:S -> .
 NumericValue:25
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3950 O=O*2
 Variable:O -> .
 Variable:O -> .
 NumericValue:2
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
3960 RETURN
 
3970 IF O/3<>INT(O/3) THEN 4090
 Variable:O -> .
 NumericValue:3
 BinaryOperatorDivide:/(.,.) -> .
 Variable:O -> .
 NumericValue:3
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4090
3980 PRINT "WILL YOU PART WITH THAT DIAMOND TIE TACK":
 TextValue:"WILL YOU PART WITH THAT DIAMOND TIE TACK"
 CarriageControl:NL
3990 INPUT J$
 Variable:J$ -> $
4000 IF LEFT$(J$,1)="N" THEN 4080
 Variable:J$ -> $
 NumericValue:1
 FunctionLeft:LEFT$($,.) -> $
 TextValue:"N"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4080
4010 IF FNA(0)>=6 THEN 4050
 NumericValue:0
 UserFunction:FNA(.) -> .
 NumericValue:6
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:4050
4020 PRINT "YOU ARE NOW $100 RICHER."
 TextValue:"YOU ARE NOW $100 RICHER."
 CarriageControl:NL
4030 S=S+100
 Variable:S -> .
 Variable:S -> .
 NumericValue:100
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
4040 GOTO 4070
 LineNumber:4070
4050 PRINT "IT'S PASTE.  $25."
 TextValue:"IT'S PASTE.  $25."
 CarriageControl:NL
4060 S=S+25
 Variable:S -> .
 Variable:S -> .
 NumericValue:25
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
4070 O=O*3
 Variable:O -> .
 Variable:O -> .
 NumericValue:3
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
4080 RETURN
 
4090 PRINT "YOUR WAD IS SHOT.  SO LONG, SUCKER!"
 TextValue:"YOUR WAD IS SHOT.  SO LONG, SUCKER!"
 CarriageControl:NL
4100 END
 WARNING: Multiple GOSUB entry points
 WARNING: Terminating statement in GOSUB
 

