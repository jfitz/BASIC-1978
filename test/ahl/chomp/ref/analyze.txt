Statistics:

Number of lines: 104
Number of valid statements: 101
Number of comments: 5
Number of executable statements: 101

Complexity:

Comment density: 0.050
Comprehension effort: 271
McCabe complexity: 30
Halstead complexity:
 length: 290
 volume: 1323.661
 difficulty: 25.419
 effort: 33646.031
 language: 2.049
 intelligence: 52.074
 time: 31.154

10 (0 4) PRINT TAB(33); "CHOMP"
  Origs: :start
  Dests: 20:auto
20 (0 4) PRINT TAB(15); "CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
  Origs: 10:auto
  Dests: 30:auto
30 (0 2) PRINT
   (0 2) PRINT
   (0 2) PRINT
  Origs: 20:auto
  Dests: 40:auto
40 (0 2) DIM A(10, 10)
  Origs: 30:auto
  Dests: 110:auto
100 (0 1) REM *** THE GAME OF CHOMP *** COPYRIGHT PCC 1973 ***
  Origs: 
  Dests: 
110 (0 2) PRINT
  Origs: 40:auto
  Dests: 120:auto
120 (0 2) PRINT "THIS IS THE GAME OF CHOMP (SCIENTIFIC AMERICAN, JAN 1973)"
  Origs: 110:auto
  Dests: 130:auto
130 (0 2) PRINT "DO YOU WANT THE RULES (1=YES, 0=NO!)";
  Origs: 120:auto
  Dests: 140:auto
140 (1 2) INPUT R
  Origs: 130:auto
  Dests: 150:auto
150 (1 4) IF R = 0 THEN 340
  Origs: 140:auto
  Dests: 160:auto, 340:ifthen
160 (0 3) F = 1
  Origs: 150:auto
  Dests: 170:auto
170 (0 3) R = 5
  Origs: 160:auto
  Dests: 180:auto
180 (0 3) C = 7
  Origs: 170:auto
  Dests: 190:auto
190 (0 2) PRINT "CHOMP IS FOR 1 OR MORE PLAYERS (HUMANS ONLY)."
  Origs: 180:auto
  Dests: 200:auto
200 (0 2) PRINT
  Origs: 190:auto
  Dests: 210:auto
210 (0 2) PRINT "HERE'S HOW A BOARD LOOKS (THIS ONE IS 5 BY 7):"
  Origs: 200:auto
  Dests: 220:auto
220 (0 2) GOSUB 540
  Origs: 210:auto
  Dests: 230:auto, 540:gosub
230 (0 2) PRINT
  Origs: 220:auto
  Dests: 240:auto
240 (0 2) PRINT "THE BOARD IS A BIG COOKIE - R ROWS HIGH AND C COLUMNS"
  Origs: 230:auto
  Dests: 250:auto
250 (0 2) PRINT "WIDE. YOU INPUT R AND C AT THE START. IN THE UPPER LEFT"
  Origs: 240:auto
  Dests: 260:auto
260 (0 2) PRINT "CORNER OF THE COOKIE IS A POISON SQUARE (P). THE ONE WHO"
  Origs: 250:auto
  Dests: 270:auto
270 (0 2) PRINT "CHOMPS THE POISON SQUARE LOSES. TO TAKE A CHOMP, TYPE THE"
  Origs: 260:auto
  Dests: 280:auto
280 (0 2) PRINT "ROW AND COLUMN OF ONE OF THE SQUARES ON THE COOKIE."
  Origs: 270:auto
  Dests: 290:auto
290 (0 2) PRINT "ALL OF THE SQUARES BELOW AND TO THE RIGHT OF THAT SQUARE"
  Origs: 280:auto
  Dests: 300:auto
300 (0 2) PRINT "(INCLUDING THAT SQUARE, TOO) DISAPPEAR -- CHOMP!!"
  Origs: 290:auto
  Dests: 310:auto
310 (0 2) PRINT "NO FAIR CHOMPING SQUARES THAT HAVE ALREADY BEEN CHOMPED,"
  Origs: 300:auto
  Dests: 320:auto
320 (0 2) PRINT "OR THAT ARE OUTSIDE THE ORIGINAL DIMENSIONS OF THE COOKIE."
  Origs: 310:auto
  Dests: 330:auto
330 (0 2) PRINT
  Origs: 320:auto
  Dests: 340:auto
340 G(540) F(J) (0 2) PRINT "HERE WE GO..."
  Origs: 150:ifthen, 330:auto, 1050:ifthen
  Dests: 360:auto
350 (0 1) REM
  Origs: 
  Dests: 
360 G(540) F(J) (0 3) F = 0
  Origs: 340:auto
  Dests: 370:auto
370 G(540) F(I,J) (1 3) FOR I = 1 TO 10
  Origs: 360:auto
  Dests: 372:fornext, 379:fornext
372 G(540) F(I,J) (1 3) FOR J = 1 TO 10
  Origs: 370:fornext
  Dests: 375:fornext, 377:fornext
375 G(540) F(I,J) (0 3) A(I, J) = 0
  Origs: 372:fornext
  Dests: 377:auto
377 G(540) F(I,J) (0 1) NEXT J
  Origs: 372:fornext, 375:auto
  Dests: 379:auto
379 G(540) F(I,J) (0 1) NEXT I
  Origs: 370:fornext, 377:auto
  Dests: 380:auto
380 G(540) F(J) (0 2) PRINT
  Origs: 379:auto
  Dests: 390:auto
390 G(540) F(J) (0 2) PRINT "HOW MANY PLAYERS";
  Origs: 380:auto
  Dests: 400:auto
400 G(540) F(J) (1 2) INPUT P
  Origs: 390:auto
  Dests: 410:auto
410 G(540) F(J) (0 3) I1 = 0
  Origs: 400:auto
  Dests: 420:auto
420 G(540) F(J) (0 2) PRINT "HOW MANY ROWS";
  Origs: 410:auto, 460:goto
  Dests: 430:auto
430 G(540) F(J) (1 2) INPUT R
  Origs: 420:auto
  Dests: 440:auto
440 G(540) F(J) (1 4) IF R <= 9 THEN 470
  Origs: 430:auto
  Dests: 450:auto, 470:ifthen
450 G(540) F(J) (0 2) PRINT "TOO MANY ROWS (9 IS MAXIMUM). NOW, ";
  Origs: 440:auto
  Dests: 460:auto
460 G(540) F(J) (0 3) GOTO 420
    WARNING: Branch to line before GOSUB start
  Origs: 450:auto
  Dests: 420:goto
470 G(540) F(J) (0 2) PRINT "HOW MANY COLUMNS";
  Origs: 440:ifthen, 510:goto
  Dests: 480:auto
480 G(540) F(J) (1 2) INPUT C
  Origs: 470:auto
  Dests: 490:auto
490 G(540) F(J) (1 4) IF C <= 9 THEN 530
  Origs: 480:auto
  Dests: 500:auto, 530:ifthen
500 G(540) F(J) (0 2) PRINT "TOO MANY COLUMNS (9 IS MAXIMUM). NOW, ";
  Origs: 490:auto
  Dests: 510:auto
510 G(540) F(J) (0 3) GOTO 470
    WARNING: Branch to line before GOSUB start
  Origs: 500:auto
  Dests: 470:goto
530 G(540) F(J) (0 2) PRINT
  Origs: 490:ifthen
  Dests: 540:auto
540 G(540) F(I,J) (1 3) FOR I = 1 TO R
    WARNING: Inconsistent GOSUB origins
    WARNING: GOSUB length exceeds limit 40
  Origs: 220:gosub, 530:auto
  Dests: 550:fornext, 580:fornext
550 G(540) F(I,J) (1 3) FOR J = 1 TO C
  Origs: 540:fornext
  Dests: 560:fornext, 570:fornext
560 G(540) F(I,J) (0 3) A(I, J) = 1
  Origs: 550:fornext
  Dests: 570:auto
570 G(540) F(I,J) (0 1) NEXT J
  Origs: 550:fornext, 560:auto
  Dests: 580:auto
580 G(540) F(I,J) (0 1) NEXT I
  Origs: 540:fornext, 570:auto
  Dests: 590:auto
590 G(540) F(J) (0 4) A(1, 1) = -1
  Origs: 580:auto
  Dests: 610:auto
600 (0 1) REM PRINT THE BOARD
  Origs: 
  Dests: 
610 G(540) F(J) (0 2) PRINT
  Origs: 590:auto, 990:goto
  Dests: 620:auto
620 G(540) F(J) (0 4) PRINT TAB(7); "1 2 3 4 5 6 7 8 9"
  Origs: 610:auto
  Dests: 630:auto
630 G(540) F(I,J) (1 3) FOR I = 1 TO R
  Origs: 620:auto
  Dests: 640:fornext, 730:fornext
640 G(540) F(I,J) (0 4) PRINT I; TAB(7);
  Origs: 630:fornext
  Dests: 650:auto
650 G(540) F(I,J) (1 3) FOR J = 1 TO C
  Origs: 640:auto
  Dests: 660:fornext, 710:fornext
660 G(540) F(I,J) (1 6) IF A(I, J) = -1 THEN 700
  Origs: 650:fornext
  Dests: 670:auto, 700:ifthen
670 G(540) F(I,J) (1 4) IF A(I, J) = 0 THEN 720
  Origs: 660:auto
  Dests: 680:auto, 720:ifthen
680 G(540) F(I,J) (0 2) PRINT "* ";
  Origs: 670:auto
  Dests: 690:auto
690 G(540) F(I,J) (0 2) GOTO 710
  Origs: 680:auto
  Dests: 710:goto
700 G(540) F(I,J) (0 2) PRINT "P ";
  Origs: 660:ifthen
  Dests: 710:auto
710 G(540) F(I,J) (0 1) NEXT J
  Origs: 650:fornext, 690:goto, 700:auto
  Dests: 720:auto
720 G(540) F(I,J) (0 2) PRINT
  Origs: 670:ifthen, 710:auto
  Dests: 730:auto
730 G(540) F(I,J) (0 1) NEXT I
  Origs: 630:fornext, 720:auto
  Dests: 740:auto
740 G(540) F(J) (0 2) PRINT
  Origs: 730:auto
  Dests: 750:auto
750 G(540) F(J) (1 4) IF F = 0 THEN 770
  Origs: 740:auto
  Dests: 760:auto, 780:ifthen
760 G(540) F(J) (0 1) RETURN
  Origs: 750:auto
  Dests: 
770 (0 1) REM GET CHOMPS FOR EACH PLAYER IN TURN
  Origs: 
  Dests: 
780 G(540) F(J) (0 4) LET I1 = I1 + 1
  Origs: 750:ifthen
  Dests: 790:auto
790 G(540) F(J) (0 7) LET P1 = I1 - INT(I1 / P) * P
  Origs: 780:auto
  Dests: 800:auto
800 G(540) F(J) (1 4) IF P1 <> 0 THEN 820
  Origs: 790:auto
  Dests: 810:auto, 820:ifthen
810 G(540) F(J) (0 3) P1 = P
  Origs: 800:auto
  Dests: 820:auto
820 G(540) F(J) (0 3) PRINT "PLAYER"; P1
  Origs: 800:ifthen, 810:auto, 930:goto
  Dests: 830:auto
830 G(540) F(J) (0 2) PRINT "COORDINATES OF CHOMP (ROW,COLUMN)";
  Origs: 820:auto
  Dests: 840:auto
840 G(540) F(J) (2 3) INPUT R1, C1
  Origs: 830:auto
  Dests: 850:auto
850 G(540) F(J) (1 4) IF R1 < 1 THEN 920
  Origs: 840:auto
  Dests: 860:auto, 920:ifthen
860 G(540) F(J) (1 4) IF R1 > R THEN 920
  Origs: 850:auto
  Dests: 870:auto, 920:ifthen
870 G(540) F(J) (1 4) IF C1 < 1 THEN 920
  Origs: 860:auto
  Dests: 880:auto, 920:ifthen
880 G(540) F(J) (1 4) IF C1 > C THEN 920
  Origs: 870:auto
  Dests: 890:auto, 920:ifthen
890 G(540) F(J) (1 4) IF A(R1, C1) = 0 THEN 920
  Origs: 880:auto
  Dests: 900:auto, 920:ifthen
900 G(540) F(J) (1 6) IF A(R1, C1) = -1 THEN 1010
  Origs: 890:auto
  Dests: 910:auto, 1010:ifthen
910 G(540) F(J) (0 2) GOTO 940
  Origs: 900:auto
  Dests: 940:goto
920 G(540) F(J) (0 2) PRINT "NO FAIR. YOU'RE TRYING TO CHOMP ON EMPTY SPACE!"
  Origs: 850:ifthen, 860:ifthen, 870:ifthen, 880:ifthen, 890:ifthen
  Dests: 930:auto
930 G(540) F(J) (0 3) GOTO 820
  Origs: 920:auto
  Dests: 820:goto
940 G(540) F(J,I) (1 3) FOR I = R1 TO R
  Origs: 910:goto
  Dests: 950:fornext, 980:fornext
950 G(540) F(I,J) (1 3) FOR J = C1 TO C
  Origs: 940:fornext
  Dests: 960:fornext, 970:fornext
960 G(540) F(I,J) (0 3) A(I, J) = 0
  Origs: 950:fornext
  Dests: 970:auto
970 G(540) F(J,I) (0 1) NEXT J
  Origs: 950:fornext, 960:auto
  Dests: 980:auto
980 G(540) F(J,I) (0 1) NEXT I
  Origs: 940:fornext, 970:auto
  Dests: 990:auto
990 G(540) (0 3) GOTO 610
  Origs: 980:auto
  Dests: 610:goto
1000 (0 1) REM END OF GAME DETECTED IN LINE 900
  Origs: 
  Dests: 
1010 G(540) F(J) (0 3) PRINT "YOU LOSE, PLAYER"; P1
  Origs: 900:ifthen
  Dests: 1020:auto
1020 G(540) F(J) (0 2) PRINT
  Origs: 1010:auto
  Dests: 1030:auto
1030 G(540) F(J) (0 2) PRINT "AGAIN (1=YES, 0=NO!)";
  Origs: 1020:auto
  Dests: 1040:auto
1040 G(540) F(J) (1 2) INPUT R
  Origs: 1030:auto
  Dests: 1050:auto
1050 G(540) F(J) (1 5) IF R = 1 THEN 340
     WARNING: Branch to line before GOSUB start
  Origs: 1040:auto
  Dests: 340:ifthen, 1060:auto
1060 G(540) F(J) (0 1) END
     WARNING: Terminating statement in GOSUB
     WARNING: Terminating statement in FOR/NEXT
  Origs: 1050:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

