10 PRINT TAB(33);"CHOMP"
 NumericValue:33
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"CHOMP"
 CarriageControl:NL
20 PRINT TAB(15);"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 NumericValue:15
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY"
 CarriageControl:NL
30 PRINT:PRINT:PRINT
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
40 DIM A(10,10)
 NumericValue:10
 NumericValue:10
 Declaration:A(,) -> _(,)
100 REM *** THE GAME OF CHOMP *** COPYRIGHT PCC 1973 ***
 Remark:*** THE GAME OF CHOMP *** COPYRIGHT PCC 1973 ***
110 PRINT 
 CarriageControl:NL
120 PRINT "THIS IS THE GAME OF CHOMP (SCIENTIFIC AMERICAN, JAN 1973)"
 TextValue:"THIS IS THE GAME OF CHOMP (SCIENTIFIC AMERICAN, JAN 1973)"
 CarriageControl:NL
130 PRINT "DO YOU WANT THE RULES (1=YES, 0=NO!)";
 TextValue:"DO YOU WANT THE RULES (1=YES, 0=NO!)"
 CarriageControl:;
140 INPUT R
 Variable:R -> _
150 IF R=0 THEN 340
 Variable:R -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:340
160 F=1
 Variable:F -> _
 NumericValue:1
 AssignmentOperator:= =_ -> _
170 R=5
 Variable:R -> _
 NumericValue:5
 AssignmentOperator:= =_ -> _
180 C=7
 Variable:C -> _
 NumericValue:7
 AssignmentOperator:= =_ -> _
190 PRINT "CHOMP IS FOR 1 OR MORE PLAYERS (HUMANS ONLY)."
 TextValue:"CHOMP IS FOR 1 OR MORE PLAYERS (HUMANS ONLY)."
 CarriageControl:NL
200 PRINT
 CarriageControl:NL
210 PRINT "HERE'S HOW A BOARD LOOKS (THIS ONE IS 5 BY 7):"
 TextValue:"HERE'S HOW A BOARD LOOKS (THIS ONE IS 5 BY 7):"
 CarriageControl:NL
220 GOSUB 540
 LineNumber:540
230 PRINT
 CarriageControl:NL
240 PRINT "THE BOARD IS A BIG COOKIE - R ROWS HIGH AND C COLUMNS"
 TextValue:"THE BOARD IS A BIG COOKIE - R ROWS HIGH AND C COLUMNS"
 CarriageControl:NL
250 PRINT "WIDE. YOU INPUT R AND C AT THE START. IN THE UPPER LEFT"
 TextValue:"WIDE. YOU INPUT R AND C AT THE START. IN THE UPPER LEFT"
 CarriageControl:NL
260 PRINT "CORNER OF THE COOKIE IS A POISON SQUARE (P). THE ONE WHO"
 TextValue:"CORNER OF THE COOKIE IS A POISON SQUARE (P). THE ONE WHO"
 CarriageControl:NL
270 PRINT "CHOMPS THE POISON SQUARE LOSES. TO TAKE A CHOMP, TYPE THE"
 TextValue:"CHOMPS THE POISON SQUARE LOSES. TO TAKE A CHOMP, TYPE THE"
 CarriageControl:NL
280 PRINT "ROW AND COLUMN OF ONE OF THE SQUARES ON THE COOKIE."
 TextValue:"ROW AND COLUMN OF ONE OF THE SQUARES ON THE COOKIE."
 CarriageControl:NL
290 PRINT "ALL OF THE SQUARES BELOW AND TO THE RIGHT OF THAT SQUARE"
 TextValue:"ALL OF THE SQUARES BELOW AND TO THE RIGHT OF THAT SQUARE"
 CarriageControl:NL
300 PRINT "(INCLUDING THAT SQUARE, TOO) DISAPPEAR -- CHOMP!!"
 TextValue:"(INCLUDING THAT SQUARE, TOO) DISAPPEAR -- CHOMP!!"
 CarriageControl:NL
310 PRINT "NO FAIR CHOMPING SQUARES THAT HAVE ALREADY BEEN CHOMPED,"
 TextValue:"NO FAIR CHOMPING SQUARES THAT HAVE ALREADY BEEN CHOMPED,"
 CarriageControl:NL
320 PRINT "OR THAT ARE OUTSIDE THE ORIGINAL DIMENSIONS OF THE COOKIE."
 TextValue:"OR THAT ARE OUTSIDE THE ORIGINAL DIMENSIONS OF THE COOKIE."
 CarriageControl:NL
330 PRINT 
 CarriageControl:NL
340 PRINT "HERE WE GO..."
 TextValue:"HERE WE GO..."
 CarriageControl:NL
350 REM 
 Remark:
360 F=0
 Variable:F -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
370 FOR I=1 TO 10
 control: Variable:I -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:10"]
372 FOR J=1 TO 10
 control: Variable:J -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:10"]
375 A(I,J)=0
 Variable:I -> _
 Variable:J -> _
 Variable:A(_,_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
377 NEXT J
 Variable:J -> _
379 NEXT I
 Variable:I -> _
380 PRINT 
 CarriageControl:NL
390 PRINT "HOW MANY PLAYERS";
 TextValue:"HOW MANY PLAYERS"
 CarriageControl:;
400 INPUT P
 Variable:P -> _
410 I1=0
 Variable:I1 -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
420 PRINT "HOW MANY ROWS";
 TextValue:"HOW MANY ROWS"
 CarriageControl:;
430 INPUT R
 Variable:R -> _
440 IF R <= 9 THEN 470
 Variable:R -> _
 NumericValue:9
 BinaryOperatorLessEqual:<=(_,_) -> ?
 LineNumber:470
450 PRINT "TOO MANY ROWS (9 IS MAXIMUM). NOW, ";
 TextValue:"TOO MANY ROWS (9 IS MAXIMUM). NOW, "
 CarriageControl:;
460 GOTO 420
 WARNING: Branch to line before GOSUB start
 LineNumber:420
470 PRINT "HOW MANY COLUMNS";
 TextValue:"HOW MANY COLUMNS"
 CarriageControl:;
480 INPUT C
 Variable:C -> _
490 IF C <= 9 THEN 530
 Variable:C -> _
 NumericValue:9
 BinaryOperatorLessEqual:<=(_,_) -> ?
 LineNumber:530
500 PRINT "TOO MANY COLUMNS (9 IS MAXIMUM). NOW, ";
 TextValue:"TOO MANY COLUMNS (9 IS MAXIMUM). NOW, "
 CarriageControl:;
510 GOTO 470
 WARNING: Branch to line before GOSUB start
 LineNumber:470
530 PRINT 
 CarriageControl:NL
540 FOR I=1 TO R
 WARNING: Inconsistent GOSUB origins
 WARNING: GOSUB length exceeds limit 40
 control: Variable:I -> _
 start:   ["NumericValue:1"]
 end:     ["Variable:R -> _"]
550 FOR J=1 TO C
 control: Variable:J -> _
 start:   ["NumericValue:1"]
 end:     ["Variable:C -> _"]
560 A(I,J)=1
 Variable:I -> _
 Variable:J -> _
 Variable:A(_,_) -> _
 NumericValue:1
 AssignmentOperator:= =_ -> _
570 NEXT J
 Variable:J -> _
580 NEXT I
 Variable:I -> _
590 A(1,1)=-1
 NumericValue:1
 NumericValue:1
 Variable:A(_,_) -> _
 NumericValue:1
 UnaryOperatorMinus:-(_) -> =_
 AssignmentOperator:= =_ -> _
600 REM PRINT THE BOARD
 Remark:PRINT THE BOARD
610 PRINT 
 CarriageControl:NL
620 PRINT TAB(7);"1 2 3 4 5 6 7 8 9"
 NumericValue:7
 FunctionTab:TAB(_) -> $
 CarriageControl:;
 TextValue:"1 2 3 4 5 6 7 8 9"
 CarriageControl:NL
630 FOR I=1 TO R
 control: Variable:I -> _
 start:   ["NumericValue:1"]
 end:     ["Variable:R -> _"]
640 PRINT I;TAB(7);
 Variable:I -> _
 CarriageControl:;
 NumericValue:7
 FunctionTab:TAB(_) -> $
 CarriageControl:;
650 FOR J=1 TO C
 WARNING: FORNEXT length exceeds limit 40
 control: Variable:J -> _
 start:   ["NumericValue:1"]
 end:     ["Variable:C -> _"]
660 IF A(I,J)=-1 THEN 700
 Variable:I -> _
 Variable:J -> _
 Variable:A(_,_) -> _
 NumericValue:1
 UnaryOperatorMinus:-(_) -> =_
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:700
670 IF A(I,J)=0 THEN 720
 Variable:I -> _
 Variable:J -> _
 Variable:A(_,_) -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:720
680 PRINT "* ";
 TextValue:"* "
 CarriageControl:;
690 GOTO 710
 LineNumber:710
700 PRINT "P ";
 TextValue:"P "
 CarriageControl:;
710 NEXT J
 Variable:J -> _
720 PRINT 
 CarriageControl:NL
730 NEXT I
 Variable:I -> _
740 PRINT 
 CarriageControl:NL
750 IF F=0 THEN 770
 Variable:F -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:770
760 RETURN 
 
770 REM GET CHOMPS FOR EACH PLAYER IN TURN
 Remark:GET CHOMPS FOR EACH PLAYER IN TURN
780 LET I1=I1+1
 Variable:I1 -> _
 Variable:I1 -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
790 LET P1=I1-INT(I1/P)*P
 Variable:P1 -> _
 Variable:I1 -> _
 Variable:I1 -> _
 Variable:P -> _
 BinaryOperatorDivide:/(_,_) -> _
 FunctionInt:INT(_) -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
800 IF P1 <> 0 THEN 820
 Variable:P1 -> _
 NumericValue:0
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:820
810 P1=P
 Variable:P1 -> _
 Variable:P -> _
 AssignmentOperator:= _ -> _
820 PRINT "PLAYER";P1
 TextValue:"PLAYER"
 CarriageControl:;
 Variable:P1 -> _
 CarriageControl:NL
830 PRINT "COORDINATES OF CHOMP (ROW,COLUMN)";
 TextValue:"COORDINATES OF CHOMP (ROW,COLUMN)"
 CarriageControl:;
840 INPUT R1,C1
 Variable:R1 -> _
 Variable:C1 -> _
850 IF R1<1 THEN 920
 Variable:R1 -> _
 NumericValue:1
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:920
860 IF R1>R THEN 920
 Variable:R1 -> _
 Variable:R -> _
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:920
870 IF C1<1 THEN 920
 Variable:C1 -> _
 NumericValue:1
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:920
880 IF C1>C THEN 920
 Variable:C1 -> _
 Variable:C -> _
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:920
890 IF A(R1,C1)=0 THEN 920
 Variable:R1 -> _
 Variable:C1 -> _
 Variable:A(_,_) -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:920
900 IF A(R1,C1)=-1 THEN 1010
 Variable:R1 -> _
 Variable:C1 -> _
 Variable:A(_,_) -> _
 NumericValue:1
 UnaryOperatorMinus:-(_) -> =_
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1010
910 GOTO 940
 LineNumber:940
920 PRINT "NO FAIR. YOU'RE TRYING TO CHOMP ON EMPTY SPACE!"
 TextValue:"NO FAIR. YOU'RE TRYING TO CHOMP ON EMPTY SPACE!"
 CarriageControl:NL
930 GOTO 820
 LineNumber:820
940 FOR I=R1 TO R
 control: Variable:I -> _
 start:   ["Variable:R1 -> _"]
 end:     ["Variable:R -> _"]
950 FOR J=C1 TO C
 control: Variable:J -> _
 start:   ["Variable:C1 -> _"]
 end:     ["Variable:C -> _"]
960 A(I,J)=0
 Variable:I -> _
 Variable:J -> _
 Variable:A(_,_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
970 NEXT J
 Variable:J -> _
980 NEXT I
 Variable:I -> _
990 GOTO 610
 LineNumber:610
1000 REM END OF GAME DETECTED IN LINE 900
 Remark:END OF GAME DETECTED IN LINE 900
1010 PRINT "YOU LOSE, PLAYER";P1
 TextValue:"YOU LOSE, PLAYER"
 CarriageControl:;
 Variable:P1 -> _
 CarriageControl:NL
1020 PRINT 
 CarriageControl:NL
1030 PRINT "AGAIN (1=YES, 0=NO!)";
 TextValue:"AGAIN (1=YES, 0=NO!)"
 CarriageControl:;
1040 INPUT R
 Variable:R -> _
1050 IF R=1 THEN 340
 WARNING: Branch to line before GOSUB start
 Variable:R -> _
 NumericValue:1
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:340
1060 END
 WARNING: Terminating statement in GOSUB
 WARNING: Terminating statement in FOR/NEXT
 

