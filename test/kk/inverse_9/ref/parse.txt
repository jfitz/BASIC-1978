10 READ N
 Variable:N scalar
20 FOR I = 1 TO N-1
 control: Variable:I scalar
 start:   ["NumericConstant:1"]
 end:     ["Variable:N scalar", "NumericConstant:1", "BinaryOperatorMinus:- numeric"]
30 FOR J = 1 TO N-1
 control: Variable:J scalar
 start:   ["NumericConstant:1"]
 end:     ["Variable:N scalar", "NumericConstant:1", "BinaryOperatorMinus:- numeric"]
40 LET P(I,J) = I*J - INT(I*J/N)*N
 Variable:I scalar
 Variable:J scalar
 Variable:P scalar
 Variable:I scalar
 Variable:J scalar
 BinaryOperatorMultiply:* numeric
 Variable:I scalar
 Variable:J scalar
 BinaryOperatorMultiply:* numeric
 Variable:N scalar
 BinaryOperatorDivide:/ numeric
 FunctionInt scalar
 Variable:N scalar
 BinaryOperatorMultiply:* numeric
 BinaryOperatorMinus:- numeric
 AssignmentOperator:=
50 NEXT J
 Variable:J scalar
60 NEXT I
 Variable:I scalar
70 FOR I = 1 TO N-1
 control: Variable:I scalar
 start:   ["NumericConstant:1"]
 end:     ["Variable:N scalar", "NumericConstant:1", "BinaryOperatorMinus:- numeric"]
80 FOR J = 1 TO N-1
 control: Variable:J scalar
 start:   ["NumericConstant:1"]
 end:     ["Variable:N scalar", "NumericConstant:1", "BinaryOperatorMinus:- numeric"]
90 IF P(I,J) = 1 THEN 140
 Variable:I scalar
 Variable:J scalar
 Variable:P scalar
 NumericConstant:1
 BinaryOperatorEqual:= numeric
100 NEXT J
 Variable:J scalar
110 PRINT I; "DOES NOT HAVE AN INVERSE"
 Variable:I scalar
 CarriageControl:;
 TextConstant:"DOES NOT HAVE AN INVERSE"
 CarriageControl:NL
120 NEXT I
 Variable:I scalar
130 STOP
 
140 PRINT I; "HAS AN INVERSE" J
 Variable:I scalar
 CarriageControl:;
 TextConstant:"HAS AN INVERSE"
 CarriageControl:
 Variable:J scalar
 CarriageControl:NL
150 GOTO 120
 LineNumber:120
160 DATA 9
 NumericConstant:9
999 END
 

