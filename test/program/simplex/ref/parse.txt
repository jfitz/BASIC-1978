10 REM SOLVE LINEAR PROGRAM VIA SIMPLEX ALGORITHM
 Remark:SOLVE LINEAR PROGRAM VIA SIMPLEX ALGORITHM
11 OPTION BASE 1
 NumericConstant:1
12 OPTION REQUIRE_INITIALIZED TRUE
 BooleanConstant:true
13 OPTION FORGET_FORNEXT TRUE
 BooleanConstant:true
14 OPTION LOCK_FORNEXT TRUE
 BooleanConstant:true
20 REM N1 = 0 ' NUMBER OF DECISION VARIABLES
 Remark:N1 = 0 ' NUMBER OF DECISION VARIABLES
21 REM N2 = 0 ' NUMBER OF CONSTRAINTS (AND SLACK VARIABLES)
 Remark:N2 = 0 ' NUMBER OF CONSTRAINTS (AND SLACK VARIABLES)
30 REM X(N2, N1+N2) ' CENTRAL MATRIX
 Remark:X(N2, N1+N2) ' CENTRAL MATRIX
31 REM B(N2)        ' RIGHT-HAND SIDE VALUES
 Remark:B(N2)        ' RIGHT-HAND SIDE VALUES
32 REM C1$(N2)      ' NAMES OF BASIC VARIABLES
 Remark:C1$(N2)      ' NAMES OF BASIC VARIABLES
33 REM C$(N1+N2)    ' NAMES OF DECISION AND SLACK VARIABLES
 Remark:C$(N1+N2)    ' NAMES OF DECISION AND SLACK VARIABLES
34 REM C(N1+N2)     ' COEFFICIENTS FOR OBJECTIVE FUNCTION
 Remark:C(N1+N2)     ' COEFFICIENTS FOR OBJECTIVE FUNCTION
35 REM Z(N1+N2)     ' EVAL STEP FOR PIVOT COLUMN SELECTION
 Remark:Z(N1+N2)     ' EVAL STEP FOR PIVOT COLUMN SELECTION
36 REM B1(N2)       ' EVAL STEP FOR PIVOT ROW SELECTION
 Remark:B1(N2)       ' EVAL STEP FOR PIVOT ROW SELECTION
37 REM R()          ' OBJECTIVE COEFFICIENT FOR BASIC VARIABLE
 Remark:R()          ' OBJECTIVE COEFFICIENT FOR BASIC VARIABLE
38 REM I0, J0       ' ROW AND COLUMN OF PIVOT CELL
 Remark:I0, J0       ' ROW AND COLUMN OF PIVOT CELL
100 REM READ DIMENSIONS
 Remark:READ DIMENSIONS
101 READ N1, N2
 Variable:N1 -> _
 Variable:N2 -> _
110 REM BUILD COEFFICIENTS FOR EXPANDED OBJECTIVE FUNCTION
 Remark:BUILD COEFFICIENTS FOR EXPANDED OBJECTIVE FUNCTION
111 DIM C(N1)
 Variable:N1 -> _
 Declaration:C() -> _()
112 ARR READ C
 Variable:C() -> _()
113 DIM C(N1+N2)' EXPAND TO INCLUDE SLACK VARIABLES
 Variable:N1 -> _
 Variable:N2 -> _
 BinaryOperatorPlus:+(_,_) -> _
 Declaration:C() -> _()
114 C(J) = 0 FOR J = N1 + 1 TO N1+N2
 Variable:J -> _
 Variable:C(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
 control: Variable:J -> _
 start:   ["Variable:N1 -> _", "NumericConstant:1", "BinaryOperatorPlus:+(_,_) -> _"]
 end:     ["Variable:N1 -> _", "Variable:N2 -> _", "BinaryOperatorPlus:+(_,_) -> _"]
120 REM BUILD NAMES OF DECISION VARIABLES AND SLACK VARIABLES
 Remark:BUILD NAMES OF DECISION VARIABLES AND SLACK VARIABLES
121 DIM C$(N1+N2)
 Variable:N1 -> _
 Variable:N2 -> _
 BinaryOperatorPlus:+(_,_) -> _
 Declaration:C$() -> $()
122 FOR I = 1 TO N1
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N1 -> _"]
123   C$(I) = "X" + STR$(I)
 Variable:I -> _
 Variable:C$(_) -> $
 TextConstant:"X"
 Variable:I -> _
 FunctionStr:STR$(_) -> $
 BinaryOperatorPlus:+($,$) -> $
 AssignmentOperator:= $ -> $
124 NEXT I
 Variable:I -> _
125 FOR I = 1 TO N2
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N2 -> _"]
126   C$(I+N1) = "S" + STR$(I)
 Variable:I -> _
 Variable:N1 -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:C$(_) -> $
 TextConstant:"S"
 Variable:I -> _
 FunctionStr:STR$(_) -> $
 BinaryOperatorPlus:+($,$) -> $
 AssignmentOperator:= $ -> $
127 NEXT I
 Variable:I -> _
128 FOR I = 1 TO N2
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N2 -> _"]
129   C1$(I) = C$(I+N1)
 Variable:I -> _
 Variable:C1$(_) -> $
 Variable:I -> _
 Variable:N1 -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:C$(_) -> $
 AssignmentOperator:= $ -> $
130 NEXT I
 Variable:I -> _
140 REM BUILD CENTRAL MATRIX (CONSTRAINTS)
 Remark:BUILD CENTRAL MATRIX (CONSTRAINTS)
141 DIM X(N2, N1)
 Variable:N2 -> _
 Variable:N1 -> _
 Declaration:X(,) -> _(,)
142 MAT READ X
 Variable:X(,) -> _(,)
143 DIM X(N2, N1+N2)' EXPAND TO INCLUDE SLACK VARIABLES
 Variable:N2 -> _
 Variable:N1 -> _
 Variable:N2 -> _
 BinaryOperatorPlus:+(_,_) -> _
 Declaration:X(,) -> _(,)
144 X(I,J) = 0 FOR J = N1+1 TO N1+N2 FOR I = 1 TO N2
 Variable:I -> _
 Variable:J -> _
 Variable:X(_,_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
 control: Variable:J -> _
 start:   ["Variable:N1 -> _", "NumericConstant:1", "BinaryOperatorPlus:+(_,_) -> _"]
 end:     ["Variable:N1 -> _", "Variable:N2 -> _", "BinaryOperatorPlus:+(_,_) -> _"]
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N2 -> _"]
145 X(I,I+N1) = 1 FOR I = 1 TO N2 ' SET EXPANSION TO IDEN MATRIX
 Variable:I -> _
 Variable:I -> _
 Variable:N1 -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:X(_,_) -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N2 -> _"]
160 REM BUILD RIGHT-HAND SIDE VALUES (CONSTANTS)
 Remark:BUILD RIGHT-HAND SIDE VALUES (CONSTANTS)
161 DIM B(N2)
 Variable:N2 -> _
 Declaration:B() -> _()
162 ARR READ B
 Variable:B() -> _()
170 REM COPY COEFFICIENTS FOR BASIC VARIABLES
 Remark:COPY COEFFICIENTS FOR BASIC VARIABLES
171 DIM R(N2)
 Variable:N2 -> _
 Declaration:R() -> _()
172 R(I) = 0 FOR I = 1 TO N2
 Variable:I -> _
 Variable:R(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N2 -> _"]
200 REM PRINT THE TABLEAU
 Remark:PRINT THE TABLEAU
201 PRINT
 CarriageControl:NL
202 PRINT "TABLEAU"
 TextConstant:"TABLEAU"
 CarriageControl:NL
203 PRINT
 CarriageControl:NL
204 PRINT " ","C->",
 TextConstant:" "
 CarriageControl:,
 TextConstant:"C->"
 CarriageControl:,
205 ARR PRINT C
 Variable:C() -> _()
 CarriageControl:NL
210 PRINT "CB","BV",
 TextConstant:"CB"
 CarriageControl:,
 TextConstant:"BV"
 CarriageControl:,
211 PRINT C$(I), FOR I = 1 TO N1+N2 
 Variable:I -> _
 Variable:C$(_) -> $
 CarriageControl:,
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N1 -> _", "Variable:N2 -> _", "BinaryOperatorPlus:+(_,_) -> _"]
212 PRINT "B"
 TextConstant:"B"
 CarriageControl:NL
220 FOR I = 1 TO N2
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N2 -> _"]
221   PRINT R(I),C1$(I),
 Variable:I -> _
 Variable:R(_) -> _
 CarriageControl:,
 Variable:I -> _
 Variable:C1$(_) -> $
 CarriageControl:,
222   PRINT X(I,J), FOR J = 1 TO N1+N2
 Variable:I -> _
 Variable:J -> _
 Variable:X(_,_) -> _
 CarriageControl:,
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N1 -> _", "Variable:N2 -> _", "BinaryOperatorPlus:+(_,_) -> _"]
230   PRINT B(I)
 Variable:I -> _
 Variable:B(_) -> _
 CarriageControl:NL
239 NEXT I
 Variable:I -> _
300 REM EVALUATE TABLEAU FOR OPTIMUM SOLUTION
 Remark:EVALUATE TABLEAU FOR OPTIMUM SOLUTION
301 DIM Z(N1+N2)
 Variable:N1 -> _
 Variable:N2 -> _
 BinaryOperatorPlus:+(_,_) -> _
 Declaration:Z() -> _()
302 Z(J) = 0 FOR J = 1 TO N1+N2
 Variable:J -> _
 Variable:Z(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N1 -> _", "Variable:N2 -> _", "BinaryOperatorPlus:+(_,_) -> _"]
305 FOR I = 1 TO N2
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N2 -> _"]
306   Z(J) = Z(J) + R(I)*X(I,J) FOR J = 1 TO N1+N2
 Variable:J -> _
 Variable:Z(_) -> _
 Variable:J -> _
 Variable:Z(_) -> _
 Variable:I -> _
 Variable:R(_) -> _
 Variable:I -> _
 Variable:J -> _
 Variable:X(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N1 -> _", "Variable:N2 -> _", "BinaryOperatorPlus:+(_,_) -> _"]
307 NEXT I
 Variable:I -> _
310 REM COMPUTE Z - C
 Remark:COMPUTE Z - C
311 ARR Y = Z - C
 Variable:Y() -> _()
 Variable:Z() -> _()
 Variable:C() -> _()
 BinaryOperatorMinus:-(_(),_()) -> _()
 AssignmentOperator:= _() -> _()
320 REM CHECK FOR OPTIMUM, IDENTIFY KEY COLUMN
 Remark:CHECK FOR OPTIMUM, IDENTIFY KEY COLUMN
321 J0 = 0
 Variable:J0 -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
322 M = 0
 Variable:M -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
323 FOR J = 1 TO N1+N2
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N1 -> _", "Variable:N2 -> _", "BinaryOperatorPlus:+(_,_) -> _"]
324   IF Y(J) >= M THEN 327
 Variable:J -> _
 Variable:Y(_) -> _
 Variable:M -> _
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 LineNumber:327
325   J0 = J
 Variable:J0 -> _
 Variable:J -> _
 AssignmentOperator:= _ -> _
326   M = Y(J)
 Variable:M -> _
 Variable:J -> _
 Variable:Y(_) -> _
 AssignmentOperator:= _ -> _
327 NEXT J
 Variable:J -> _
328 IF M >= 0 THEN 500
 Variable:M -> _
 NumericConstant:0
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 LineNumber:500
329 PRINT "NON-OPTIMUM."
 TextConstant:"NON-OPTIMUM."
 CarriageControl:NL
330 REM EVALUATE BASIC VARIABLES
 Remark:EVALUATE BASIC VARIABLES
331 DIM W(N2)
 Variable:N2 -> _
 Declaration:W() -> _()
332 W(I) = 0 FOR I = 1 TO N2
 Variable:I -> _
 Variable:W(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N2 -> _"]
333 W(I) = B(I) / X(I,J0) IF X(I,J0) <> 0 FOR I = 1 TO N2
 Variable:I -> _
 Variable:W(_) -> _
 Variable:I -> _
 Variable:B(_) -> _
 Variable:I -> _
 Variable:J0 -> _
 Variable:X(_,_) -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
 Variable:I -> _
 Variable:J0 -> _
 Variable:X(_,_) -> _
 NumericConstant:0
 BinaryOperatorNotEqual:<>(_,_) -> ?
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N2 -> _"]
340 REM PRINT TABLEAU WITH EVALUATION ROWS AND COLUMNS
 Remark:PRINT TABLEAU WITH EVALUATION ROWS AND COLUMNS
341 PRINT
 CarriageControl:NL
342 PRINT "EXPANDED TABLEAU"
 TextConstant:"EXPANDED TABLEAU"
 CarriageControl:NL
343 PRINT
 CarriageControl:NL
344 PRINT " ","C->",
 TextConstant:" "
 CarriageControl:,
 TextConstant:"C->"
 CarriageControl:,
345 ARR PRINT C
 Variable:C() -> _()
 CarriageControl:NL
350 PRINT "CB","BV",
 TextConstant:"CB"
 CarriageControl:,
 TextConstant:"BV"
 CarriageControl:,
351 PRINT C$(I), FOR I = 1 TO N1+N2 
 Variable:I -> _
 Variable:C$(_) -> $
 CarriageControl:,
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N1 -> _", "Variable:N2 -> _", "BinaryOperatorPlus:+(_,_) -> _"]
352 PRINT "B","B / ";C$(J0)
 TextConstant:"B"
 CarriageControl:,
 TextConstant:"B / "
 CarriageControl:;
 Variable:J0 -> _
 Variable:C$(_) -> $
 CarriageControl:NL
360 FOR I = 1 TO N2
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N2 -> _"]
361   PRINT R(I),C1$(I),
 Variable:I -> _
 Variable:R(_) -> _
 CarriageControl:,
 Variable:I -> _
 Variable:C1$(_) -> $
 CarriageControl:,
362   PRINT X(I,J), FOR J = 1 TO N1+N2
 Variable:I -> _
 Variable:J -> _
 Variable:X(_,_) -> _
 CarriageControl:,
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N1 -> _", "Variable:N2 -> _", "BinaryOperatorPlus:+(_,_) -> _"]
363   PRINT B(I),W(I)
 Variable:I -> _
 Variable:B(_) -> _
 CarriageControl:,
 Variable:I -> _
 Variable:W(_) -> _
 CarriageControl:NL
364 NEXT I
 Variable:I -> _
370 PRINT " ", "Z",
 TextConstant:" "
 CarriageControl:,
 TextConstant:"Z"
 CarriageControl:,
371 ARR PRINT Z
 Variable:Z() -> _()
 CarriageControl:NL
372 PRINT " ", "Z-C",
 TextConstant:" "
 CarriageControl:,
 TextConstant:"Z-C"
 CarriageControl:,
373 ARR PRINT Y
 Variable:Y() -> _()
 CarriageControl:NL
374 PRINT "KEY COLUMN";J0;"VARIABLE ";C$(J0);" ENTERS"
 TextConstant:"KEY COLUMN"
 CarriageControl:;
 Variable:J0 -> _
 CarriageControl:;
 TextConstant:"VARIABLE "
 CarriageControl:;
 Variable:J0 -> _
 Variable:C$(_) -> $
 CarriageControl:;
 TextConstant:" ENTERS"
 CarriageControl:NL
380 REM IDENTIFY KEY ROW (SMALLEST POSITIVE VALUE OF W)
 Remark:IDENTIFY KEY ROW (SMALLEST POSITIVE VALUE OF W)
381 I0 = 0
 Variable:I0 -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
382 M = 1E6
 Variable:M -> _
 NumericConstant:1E6
 AssignmentOperator:= =_ -> _
383 FOR I = 1 TO N2
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N2 -> _"]
384   IF W(I) <= 0 OR W(I) >= M THEN 387
 Variable:I -> _
 Variable:W(_) -> _
 NumericConstant:0
 BinaryOperatorLessEqual:<=(_,_) -> ?
 Variable:I -> _
 Variable:W(_) -> _
 Variable:M -> _
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 LineNumber:387
385   I0 = I
 Variable:I0 -> _
 Variable:I -> _
 AssignmentOperator:= _ -> _
386   M = W(I)
 Variable:M -> _
 Variable:I -> _
 Variable:W(_) -> _
 AssignmentOperator:= _ -> _
387 NEXT I
 Variable:I -> _
389 PRINT "KEY ROW";I0;"VARIABLE ";C1$(I0);" EXITS"
 TextConstant:"KEY ROW"
 CarriageControl:;
 Variable:I0 -> _
 CarriageControl:;
 TextConstant:"VARIABLE "
 CarriageControl:;
 Variable:I0 -> _
 Variable:C1$(_) -> $
 CarriageControl:;
 TextConstant:" EXITS"
 CarriageControl:NL
400 REM PIVOT ON KEY CELL
 Remark:PIVOT ON KEY CELL
401 REM CHANGE BASIC VARIABLE NAME AND COEFFICIENT
 Remark:CHANGE BASIC VARIABLE NAME AND COEFFICIENT
402 C1$(I0) = C$(J0)
 Variable:I0 -> _
 Variable:C1$(_) -> $
 Variable:J0 -> _
 Variable:C$(_) -> $
 AssignmentOperator:= $ -> $
403 R(I0) = C(J0)
 Variable:I0 -> _
 Variable:R(_) -> _
 Variable:J0 -> _
 Variable:C(_) -> _
 AssignmentOperator:= _ -> _
410 REM BUILD NEW MATRIX X2 AND ARRAY B2
 Remark:BUILD NEW MATRIX X2 AND ARRAY B2
411 MAT X2 = X
 Variable:X2(,) -> _(,)
 Variable:X(,) -> _(,)
 AssignmentOperator:= _(,) -> _(,)
412 ARR B2 = B
 Variable:B2() -> _()
 Variable:B() -> _()
 AssignmentOperator:= _() -> _()
420 REM ADJUST VALUES IN KEY ROW
 Remark:ADJUST VALUES IN KEY ROW
421 FOR J = 1 TO N1+N2
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N1 -> _", "Variable:N2 -> _", "BinaryOperatorPlus:+(_,_) -> _"]
422   X2(I0,J) = X(I0,J) / X(I0,J0)
 Variable:I0 -> _
 Variable:J -> _
 Variable:X2(_,_) -> _
 Variable:I0 -> _
 Variable:J -> _
 Variable:X(_,_) -> _
 Variable:I0 -> _
 Variable:J0 -> _
 Variable:X(_,_) -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
423 NEXT J
 Variable:J -> _
430 REM ADJUST VALUES IN OTHER ROWS
 Remark:ADJUST VALUES IN OTHER ROWS
431 FOR I = 1 TO N2
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N2 -> _"]
432   IF I = I0 THEN 436
 Variable:I -> _
 Variable:I0 -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:436
433   FOR J = 1 TO N1+N2
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N1 -> _", "Variable:N2 -> _", "BinaryOperatorPlus:+(_,_) -> _"]
434     X2(I,J) = X(I,J) - X(I,J0)*X(I0,J)/X(I0,J0)
 Variable:I -> _
 Variable:J -> _
 Variable:X2(_,_) -> _
 Variable:I -> _
 Variable:J -> _
 Variable:X(_,_) -> _
 Variable:I -> _
 Variable:J0 -> _
 Variable:X(_,_) -> _
 Variable:I0 -> _
 Variable:J -> _
 Variable:X(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:I0 -> _
 Variable:J0 -> _
 Variable:X(_,_) -> _
 BinaryOperatorDivide:/(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
435   NEXT J
 Variable:J -> _
436 NEXT I
 Variable:I -> _
440 REM ADJUST VALUES IN RIGHT-HAND-SIDE
 Remark:ADJUST VALUES IN RIGHT-HAND-SIDE
441 B2(I0) = B(I0) / X(I0,J0)
 Variable:I0 -> _
 Variable:B2(_) -> _
 Variable:I0 -> _
 Variable:B(_) -> _
 Variable:I0 -> _
 Variable:J0 -> _
 Variable:X(_,_) -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
442 FOR I = 1 TO N2
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N2 -> _"]
443   IF I = I0 THEN 445
 Variable:I -> _
 Variable:I0 -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:445
444   B2(I) = B(I) - X(I,J0)*B(I0)/X(I0,J0)
 Variable:I -> _
 Variable:B2(_) -> _
 Variable:I -> _
 Variable:B(_) -> _
 Variable:I -> _
 Variable:J0 -> _
 Variable:X(_,_) -> _
 Variable:I0 -> _
 Variable:B(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:I0 -> _
 Variable:J0 -> _
 Variable:X(_,_) -> _
 BinaryOperatorDivide:/(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
445 NEXT I
 Variable:I -> _
450 REM SWAP IN THE NEW MATRIX AND CONSTANTS
 Remark:SWAP IN THE NEW MATRIX AND CONSTANTS
451 MAT X = X2
 Variable:X(,) -> _(,)
 Variable:X2(,) -> _(,)
 AssignmentOperator:= _(,) -> _(,)
452 ARR B = B2
 Variable:B() -> _()
 Variable:B2() -> _()
 AssignmentOperator:= _() -> _()
453 GOTO 200
 LineNumber:200
500 REM NO MORE CHANGES
 Remark:NO MORE CHANGES
501 PRINT "SOLUTION FOUND"
 TextConstant:"SOLUTION FOUND"
 CarriageControl:NL
511 PRINT " ", "Z",
 TextConstant:" "
 CarriageControl:,
 TextConstant:"Z"
 CarriageControl:,
512 ARR PRINT Z
 Variable:Z() -> _()
 CarriageControl:NL
513 PRINT " ", "Z-C",
 TextConstant:" "
 CarriageControl:,
 TextConstant:"Z-C"
 CarriageControl:,
514 ARR PRINT Y
 Variable:Y() -> _()
 CarriageControl:NL
520 PRINT "OBJECTIVE VALUE"
 TextConstant:"OBJECTIVE VALUE"
 CarriageControl:NL
521 Z = 0
 Variable:Z -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
522 FOR I = 1 TO N2
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N2 -> _"]
523 PRINT C1$(I);" = ";B(I);" * ";R(I)
 Variable:I -> _
 Variable:C1$(_) -> $
 CarriageControl:;
 TextConstant:" = "
 CarriageControl:;
 Variable:I -> _
 Variable:B(_) -> _
 CarriageControl:;
 TextConstant:" * "
 CarriageControl:;
 Variable:I -> _
 Variable:R(_) -> _
 CarriageControl:NL
524 Z = Z + B(I)*R(I)
 Variable:Z -> _
 Variable:Z -> _
 Variable:I -> _
 Variable:B(_) -> _
 Variable:I -> _
 Variable:R(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
525 NEXT I
 Variable:I -> _
527 PRINT "Z = ";Z
 TextConstant:"Z = "
 CarriageControl:;
 Variable:Z -> _
 CarriageControl:NL
999 STOP
 
4000 REM NUMBER DECISION VARS, NUMBER CONSTRAINTS
 Remark:NUMBER DECISION VARS, NUMBER CONSTRAINTS
4001 DATA 2,4
 NumericConstant:2
 NumericConstant:4
4010 REM COEFFICIENTS FOR OBJECTIVE FUNCTION (WITHOUT SLACK)
 Remark:COEFFICIENTS FOR OBJECTIVE FUNCTION (WITHOUT SLACK)
4011 DATA 20,14
 NumericConstant:20
 NumericConstant:14
4020 REM CONSTRAINT COEFFICIENTS (WITHOUT SLACK)
 Remark:CONSTRAINT COEFFICIENTS (WITHOUT SLACK)
4021 DATA 6,2,8,6,6,4,40,25
 NumericConstant:6
 NumericConstant:2
 NumericConstant:8
 NumericConstant:6
 NumericConstant:6
 NumericConstant:4
 NumericConstant:40
 NumericConstant:25
4030 REM RIGHT-HAND SIDE CONSTANTS
 Remark:RIGHT-HAND SIDE CONSTANTS
4031 DATA 2000,2000,1440,9600
 NumericConstant:2000
 NumericConstant:2000
 NumericConstant:1440
 NumericConstant:9600
4999 END
 

